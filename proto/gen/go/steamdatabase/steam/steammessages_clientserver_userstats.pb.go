// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: steammessages_clientserver_userstats.proto

package steam

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CMsgClientGetUserStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId             *uint64 `protobuf:"fixed64,1,opt,name=game_id,json=gameId" json:"game_id,omitempty"`
	CrcStats           *uint32 `protobuf:"varint,2,opt,name=crc_stats,json=crcStats" json:"crc_stats,omitempty"`
	SchemaLocalVersion *int32  `protobuf:"varint,3,opt,name=schema_local_version,json=schemaLocalVersion" json:"schema_local_version,omitempty"`
	SteamIdForUser     *uint64 `protobuf:"fixed64,4,opt,name=steam_id_for_user,json=steamIdForUser" json:"steam_id_for_user,omitempty"`
}

func (x *CMsgClientGetUserStats) Reset() {
	*x = CMsgClientGetUserStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_userstats_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientGetUserStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientGetUserStats) ProtoMessage() {}

func (x *CMsgClientGetUserStats) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_userstats_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientGetUserStats.ProtoReflect.Descriptor instead.
func (*CMsgClientGetUserStats) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_userstats_proto_rawDescGZIP(), []int{0}
}

func (x *CMsgClientGetUserStats) GetGameId() uint64 {
	if x != nil && x.GameId != nil {
		return *x.GameId
	}
	return 0
}

func (x *CMsgClientGetUserStats) GetCrcStats() uint32 {
	if x != nil && x.CrcStats != nil {
		return *x.CrcStats
	}
	return 0
}

func (x *CMsgClientGetUserStats) GetSchemaLocalVersion() int32 {
	if x != nil && x.SchemaLocalVersion != nil {
		return *x.SchemaLocalVersion
	}
	return 0
}

func (x *CMsgClientGetUserStats) GetSteamIdForUser() uint64 {
	if x != nil && x.SteamIdForUser != nil {
		return *x.SteamIdForUser
	}
	return 0
}

type CMsgClientGetUserStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId            *uint64                                              `protobuf:"fixed64,1,opt,name=game_id,json=gameId" json:"game_id,omitempty"`
	Eresult           *int32                                               `protobuf:"varint,2,opt,name=eresult,def=2" json:"eresult,omitempty"`
	CrcStats          *uint32                                              `protobuf:"varint,3,opt,name=crc_stats,json=crcStats" json:"crc_stats,omitempty"`
	Schema            []byte                                               `protobuf:"bytes,4,opt,name=schema" json:"schema,omitempty"`
	Stats             []*CMsgClientGetUserStatsResponse_Stats              `protobuf:"bytes,5,rep,name=stats" json:"stats,omitempty"`
	AchievementBlocks []*CMsgClientGetUserStatsResponse_Achievement_Blocks `protobuf:"bytes,6,rep,name=achievement_blocks,json=achievementBlocks" json:"achievement_blocks,omitempty"`
}

// Default values for CMsgClientGetUserStatsResponse fields.
const (
	Default_CMsgClientGetUserStatsResponse_Eresult = int32(2)
)

func (x *CMsgClientGetUserStatsResponse) Reset() {
	*x = CMsgClientGetUserStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_userstats_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientGetUserStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientGetUserStatsResponse) ProtoMessage() {}

func (x *CMsgClientGetUserStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_userstats_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientGetUserStatsResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientGetUserStatsResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_userstats_proto_rawDescGZIP(), []int{1}
}

func (x *CMsgClientGetUserStatsResponse) GetGameId() uint64 {
	if x != nil && x.GameId != nil {
		return *x.GameId
	}
	return 0
}

func (x *CMsgClientGetUserStatsResponse) GetEresult() int32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return Default_CMsgClientGetUserStatsResponse_Eresult
}

func (x *CMsgClientGetUserStatsResponse) GetCrcStats() uint32 {
	if x != nil && x.CrcStats != nil {
		return *x.CrcStats
	}
	return 0
}

func (x *CMsgClientGetUserStatsResponse) GetSchema() []byte {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *CMsgClientGetUserStatsResponse) GetStats() []*CMsgClientGetUserStatsResponse_Stats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *CMsgClientGetUserStatsResponse) GetAchievementBlocks() []*CMsgClientGetUserStatsResponse_Achievement_Blocks {
	if x != nil {
		return x.AchievementBlocks
	}
	return nil
}

type CMsgClientStoreUserStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId                *uint64                                                     `protobuf:"fixed64,1,opt,name=game_id,json=gameId" json:"game_id,omitempty"`
	Eresult               *int32                                                      `protobuf:"varint,2,opt,name=eresult,def=2" json:"eresult,omitempty"`
	CrcStats              *uint32                                                     `protobuf:"varint,3,opt,name=crc_stats,json=crcStats" json:"crc_stats,omitempty"`
	StatsFailedValidation []*CMsgClientStoreUserStatsResponse_Stats_Failed_Validation `protobuf:"bytes,4,rep,name=stats_failed_validation,json=statsFailedValidation" json:"stats_failed_validation,omitempty"`
	StatsOutOfDate        *bool                                                       `protobuf:"varint,5,opt,name=stats_out_of_date,json=statsOutOfDate" json:"stats_out_of_date,omitempty"`
}

// Default values for CMsgClientStoreUserStatsResponse fields.
const (
	Default_CMsgClientStoreUserStatsResponse_Eresult = int32(2)
)

func (x *CMsgClientStoreUserStatsResponse) Reset() {
	*x = CMsgClientStoreUserStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_userstats_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientStoreUserStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientStoreUserStatsResponse) ProtoMessage() {}

func (x *CMsgClientStoreUserStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_userstats_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientStoreUserStatsResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientStoreUserStatsResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_userstats_proto_rawDescGZIP(), []int{2}
}

func (x *CMsgClientStoreUserStatsResponse) GetGameId() uint64 {
	if x != nil && x.GameId != nil {
		return *x.GameId
	}
	return 0
}

func (x *CMsgClientStoreUserStatsResponse) GetEresult() int32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return Default_CMsgClientStoreUserStatsResponse_Eresult
}

func (x *CMsgClientStoreUserStatsResponse) GetCrcStats() uint32 {
	if x != nil && x.CrcStats != nil {
		return *x.CrcStats
	}
	return 0
}

func (x *CMsgClientStoreUserStatsResponse) GetStatsFailedValidation() []*CMsgClientStoreUserStatsResponse_Stats_Failed_Validation {
	if x != nil {
		return x.StatsFailedValidation
	}
	return nil
}

func (x *CMsgClientStoreUserStatsResponse) GetStatsOutOfDate() bool {
	if x != nil && x.StatsOutOfDate != nil {
		return *x.StatsOutOfDate
	}
	return false
}

type CMsgClientStoreUserStats2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId        *uint64                            `protobuf:"fixed64,1,opt,name=game_id,json=gameId" json:"game_id,omitempty"`
	SettorSteamId *uint64                            `protobuf:"fixed64,2,opt,name=settor_steam_id,json=settorSteamId" json:"settor_steam_id,omitempty"`
	SetteeSteamId *uint64                            `protobuf:"fixed64,3,opt,name=settee_steam_id,json=setteeSteamId" json:"settee_steam_id,omitempty"`
	CrcStats      *uint32                            `protobuf:"varint,4,opt,name=crc_stats,json=crcStats" json:"crc_stats,omitempty"`
	ExplicitReset *bool                              `protobuf:"varint,5,opt,name=explicit_reset,json=explicitReset" json:"explicit_reset,omitempty"`
	Stats         []*CMsgClientStoreUserStats2_Stats `protobuf:"bytes,6,rep,name=stats" json:"stats,omitempty"`
}

func (x *CMsgClientStoreUserStats2) Reset() {
	*x = CMsgClientStoreUserStats2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_userstats_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientStoreUserStats2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientStoreUserStats2) ProtoMessage() {}

func (x *CMsgClientStoreUserStats2) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_userstats_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientStoreUserStats2.ProtoReflect.Descriptor instead.
func (*CMsgClientStoreUserStats2) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_userstats_proto_rawDescGZIP(), []int{3}
}

func (x *CMsgClientStoreUserStats2) GetGameId() uint64 {
	if x != nil && x.GameId != nil {
		return *x.GameId
	}
	return 0
}

func (x *CMsgClientStoreUserStats2) GetSettorSteamId() uint64 {
	if x != nil && x.SettorSteamId != nil {
		return *x.SettorSteamId
	}
	return 0
}

func (x *CMsgClientStoreUserStats2) GetSetteeSteamId() uint64 {
	if x != nil && x.SetteeSteamId != nil {
		return *x.SetteeSteamId
	}
	return 0
}

func (x *CMsgClientStoreUserStats2) GetCrcStats() uint32 {
	if x != nil && x.CrcStats != nil {
		return *x.CrcStats
	}
	return 0
}

func (x *CMsgClientStoreUserStats2) GetExplicitReset() bool {
	if x != nil && x.ExplicitReset != nil {
		return *x.ExplicitReset
	}
	return false
}

func (x *CMsgClientStoreUserStats2) GetStats() []*CMsgClientStoreUserStats2_Stats {
	if x != nil {
		return x.Stats
	}
	return nil
}

type CMsgClientStatsUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SteamId      *uint64                                 `protobuf:"fixed64,1,opt,name=steam_id,json=steamId" json:"steam_id,omitempty"`
	GameId       *uint64                                 `protobuf:"fixed64,2,opt,name=game_id,json=gameId" json:"game_id,omitempty"`
	CrcStats     *uint32                                 `protobuf:"varint,3,opt,name=crc_stats,json=crcStats" json:"crc_stats,omitempty"`
	UpdatedStats []*CMsgClientStatsUpdated_Updated_Stats `protobuf:"bytes,4,rep,name=updated_stats,json=updatedStats" json:"updated_stats,omitempty"`
}

func (x *CMsgClientStatsUpdated) Reset() {
	*x = CMsgClientStatsUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_userstats_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientStatsUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientStatsUpdated) ProtoMessage() {}

func (x *CMsgClientStatsUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_userstats_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientStatsUpdated.ProtoReflect.Descriptor instead.
func (*CMsgClientStatsUpdated) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_userstats_proto_rawDescGZIP(), []int{4}
}

func (x *CMsgClientStatsUpdated) GetSteamId() uint64 {
	if x != nil && x.SteamId != nil {
		return *x.SteamId
	}
	return 0
}

func (x *CMsgClientStatsUpdated) GetGameId() uint64 {
	if x != nil && x.GameId != nil {
		return *x.GameId
	}
	return 0
}

func (x *CMsgClientStatsUpdated) GetCrcStats() uint32 {
	if x != nil && x.CrcStats != nil {
		return *x.CrcStats
	}
	return 0
}

func (x *CMsgClientStatsUpdated) GetUpdatedStats() []*CMsgClientStatsUpdated_Updated_Stats {
	if x != nil {
		return x.UpdatedStats
	}
	return nil
}

type CMsgClientStoreUserStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId        *uint64                                    `protobuf:"fixed64,1,opt,name=game_id,json=gameId" json:"game_id,omitempty"`
	ExplicitReset *bool                                      `protobuf:"varint,2,opt,name=explicit_reset,json=explicitReset" json:"explicit_reset,omitempty"`
	StatsToStore  []*CMsgClientStoreUserStats_Stats_To_Store `protobuf:"bytes,3,rep,name=stats_to_store,json=statsToStore" json:"stats_to_store,omitempty"`
}

func (x *CMsgClientStoreUserStats) Reset() {
	*x = CMsgClientStoreUserStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_userstats_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientStoreUserStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientStoreUserStats) ProtoMessage() {}

func (x *CMsgClientStoreUserStats) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_userstats_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientStoreUserStats.ProtoReflect.Descriptor instead.
func (*CMsgClientStoreUserStats) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_userstats_proto_rawDescGZIP(), []int{5}
}

func (x *CMsgClientStoreUserStats) GetGameId() uint64 {
	if x != nil && x.GameId != nil {
		return *x.GameId
	}
	return 0
}

func (x *CMsgClientStoreUserStats) GetExplicitReset() bool {
	if x != nil && x.ExplicitReset != nil {
		return *x.ExplicitReset
	}
	return false
}

func (x *CMsgClientStoreUserStats) GetStatsToStore() []*CMsgClientStoreUserStats_Stats_To_Store {
	if x != nil {
		return x.StatsToStore
	}
	return nil
}

type CMsgClientGetUserStatsResponse_Stats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatId    *uint32 `protobuf:"varint,1,opt,name=stat_id,json=statId" json:"stat_id,omitempty"`
	StatValue *uint32 `protobuf:"varint,2,opt,name=stat_value,json=statValue" json:"stat_value,omitempty"`
}

func (x *CMsgClientGetUserStatsResponse_Stats) Reset() {
	*x = CMsgClientGetUserStatsResponse_Stats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_userstats_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientGetUserStatsResponse_Stats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientGetUserStatsResponse_Stats) ProtoMessage() {}

func (x *CMsgClientGetUserStatsResponse_Stats) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_userstats_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientGetUserStatsResponse_Stats.ProtoReflect.Descriptor instead.
func (*CMsgClientGetUserStatsResponse_Stats) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_userstats_proto_rawDescGZIP(), []int{1, 0}
}

func (x *CMsgClientGetUserStatsResponse_Stats) GetStatId() uint32 {
	if x != nil && x.StatId != nil {
		return *x.StatId
	}
	return 0
}

func (x *CMsgClientGetUserStatsResponse_Stats) GetStatValue() uint32 {
	if x != nil && x.StatValue != nil {
		return *x.StatValue
	}
	return 0
}

type CMsgClientGetUserStatsResponse_Achievement_Blocks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AchievementId *uint32  `protobuf:"varint,1,opt,name=achievement_id,json=achievementId" json:"achievement_id,omitempty"`
	UnlockTime    []uint32 `protobuf:"fixed32,2,rep,name=unlock_time,json=unlockTime" json:"unlock_time,omitempty"`
}

func (x *CMsgClientGetUserStatsResponse_Achievement_Blocks) Reset() {
	*x = CMsgClientGetUserStatsResponse_Achievement_Blocks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_userstats_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientGetUserStatsResponse_Achievement_Blocks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientGetUserStatsResponse_Achievement_Blocks) ProtoMessage() {}

func (x *CMsgClientGetUserStatsResponse_Achievement_Blocks) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_userstats_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientGetUserStatsResponse_Achievement_Blocks.ProtoReflect.Descriptor instead.
func (*CMsgClientGetUserStatsResponse_Achievement_Blocks) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_userstats_proto_rawDescGZIP(), []int{1, 1}
}

func (x *CMsgClientGetUserStatsResponse_Achievement_Blocks) GetAchievementId() uint32 {
	if x != nil && x.AchievementId != nil {
		return *x.AchievementId
	}
	return 0
}

func (x *CMsgClientGetUserStatsResponse_Achievement_Blocks) GetUnlockTime() []uint32 {
	if x != nil {
		return x.UnlockTime
	}
	return nil
}

type CMsgClientStoreUserStatsResponse_Stats_Failed_Validation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatId            *uint32 `protobuf:"varint,1,opt,name=stat_id,json=statId" json:"stat_id,omitempty"`
	RevertedStatValue *uint32 `protobuf:"varint,2,opt,name=reverted_stat_value,json=revertedStatValue" json:"reverted_stat_value,omitempty"`
}

func (x *CMsgClientStoreUserStatsResponse_Stats_Failed_Validation) Reset() {
	*x = CMsgClientStoreUserStatsResponse_Stats_Failed_Validation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_userstats_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientStoreUserStatsResponse_Stats_Failed_Validation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientStoreUserStatsResponse_Stats_Failed_Validation) ProtoMessage() {}

func (x *CMsgClientStoreUserStatsResponse_Stats_Failed_Validation) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_userstats_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientStoreUserStatsResponse_Stats_Failed_Validation.ProtoReflect.Descriptor instead.
func (*CMsgClientStoreUserStatsResponse_Stats_Failed_Validation) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_userstats_proto_rawDescGZIP(), []int{2, 0}
}

func (x *CMsgClientStoreUserStatsResponse_Stats_Failed_Validation) GetStatId() uint32 {
	if x != nil && x.StatId != nil {
		return *x.StatId
	}
	return 0
}

func (x *CMsgClientStoreUserStatsResponse_Stats_Failed_Validation) GetRevertedStatValue() uint32 {
	if x != nil && x.RevertedStatValue != nil {
		return *x.RevertedStatValue
	}
	return 0
}

type CMsgClientStoreUserStats2_Stats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatId    *uint32 `protobuf:"varint,1,opt,name=stat_id,json=statId" json:"stat_id,omitempty"`
	StatValue *uint32 `protobuf:"varint,2,opt,name=stat_value,json=statValue" json:"stat_value,omitempty"`
}

func (x *CMsgClientStoreUserStats2_Stats) Reset() {
	*x = CMsgClientStoreUserStats2_Stats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_userstats_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientStoreUserStats2_Stats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientStoreUserStats2_Stats) ProtoMessage() {}

func (x *CMsgClientStoreUserStats2_Stats) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_userstats_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientStoreUserStats2_Stats.ProtoReflect.Descriptor instead.
func (*CMsgClientStoreUserStats2_Stats) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_userstats_proto_rawDescGZIP(), []int{3, 0}
}

func (x *CMsgClientStoreUserStats2_Stats) GetStatId() uint32 {
	if x != nil && x.StatId != nil {
		return *x.StatId
	}
	return 0
}

func (x *CMsgClientStoreUserStats2_Stats) GetStatValue() uint32 {
	if x != nil && x.StatValue != nil {
		return *x.StatValue
	}
	return 0
}

type CMsgClientStatsUpdated_Updated_Stats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatId    *uint32 `protobuf:"varint,1,opt,name=stat_id,json=statId" json:"stat_id,omitempty"`
	StatValue *uint32 `protobuf:"varint,2,opt,name=stat_value,json=statValue" json:"stat_value,omitempty"`
}

func (x *CMsgClientStatsUpdated_Updated_Stats) Reset() {
	*x = CMsgClientStatsUpdated_Updated_Stats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_userstats_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientStatsUpdated_Updated_Stats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientStatsUpdated_Updated_Stats) ProtoMessage() {}

func (x *CMsgClientStatsUpdated_Updated_Stats) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_userstats_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientStatsUpdated_Updated_Stats.ProtoReflect.Descriptor instead.
func (*CMsgClientStatsUpdated_Updated_Stats) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_userstats_proto_rawDescGZIP(), []int{4, 0}
}

func (x *CMsgClientStatsUpdated_Updated_Stats) GetStatId() uint32 {
	if x != nil && x.StatId != nil {
		return *x.StatId
	}
	return 0
}

func (x *CMsgClientStatsUpdated_Updated_Stats) GetStatValue() uint32 {
	if x != nil && x.StatValue != nil {
		return *x.StatValue
	}
	return 0
}

type CMsgClientStoreUserStats_Stats_To_Store struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatId    *uint32 `protobuf:"varint,1,opt,name=stat_id,json=statId" json:"stat_id,omitempty"`
	StatValue *uint32 `protobuf:"varint,2,opt,name=stat_value,json=statValue" json:"stat_value,omitempty"`
}

func (x *CMsgClientStoreUserStats_Stats_To_Store) Reset() {
	*x = CMsgClientStoreUserStats_Stats_To_Store{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_userstats_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientStoreUserStats_Stats_To_Store) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientStoreUserStats_Stats_To_Store) ProtoMessage() {}

func (x *CMsgClientStoreUserStats_Stats_To_Store) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_userstats_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientStoreUserStats_Stats_To_Store.ProtoReflect.Descriptor instead.
func (*CMsgClientStoreUserStats_Stats_To_Store) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_userstats_proto_rawDescGZIP(), []int{5, 0}
}

func (x *CMsgClientStoreUserStats_Stats_To_Store) GetStatId() uint32 {
	if x != nil && x.StatId != nil {
		return *x.StatId
	}
	return 0
}

func (x *CMsgClientStoreUserStats_Stats_To_Store) GetStatValue() uint32 {
	if x != nil && x.StatValue != nil {
		return *x.StatValue
	}
	return 0
}

var File_steammessages_clientserver_userstats_proto protoreflect.FileDescriptor

var file_steammessages_clientserver_userstats_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x73, 0x74,
	0x65, 0x61, 0x6d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xab, 0x01, 0x0a, 0x16, 0x43, 0x4d, 0x73, 0x67, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x06, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72,
	0x63, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63,
	0x72, 0x63, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x11, 0x73, 0x74, 0x65,
	0x61, 0x6d, 0x5f, 0x69, 0x64, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x06, 0x52, 0x0e, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x46, 0x6f, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x22, 0xca, 0x03, 0x0a, 0x1e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x3a, 0x01, 0x32, 0x52, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x72, 0x63, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x63, 0x72, 0x63, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x12, 0x3b, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x12,
	0x61, 0x0a, 0x12, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x43, 0x4d,
	0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x63, 0x68,
	0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52,
	0x11, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x1a, 0x3f, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x73,
	0x74, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x1a, 0x5c, 0x0a, 0x12, 0x41, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x63, 0x68,
	0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0d, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x07, 0x52, 0x0a, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0xf7, 0x02, 0x0a, 0x20, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x3a, 0x01, 0x32, 0x52, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x72, 0x63, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x63, 0x72, 0x63, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x71, 0x0a, 0x17, 0x73, 0x74, 0x61,
	0x74, 0x73, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x43, 0x4d, 0x73,
	0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x5f, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x15, 0x73, 0x74, 0x61, 0x74, 0x73, 0x46, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x11,
	0x73, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x73, 0x4f, 0x75,
	0x74, 0x4f, 0x66, 0x44, 0x61, 0x74, 0x65, 0x1a, 0x62, 0x0a, 0x17, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x5f, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x72,
	0x65, 0x76, 0x65, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x72, 0x65, 0x76, 0x65, 0x72, 0x74,
	0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xc1, 0x02, 0x0a, 0x19,
	0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x32, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x65, 0x74, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x65,
	0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0d, 0x73, 0x65, 0x74,
	0x74, 0x6f, 0x72, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x65,
	0x74, 0x74, 0x65, 0x65, 0x5f, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x06, 0x52, 0x0d, 0x73, 0x65, 0x74, 0x74, 0x65, 0x65, 0x53, 0x74, 0x65, 0x61, 0x6d,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x63, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x72, 0x63, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12,
	0x25, 0x0a, 0x0e, 0x65, 0x78, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x65,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x65, 0x78, 0x70, 0x6c, 0x69, 0x63, 0x69,
	0x74, 0x52, 0x65, 0x73, 0x65, 0x74, 0x12, 0x36, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x32, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x1a, 0x3f,
	0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0xfe, 0x01, 0x0a, 0x16, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74,
	0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x73, 0x74,
	0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x72, 0x63, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x63, 0x72, 0x63, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x4a, 0x0a, 0x0d, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x73, 0x1a, 0x47, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0xf4, 0x01, 0x0a, 0x18, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x17, 0x0a,
	0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x52, 0x06,
	0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x78, 0x70, 0x6c, 0x69, 0x63,
	0x69, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d,
	0x65, 0x78, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x52, 0x65, 0x73, 0x65, 0x74, 0x12, 0x4e, 0x0a,
	0x0e, 0x73, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x54, 0x6f, 0x5f, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52,
	0x0c, 0x73, 0x74, 0x61, 0x74, 0x73, 0x54, 0x6f, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x1a, 0x48, 0x0a,
	0x0e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x54, 0x6f, 0x5f, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x45, 0x42, 0x27, 0x53, 0x74, 0x65, 0x61, 0x6d,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x73, 0x74, 0x61, 0x74, 0x73, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x48, 0x01, 0x50, 0x01, 0x5a, 0x13, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x80, 0x01, 0x00,
}

var (
	file_steammessages_clientserver_userstats_proto_rawDescOnce sync.Once
	file_steammessages_clientserver_userstats_proto_rawDescData = file_steammessages_clientserver_userstats_proto_rawDesc
)

func file_steammessages_clientserver_userstats_proto_rawDescGZIP() []byte {
	file_steammessages_clientserver_userstats_proto_rawDescOnce.Do(func() {
		file_steammessages_clientserver_userstats_proto_rawDescData = protoimpl.X.CompressGZIP(file_steammessages_clientserver_userstats_proto_rawDescData)
	})
	return file_steammessages_clientserver_userstats_proto_rawDescData
}

var file_steammessages_clientserver_userstats_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_steammessages_clientserver_userstats_proto_goTypes = []interface{}{
	(*CMsgClientGetUserStats)(nil),                                   // 0: CMsgClientGetUserStats
	(*CMsgClientGetUserStatsResponse)(nil),                           // 1: CMsgClientGetUserStatsResponse
	(*CMsgClientStoreUserStatsResponse)(nil),                         // 2: CMsgClientStoreUserStatsResponse
	(*CMsgClientStoreUserStats2)(nil),                                // 3: CMsgClientStoreUserStats2
	(*CMsgClientStatsUpdated)(nil),                                   // 4: CMsgClientStatsUpdated
	(*CMsgClientStoreUserStats)(nil),                                 // 5: CMsgClientStoreUserStats
	(*CMsgClientGetUserStatsResponse_Stats)(nil),                     // 6: CMsgClientGetUserStatsResponse.Stats
	(*CMsgClientGetUserStatsResponse_Achievement_Blocks)(nil),        // 7: CMsgClientGetUserStatsResponse.Achievement_Blocks
	(*CMsgClientStoreUserStatsResponse_Stats_Failed_Validation)(nil), // 8: CMsgClientStoreUserStatsResponse.Stats_Failed_Validation
	(*CMsgClientStoreUserStats2_Stats)(nil),                          // 9: CMsgClientStoreUserStats2.Stats
	(*CMsgClientStatsUpdated_Updated_Stats)(nil),                     // 10: CMsgClientStatsUpdated.Updated_Stats
	(*CMsgClientStoreUserStats_Stats_To_Store)(nil),                  // 11: CMsgClientStoreUserStats.Stats_To_Store
}
var file_steammessages_clientserver_userstats_proto_depIdxs = []int32{
	6,  // 0: CMsgClientGetUserStatsResponse.stats:type_name -> CMsgClientGetUserStatsResponse.Stats
	7,  // 1: CMsgClientGetUserStatsResponse.achievement_blocks:type_name -> CMsgClientGetUserStatsResponse.Achievement_Blocks
	8,  // 2: CMsgClientStoreUserStatsResponse.stats_failed_validation:type_name -> CMsgClientStoreUserStatsResponse.Stats_Failed_Validation
	9,  // 3: CMsgClientStoreUserStats2.stats:type_name -> CMsgClientStoreUserStats2.Stats
	10, // 4: CMsgClientStatsUpdated.updated_stats:type_name -> CMsgClientStatsUpdated.Updated_Stats
	11, // 5: CMsgClientStoreUserStats.stats_to_store:type_name -> CMsgClientStoreUserStats.Stats_To_Store
	6,  // [6:6] is the sub-list for method output_type
	6,  // [6:6] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_steammessages_clientserver_userstats_proto_init() }
func file_steammessages_clientserver_userstats_proto_init() {
	if File_steammessages_clientserver_userstats_proto != nil {
		return
	}
	file_steammessages_base_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_steammessages_clientserver_userstats_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientGetUserStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_userstats_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientGetUserStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_userstats_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientStoreUserStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_userstats_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientStoreUserStats2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_userstats_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientStatsUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_userstats_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientStoreUserStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_userstats_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientGetUserStatsResponse_Stats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_userstats_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientGetUserStatsResponse_Achievement_Blocks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_userstats_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientStoreUserStatsResponse_Stats_Failed_Validation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_userstats_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientStoreUserStats2_Stats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_userstats_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientStatsUpdated_Updated_Stats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_userstats_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientStoreUserStats_Stats_To_Store); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_steammessages_clientserver_userstats_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_steammessages_clientserver_userstats_proto_goTypes,
		DependencyIndexes: file_steammessages_clientserver_userstats_proto_depIdxs,
		MessageInfos:      file_steammessages_clientserver_userstats_proto_msgTypes,
	}.Build()
	File_steammessages_clientserver_userstats_proto = out.File
	file_steammessages_clientserver_userstats_proto_rawDesc = nil
	file_steammessages_clientserver_userstats_proto_goTypes = nil
	file_steammessages_clientserver_userstats_proto_depIdxs = nil
}
