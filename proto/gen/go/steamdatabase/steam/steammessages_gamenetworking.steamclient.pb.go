// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: steammessages_gamenetworking.steamclient.proto

package steam

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CGameNetworking_AllocateFakeIP_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId        *uint32 `protobuf:"varint,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	NumFakePorts *uint32 `protobuf:"varint,2,opt,name=num_fake_ports,json=numFakePorts" json:"num_fake_ports,omitempty"`
}

func (x *CGameNetworking_AllocateFakeIP_Request) Reset() {
	*x = CGameNetworking_AllocateFakeIP_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_gamenetworking_steamclient_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CGameNetworking_AllocateFakeIP_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGameNetworking_AllocateFakeIP_Request) ProtoMessage() {}

func (x *CGameNetworking_AllocateFakeIP_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_gamenetworking_steamclient_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGameNetworking_AllocateFakeIP_Request.ProtoReflect.Descriptor instead.
func (*CGameNetworking_AllocateFakeIP_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_gamenetworking_steamclient_proto_rawDescGZIP(), []int{0}
}

func (x *CGameNetworking_AllocateFakeIP_Request) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *CGameNetworking_AllocateFakeIP_Request) GetNumFakePorts() uint32 {
	if x != nil && x.NumFakePorts != nil {
		return *x.NumFakePorts
	}
	return 0
}

type CGameNetworking_AllocateFakeIP_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FakeIp    *uint32  `protobuf:"fixed32,1,opt,name=fake_ip,json=fakeIp" json:"fake_ip,omitempty"`
	FakePorts []uint32 `protobuf:"varint,2,rep,name=fake_ports,json=fakePorts" json:"fake_ports,omitempty"`
}

func (x *CGameNetworking_AllocateFakeIP_Response) Reset() {
	*x = CGameNetworking_AllocateFakeIP_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_gamenetworking_steamclient_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CGameNetworking_AllocateFakeIP_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGameNetworking_AllocateFakeIP_Response) ProtoMessage() {}

func (x *CGameNetworking_AllocateFakeIP_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_gamenetworking_steamclient_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGameNetworking_AllocateFakeIP_Response.ProtoReflect.Descriptor instead.
func (*CGameNetworking_AllocateFakeIP_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_gamenetworking_steamclient_proto_rawDescGZIP(), []int{1}
}

func (x *CGameNetworking_AllocateFakeIP_Response) GetFakeIp() uint32 {
	if x != nil && x.FakeIp != nil {
		return *x.FakeIp
	}
	return 0
}

func (x *CGameNetworking_AllocateFakeIP_Response) GetFakePorts() []uint32 {
	if x != nil {
		return x.FakePorts
	}
	return nil
}

type CGameNetworking_ReleaseFakeIP_Notification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId     *uint32  `protobuf:"varint,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	FakeIp    *uint32  `protobuf:"fixed32,2,opt,name=fake_ip,json=fakeIp" json:"fake_ip,omitempty"`
	FakePorts []uint32 `protobuf:"varint,3,rep,name=fake_ports,json=fakePorts" json:"fake_ports,omitempty"`
}

func (x *CGameNetworking_ReleaseFakeIP_Notification) Reset() {
	*x = CGameNetworking_ReleaseFakeIP_Notification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_gamenetworking_steamclient_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CGameNetworking_ReleaseFakeIP_Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGameNetworking_ReleaseFakeIP_Notification) ProtoMessage() {}

func (x *CGameNetworking_ReleaseFakeIP_Notification) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_gamenetworking_steamclient_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGameNetworking_ReleaseFakeIP_Notification.ProtoReflect.Descriptor instead.
func (*CGameNetworking_ReleaseFakeIP_Notification) Descriptor() ([]byte, []int) {
	return file_steammessages_gamenetworking_steamclient_proto_rawDescGZIP(), []int{2}
}

func (x *CGameNetworking_ReleaseFakeIP_Notification) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *CGameNetworking_ReleaseFakeIP_Notification) GetFakeIp() uint32 {
	if x != nil && x.FakeIp != nil {
		return *x.FakeIp
	}
	return 0
}

func (x *CGameNetworking_ReleaseFakeIP_Notification) GetFakePorts() []uint32 {
	if x != nil {
		return x.FakePorts
	}
	return nil
}

var File_steammessages_gamenetworking_steamclient_proto protoreflect.FileDescriptor

var file_steammessages_gamenetworking_steamclient_proto_rawDesc = []byte{
	0x0a, 0x2e, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f,
	0x67, 0x61, 0x6d, 0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x73,
	0x74, 0x65, 0x61, 0x6d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x18, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x73, 0x74, 0x65, 0x61,
	0x6d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x65, 0x0a, 0x26, 0x43, 0x47, 0x61, 0x6d,
	0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x41, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x65, 0x46, 0x61, 0x6b, 0x65, 0x49, 0x50, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x6e, 0x75, 0x6d,
	0x5f, 0x66, 0x61, 0x6b, 0x65, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0c, 0x6e, 0x75, 0x6d, 0x46, 0x61, 0x6b, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x22,
	0x61, 0x0a, 0x27, 0x43, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x5f, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x46, 0x61, 0x6b, 0x65, 0x49,
	0x50, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x61,
	0x6b, 0x65, 0x5f, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x07, 0x52, 0x06, 0x66, 0x61, 0x6b,
	0x65, 0x49, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x61, 0x6b, 0x65, 0x5f, 0x70, 0x6f, 0x72, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x09, 0x66, 0x61, 0x6b, 0x65, 0x50, 0x6f, 0x72,
	0x74, 0x73, 0x22, 0x7b, 0x0a, 0x2a, 0x43, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x46, 0x61, 0x6b,
	0x65, 0x49, 0x50, 0x5f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x61, 0x6b, 0x65, 0x5f,
	0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x07, 0x52, 0x06, 0x66, 0x61, 0x6b, 0x65, 0x49, 0x70,
	0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x61, 0x6b, 0x65, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x09, 0x66, 0x61, 0x6b, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x32,
	0xd2, 0x02, 0x0a, 0x0e, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x12, 0x8c, 0x01, 0x0a, 0x0e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x46,
	0x61, 0x6b, 0x65, 0x49, 0x50, 0x12, 0x27, 0x2e, 0x43, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65,
	0x46, 0x61, 0x6b, 0x65, 0x49, 0x50, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28,
	0x2e, 0x43, 0x47, 0x61, 0x6d, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x5f, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x46, 0x61, 0x6b, 0x65, 0x49, 0x50, 0x5f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xb5, 0x18, 0x23, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x20, 0x69, 0x73, 0x20, 0x61, 0x73, 0x6b, 0x69, 0x6e, 0x67, 0x20, 0x74,
	0x6f, 0x20, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x20, 0x61, 0x20, 0x46, 0x61, 0x6b, 0x65, 0x49, 0x50,
	0x2e, 0x12, 0x86, 0x01, 0x0a, 0x13, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x46, 0x61, 0x6b, 0x65, 0x49, 0x50, 0x12, 0x2b, 0x2e, 0x43, 0x47, 0x61, 0x6d,
	0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x46, 0x61, 0x6b, 0x65, 0x49, 0x50, 0x5f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x0b, 0x2e, 0x4e, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x35, 0x82, 0xb5, 0x18, 0x31, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x20,
	0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x20, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x20, 0x69,
	0x74, 0x20, 0x69, 0x73, 0x20, 0x64, 0x6f, 0x6e, 0x65, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x46, 0x61, 0x6b, 0x65, 0x49, 0x50, 0x2e, 0x1a, 0x28, 0x82, 0xb5, 0x18, 0x24,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x73, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x50, 0x32, 0x50, 0x20, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x42, 0x47, 0x42, 0x2b, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x47, 0x61, 0x6d, 0x65, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x13, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x2f, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x80, 0x01, 0x01,
}

var (
	file_steammessages_gamenetworking_steamclient_proto_rawDescOnce sync.Once
	file_steammessages_gamenetworking_steamclient_proto_rawDescData = file_steammessages_gamenetworking_steamclient_proto_rawDesc
)

func file_steammessages_gamenetworking_steamclient_proto_rawDescGZIP() []byte {
	file_steammessages_gamenetworking_steamclient_proto_rawDescOnce.Do(func() {
		file_steammessages_gamenetworking_steamclient_proto_rawDescData = protoimpl.X.CompressGZIP(file_steammessages_gamenetworking_steamclient_proto_rawDescData)
	})
	return file_steammessages_gamenetworking_steamclient_proto_rawDescData
}

var file_steammessages_gamenetworking_steamclient_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_steammessages_gamenetworking_steamclient_proto_goTypes = []interface{}{
	(*CGameNetworking_AllocateFakeIP_Request)(nil),     // 0: CGameNetworking_AllocateFakeIP_Request
	(*CGameNetworking_AllocateFakeIP_Response)(nil),    // 1: CGameNetworking_AllocateFakeIP_Response
	(*CGameNetworking_ReleaseFakeIP_Notification)(nil), // 2: CGameNetworking_ReleaseFakeIP_Notification
	(*NoResponse)(nil), // 3: NoResponse
}
var file_steammessages_gamenetworking_steamclient_proto_depIdxs = []int32{
	0, // 0: GameNetworking.AllocateFakeIP:input_type -> CGameNetworking_AllocateFakeIP_Request
	2, // 1: GameNetworking.NotifyReleaseFakeIP:input_type -> CGameNetworking_ReleaseFakeIP_Notification
	1, // 2: GameNetworking.AllocateFakeIP:output_type -> CGameNetworking_AllocateFakeIP_Response
	3, // 3: GameNetworking.NotifyReleaseFakeIP:output_type -> NoResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_steammessages_gamenetworking_steamclient_proto_init() }
func file_steammessages_gamenetworking_steamclient_proto_init() {
	if File_steammessages_gamenetworking_steamclient_proto != nil {
		return
	}
	file_steammessages_base_proto_init()
	file_steammessages_unified_base_steamclient_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_steammessages_gamenetworking_steamclient_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CGameNetworking_AllocateFakeIP_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_gamenetworking_steamclient_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CGameNetworking_AllocateFakeIP_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_gamenetworking_steamclient_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CGameNetworking_ReleaseFakeIP_Notification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_steammessages_gamenetworking_steamclient_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_steammessages_gamenetworking_steamclient_proto_goTypes,
		DependencyIndexes: file_steammessages_gamenetworking_steamclient_proto_depIdxs,
		MessageInfos:      file_steammessages_gamenetworking_steamclient_proto_msgTypes,
	}.Build()
	File_steammessages_gamenetworking_steamclient_proto = out.File
	file_steammessages_gamenetworking_steamclient_proto_rawDesc = nil
	file_steammessages_gamenetworking_steamclient_proto_goTypes = nil
	file_steammessages_gamenetworking_steamclient_proto_depIdxs = nil
}
