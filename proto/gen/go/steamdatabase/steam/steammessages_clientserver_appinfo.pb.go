// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: steammessages_clientserver_appinfo.proto

package steam

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CMsgClientAppInfoUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastChangenumber *uint32 `protobuf:"varint,1,opt,name=last_changenumber,json=lastChangenumber" json:"last_changenumber,omitempty"`
	SendChangelist   *bool   `protobuf:"varint,2,opt,name=send_changelist,json=sendChangelist" json:"send_changelist,omitempty"`
}

func (x *CMsgClientAppInfoUpdate) Reset() {
	*x = CMsgClientAppInfoUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_appinfo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientAppInfoUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientAppInfoUpdate) ProtoMessage() {}

func (x *CMsgClientAppInfoUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_appinfo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientAppInfoUpdate.ProtoReflect.Descriptor instead.
func (*CMsgClientAppInfoUpdate) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_appinfo_proto_rawDescGZIP(), []int{0}
}

func (x *CMsgClientAppInfoUpdate) GetLastChangenumber() uint32 {
	if x != nil && x.LastChangenumber != nil {
		return *x.LastChangenumber
	}
	return 0
}

func (x *CMsgClientAppInfoUpdate) GetSendChangelist() bool {
	if x != nil && x.SendChangelist != nil {
		return *x.SendChangelist
	}
	return false
}

type CMsgClientAppInfoChanges struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentChangeNumber *uint32  `protobuf:"varint,1,opt,name=current_change_number,json=currentChangeNumber" json:"current_change_number,omitempty"`
	ForceFullUpdate     *bool    `protobuf:"varint,2,opt,name=force_full_update,json=forceFullUpdate" json:"force_full_update,omitempty"`
	AppIDs              []uint32 `protobuf:"varint,3,rep,name=appIDs" json:"appIDs,omitempty"`
}

func (x *CMsgClientAppInfoChanges) Reset() {
	*x = CMsgClientAppInfoChanges{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_appinfo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientAppInfoChanges) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientAppInfoChanges) ProtoMessage() {}

func (x *CMsgClientAppInfoChanges) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_appinfo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientAppInfoChanges.ProtoReflect.Descriptor instead.
func (*CMsgClientAppInfoChanges) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_appinfo_proto_rawDescGZIP(), []int{1}
}

func (x *CMsgClientAppInfoChanges) GetCurrentChangeNumber() uint32 {
	if x != nil && x.CurrentChangeNumber != nil {
		return *x.CurrentChangeNumber
	}
	return 0
}

func (x *CMsgClientAppInfoChanges) GetForceFullUpdate() bool {
	if x != nil && x.ForceFullUpdate != nil {
		return *x.ForceFullUpdate
	}
	return false
}

func (x *CMsgClientAppInfoChanges) GetAppIDs() []uint32 {
	if x != nil {
		return x.AppIDs
	}
	return nil
}

type CMsgClientAppInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Apps            []*CMsgClientAppInfoRequest_App `protobuf:"bytes,1,rep,name=apps" json:"apps,omitempty"`
	SupportsBatches *bool                           `protobuf:"varint,2,opt,name=supports_batches,json=supportsBatches,def=0" json:"supports_batches,omitempty"`
}

// Default values for CMsgClientAppInfoRequest fields.
const (
	Default_CMsgClientAppInfoRequest_SupportsBatches = bool(false)
)

func (x *CMsgClientAppInfoRequest) Reset() {
	*x = CMsgClientAppInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_appinfo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientAppInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientAppInfoRequest) ProtoMessage() {}

func (x *CMsgClientAppInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_appinfo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientAppInfoRequest.ProtoReflect.Descriptor instead.
func (*CMsgClientAppInfoRequest) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_appinfo_proto_rawDescGZIP(), []int{2}
}

func (x *CMsgClientAppInfoRequest) GetApps() []*CMsgClientAppInfoRequest_App {
	if x != nil {
		return x.Apps
	}
	return nil
}

func (x *CMsgClientAppInfoRequest) GetSupportsBatches() bool {
	if x != nil && x.SupportsBatches != nil {
		return *x.SupportsBatches
	}
	return Default_CMsgClientAppInfoRequest_SupportsBatches
}

type CMsgClientPICSChangesSinceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SinceChangeNumber      *uint32 `protobuf:"varint,1,opt,name=since_change_number,json=sinceChangeNumber" json:"since_change_number,omitempty"`
	SendAppInfoChanges     *bool   `protobuf:"varint,2,opt,name=send_app_info_changes,json=sendAppInfoChanges" json:"send_app_info_changes,omitempty"`
	SendPackageInfoChanges *bool   `protobuf:"varint,3,opt,name=send_package_info_changes,json=sendPackageInfoChanges" json:"send_package_info_changes,omitempty"`
	NumAppInfoCached       *uint32 `protobuf:"varint,4,opt,name=num_app_info_cached,json=numAppInfoCached" json:"num_app_info_cached,omitempty"`
	NumPackageInfoCached   *uint32 `protobuf:"varint,5,opt,name=num_package_info_cached,json=numPackageInfoCached" json:"num_package_info_cached,omitempty"`
}

func (x *CMsgClientPICSChangesSinceRequest) Reset() {
	*x = CMsgClientPICSChangesSinceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_appinfo_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientPICSChangesSinceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientPICSChangesSinceRequest) ProtoMessage() {}

func (x *CMsgClientPICSChangesSinceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_appinfo_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientPICSChangesSinceRequest.ProtoReflect.Descriptor instead.
func (*CMsgClientPICSChangesSinceRequest) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_appinfo_proto_rawDescGZIP(), []int{3}
}

func (x *CMsgClientPICSChangesSinceRequest) GetSinceChangeNumber() uint32 {
	if x != nil && x.SinceChangeNumber != nil {
		return *x.SinceChangeNumber
	}
	return 0
}

func (x *CMsgClientPICSChangesSinceRequest) GetSendAppInfoChanges() bool {
	if x != nil && x.SendAppInfoChanges != nil {
		return *x.SendAppInfoChanges
	}
	return false
}

func (x *CMsgClientPICSChangesSinceRequest) GetSendPackageInfoChanges() bool {
	if x != nil && x.SendPackageInfoChanges != nil {
		return *x.SendPackageInfoChanges
	}
	return false
}

func (x *CMsgClientPICSChangesSinceRequest) GetNumAppInfoCached() uint32 {
	if x != nil && x.NumAppInfoCached != nil {
		return *x.NumAppInfoCached
	}
	return 0
}

func (x *CMsgClientPICSChangesSinceRequest) GetNumPackageInfoCached() uint32 {
	if x != nil && x.NumPackageInfoCached != nil {
		return *x.NumPackageInfoCached
	}
	return 0
}

type CMsgClientPICSChangesSinceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentChangeNumber    *uint32                                             `protobuf:"varint,1,opt,name=current_change_number,json=currentChangeNumber" json:"current_change_number,omitempty"`
	SinceChangeNumber      *uint32                                             `protobuf:"varint,2,opt,name=since_change_number,json=sinceChangeNumber" json:"since_change_number,omitempty"`
	ForceFullUpdate        *bool                                               `protobuf:"varint,3,opt,name=force_full_update,json=forceFullUpdate" json:"force_full_update,omitempty"`
	PackageChanges         []*CMsgClientPICSChangesSinceResponse_PackageChange `protobuf:"bytes,4,rep,name=package_changes,json=packageChanges" json:"package_changes,omitempty"`
	AppChanges             []*CMsgClientPICSChangesSinceResponse_AppChange     `protobuf:"bytes,5,rep,name=app_changes,json=appChanges" json:"app_changes,omitempty"`
	ForceFullAppUpdate     *bool                                               `protobuf:"varint,6,opt,name=force_full_app_update,json=forceFullAppUpdate" json:"force_full_app_update,omitempty"`
	ForceFullPackageUpdate *bool                                               `protobuf:"varint,7,opt,name=force_full_package_update,json=forceFullPackageUpdate" json:"force_full_package_update,omitempty"`
}

func (x *CMsgClientPICSChangesSinceResponse) Reset() {
	*x = CMsgClientPICSChangesSinceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_appinfo_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientPICSChangesSinceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientPICSChangesSinceResponse) ProtoMessage() {}

func (x *CMsgClientPICSChangesSinceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_appinfo_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientPICSChangesSinceResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientPICSChangesSinceResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_appinfo_proto_rawDescGZIP(), []int{4}
}

func (x *CMsgClientPICSChangesSinceResponse) GetCurrentChangeNumber() uint32 {
	if x != nil && x.CurrentChangeNumber != nil {
		return *x.CurrentChangeNumber
	}
	return 0
}

func (x *CMsgClientPICSChangesSinceResponse) GetSinceChangeNumber() uint32 {
	if x != nil && x.SinceChangeNumber != nil {
		return *x.SinceChangeNumber
	}
	return 0
}

func (x *CMsgClientPICSChangesSinceResponse) GetForceFullUpdate() bool {
	if x != nil && x.ForceFullUpdate != nil {
		return *x.ForceFullUpdate
	}
	return false
}

func (x *CMsgClientPICSChangesSinceResponse) GetPackageChanges() []*CMsgClientPICSChangesSinceResponse_PackageChange {
	if x != nil {
		return x.PackageChanges
	}
	return nil
}

func (x *CMsgClientPICSChangesSinceResponse) GetAppChanges() []*CMsgClientPICSChangesSinceResponse_AppChange {
	if x != nil {
		return x.AppChanges
	}
	return nil
}

func (x *CMsgClientPICSChangesSinceResponse) GetForceFullAppUpdate() bool {
	if x != nil && x.ForceFullAppUpdate != nil {
		return *x.ForceFullAppUpdate
	}
	return false
}

func (x *CMsgClientPICSChangesSinceResponse) GetForceFullPackageUpdate() bool {
	if x != nil && x.ForceFullPackageUpdate != nil {
		return *x.ForceFullPackageUpdate
	}
	return false
}

type CMsgClientPICSProductInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Packages                      []*CMsgClientPICSProductInfoRequest_PackageInfo `protobuf:"bytes,1,rep,name=packages" json:"packages,omitempty"`
	Apps                          []*CMsgClientPICSProductInfoRequest_AppInfo     `protobuf:"bytes,2,rep,name=apps" json:"apps,omitempty"`
	MetaDataOnly                  *bool                                           `protobuf:"varint,3,opt,name=meta_data_only,json=metaDataOnly" json:"meta_data_only,omitempty"`
	NumPrevFailed                 *uint32                                         `protobuf:"varint,4,opt,name=num_prev_failed,json=numPrevFailed" json:"num_prev_failed,omitempty"`
	OBSOLETESupportsPackageTokens *uint32                                         `protobuf:"varint,5,opt,name=OBSOLETE_supports_package_tokens,json=OBSOLETESupportsPackageTokens" json:"OBSOLETE_supports_package_tokens,omitempty"`
	SequenceNumber                *uint32                                         `protobuf:"varint,6,opt,name=sequence_number,json=sequenceNumber" json:"sequence_number,omitempty"`
	SingleResponse                *bool                                           `protobuf:"varint,7,opt,name=single_response,json=singleResponse" json:"single_response,omitempty"`
}

func (x *CMsgClientPICSProductInfoRequest) Reset() {
	*x = CMsgClientPICSProductInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_appinfo_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientPICSProductInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientPICSProductInfoRequest) ProtoMessage() {}

func (x *CMsgClientPICSProductInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_appinfo_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientPICSProductInfoRequest.ProtoReflect.Descriptor instead.
func (*CMsgClientPICSProductInfoRequest) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_appinfo_proto_rawDescGZIP(), []int{5}
}

func (x *CMsgClientPICSProductInfoRequest) GetPackages() []*CMsgClientPICSProductInfoRequest_PackageInfo {
	if x != nil {
		return x.Packages
	}
	return nil
}

func (x *CMsgClientPICSProductInfoRequest) GetApps() []*CMsgClientPICSProductInfoRequest_AppInfo {
	if x != nil {
		return x.Apps
	}
	return nil
}

func (x *CMsgClientPICSProductInfoRequest) GetMetaDataOnly() bool {
	if x != nil && x.MetaDataOnly != nil {
		return *x.MetaDataOnly
	}
	return false
}

func (x *CMsgClientPICSProductInfoRequest) GetNumPrevFailed() uint32 {
	if x != nil && x.NumPrevFailed != nil {
		return *x.NumPrevFailed
	}
	return 0
}

func (x *CMsgClientPICSProductInfoRequest) GetOBSOLETESupportsPackageTokens() uint32 {
	if x != nil && x.OBSOLETESupportsPackageTokens != nil {
		return *x.OBSOLETESupportsPackageTokens
	}
	return 0
}

func (x *CMsgClientPICSProductInfoRequest) GetSequenceNumber() uint32 {
	if x != nil && x.SequenceNumber != nil {
		return *x.SequenceNumber
	}
	return 0
}

func (x *CMsgClientPICSProductInfoRequest) GetSingleResponse() bool {
	if x != nil && x.SingleResponse != nil {
		return *x.SingleResponse
	}
	return false
}

type CMsgClientPICSProductInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Apps              []*CMsgClientPICSProductInfoResponse_AppInfo     `protobuf:"bytes,1,rep,name=apps" json:"apps,omitempty"`
	UnknownAppids     []uint32                                         `protobuf:"varint,2,rep,name=unknown_appids,json=unknownAppids" json:"unknown_appids,omitempty"`
	Packages          []*CMsgClientPICSProductInfoResponse_PackageInfo `protobuf:"bytes,3,rep,name=packages" json:"packages,omitempty"`
	UnknownPackageids []uint32                                         `protobuf:"varint,4,rep,name=unknown_packageids,json=unknownPackageids" json:"unknown_packageids,omitempty"`
	MetaDataOnly      *bool                                            `protobuf:"varint,5,opt,name=meta_data_only,json=metaDataOnly" json:"meta_data_only,omitempty"`
	ResponsePending   *bool                                            `protobuf:"varint,6,opt,name=response_pending,json=responsePending" json:"response_pending,omitempty"`
	HttpMinSize       *uint32                                          `protobuf:"varint,7,opt,name=http_min_size,json=httpMinSize" json:"http_min_size,omitempty"`
	HttpHost          *string                                          `protobuf:"bytes,8,opt,name=http_host,json=httpHost" json:"http_host,omitempty"`
}

func (x *CMsgClientPICSProductInfoResponse) Reset() {
	*x = CMsgClientPICSProductInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_appinfo_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientPICSProductInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientPICSProductInfoResponse) ProtoMessage() {}

func (x *CMsgClientPICSProductInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_appinfo_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientPICSProductInfoResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientPICSProductInfoResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_appinfo_proto_rawDescGZIP(), []int{6}
}

func (x *CMsgClientPICSProductInfoResponse) GetApps() []*CMsgClientPICSProductInfoResponse_AppInfo {
	if x != nil {
		return x.Apps
	}
	return nil
}

func (x *CMsgClientPICSProductInfoResponse) GetUnknownAppids() []uint32 {
	if x != nil {
		return x.UnknownAppids
	}
	return nil
}

func (x *CMsgClientPICSProductInfoResponse) GetPackages() []*CMsgClientPICSProductInfoResponse_PackageInfo {
	if x != nil {
		return x.Packages
	}
	return nil
}

func (x *CMsgClientPICSProductInfoResponse) GetUnknownPackageids() []uint32 {
	if x != nil {
		return x.UnknownPackageids
	}
	return nil
}

func (x *CMsgClientPICSProductInfoResponse) GetMetaDataOnly() bool {
	if x != nil && x.MetaDataOnly != nil {
		return *x.MetaDataOnly
	}
	return false
}

func (x *CMsgClientPICSProductInfoResponse) GetResponsePending() bool {
	if x != nil && x.ResponsePending != nil {
		return *x.ResponsePending
	}
	return false
}

func (x *CMsgClientPICSProductInfoResponse) GetHttpMinSize() uint32 {
	if x != nil && x.HttpMinSize != nil {
		return *x.HttpMinSize
	}
	return 0
}

func (x *CMsgClientPICSProductInfoResponse) GetHttpHost() string {
	if x != nil && x.HttpHost != nil {
		return *x.HttpHost
	}
	return ""
}

type CMsgClientPICSAccessTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Packageids []uint32 `protobuf:"varint,1,rep,name=packageids" json:"packageids,omitempty"`
	Appids     []uint32 `protobuf:"varint,2,rep,name=appids" json:"appids,omitempty"`
}

func (x *CMsgClientPICSAccessTokenRequest) Reset() {
	*x = CMsgClientPICSAccessTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_appinfo_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientPICSAccessTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientPICSAccessTokenRequest) ProtoMessage() {}

func (x *CMsgClientPICSAccessTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_appinfo_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientPICSAccessTokenRequest.ProtoReflect.Descriptor instead.
func (*CMsgClientPICSAccessTokenRequest) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_appinfo_proto_rawDescGZIP(), []int{7}
}

func (x *CMsgClientPICSAccessTokenRequest) GetPackageids() []uint32 {
	if x != nil {
		return x.Packageids
	}
	return nil
}

func (x *CMsgClientPICSAccessTokenRequest) GetAppids() []uint32 {
	if x != nil {
		return x.Appids
	}
	return nil
}

type CMsgClientPICSAccessTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackageAccessTokens []*CMsgClientPICSAccessTokenResponse_PackageToken `protobuf:"bytes,1,rep,name=package_access_tokens,json=packageAccessTokens" json:"package_access_tokens,omitempty"`
	PackageDeniedTokens []uint32                                          `protobuf:"varint,2,rep,name=package_denied_tokens,json=packageDeniedTokens" json:"package_denied_tokens,omitempty"`
	AppAccessTokens     []*CMsgClientPICSAccessTokenResponse_AppToken     `protobuf:"bytes,3,rep,name=app_access_tokens,json=appAccessTokens" json:"app_access_tokens,omitempty"`
	AppDeniedTokens     []uint32                                          `protobuf:"varint,4,rep,name=app_denied_tokens,json=appDeniedTokens" json:"app_denied_tokens,omitempty"`
}

func (x *CMsgClientPICSAccessTokenResponse) Reset() {
	*x = CMsgClientPICSAccessTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_appinfo_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientPICSAccessTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientPICSAccessTokenResponse) ProtoMessage() {}

func (x *CMsgClientPICSAccessTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_appinfo_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientPICSAccessTokenResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientPICSAccessTokenResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_appinfo_proto_rawDescGZIP(), []int{8}
}

func (x *CMsgClientPICSAccessTokenResponse) GetPackageAccessTokens() []*CMsgClientPICSAccessTokenResponse_PackageToken {
	if x != nil {
		return x.PackageAccessTokens
	}
	return nil
}

func (x *CMsgClientPICSAccessTokenResponse) GetPackageDeniedTokens() []uint32 {
	if x != nil {
		return x.PackageDeniedTokens
	}
	return nil
}

func (x *CMsgClientPICSAccessTokenResponse) GetAppAccessTokens() []*CMsgClientPICSAccessTokenResponse_AppToken {
	if x != nil {
		return x.AppAccessTokens
	}
	return nil
}

func (x *CMsgClientPICSAccessTokenResponse) GetAppDeniedTokens() []uint32 {
	if x != nil {
		return x.AppDeniedTokens
	}
	return nil
}

type CMsgClientAppInfoRequest_App struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId        *uint32  `protobuf:"varint,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	SectionFlags *uint32  `protobuf:"varint,2,opt,name=section_flags,json=sectionFlags" json:"section_flags,omitempty"`
	Section_CRC  []uint32 `protobuf:"varint,3,rep,name=section_CRC,json=sectionCRC" json:"section_CRC,omitempty"`
}

func (x *CMsgClientAppInfoRequest_App) Reset() {
	*x = CMsgClientAppInfoRequest_App{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_appinfo_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientAppInfoRequest_App) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientAppInfoRequest_App) ProtoMessage() {}

func (x *CMsgClientAppInfoRequest_App) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_appinfo_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientAppInfoRequest_App.ProtoReflect.Descriptor instead.
func (*CMsgClientAppInfoRequest_App) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_appinfo_proto_rawDescGZIP(), []int{2, 0}
}

func (x *CMsgClientAppInfoRequest_App) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *CMsgClientAppInfoRequest_App) GetSectionFlags() uint32 {
	if x != nil && x.SectionFlags != nil {
		return *x.SectionFlags
	}
	return 0
}

func (x *CMsgClientAppInfoRequest_App) GetSection_CRC() []uint32 {
	if x != nil {
		return x.Section_CRC
	}
	return nil
}

type CMsgClientPICSChangesSinceResponse_PackageChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Packageid    *uint32 `protobuf:"varint,1,opt,name=packageid" json:"packageid,omitempty"`
	ChangeNumber *uint32 `protobuf:"varint,2,opt,name=change_number,json=changeNumber" json:"change_number,omitempty"`
	NeedsToken   *bool   `protobuf:"varint,3,opt,name=needs_token,json=needsToken" json:"needs_token,omitempty"`
}

func (x *CMsgClientPICSChangesSinceResponse_PackageChange) Reset() {
	*x = CMsgClientPICSChangesSinceResponse_PackageChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_appinfo_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientPICSChangesSinceResponse_PackageChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientPICSChangesSinceResponse_PackageChange) ProtoMessage() {}

func (x *CMsgClientPICSChangesSinceResponse_PackageChange) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_appinfo_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientPICSChangesSinceResponse_PackageChange.ProtoReflect.Descriptor instead.
func (*CMsgClientPICSChangesSinceResponse_PackageChange) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_appinfo_proto_rawDescGZIP(), []int{4, 0}
}

func (x *CMsgClientPICSChangesSinceResponse_PackageChange) GetPackageid() uint32 {
	if x != nil && x.Packageid != nil {
		return *x.Packageid
	}
	return 0
}

func (x *CMsgClientPICSChangesSinceResponse_PackageChange) GetChangeNumber() uint32 {
	if x != nil && x.ChangeNumber != nil {
		return *x.ChangeNumber
	}
	return 0
}

func (x *CMsgClientPICSChangesSinceResponse_PackageChange) GetNeedsToken() bool {
	if x != nil && x.NeedsToken != nil {
		return *x.NeedsToken
	}
	return false
}

type CMsgClientPICSChangesSinceResponse_AppChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid        *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	ChangeNumber *uint32 `protobuf:"varint,2,opt,name=change_number,json=changeNumber" json:"change_number,omitempty"`
	NeedsToken   *bool   `protobuf:"varint,3,opt,name=needs_token,json=needsToken" json:"needs_token,omitempty"`
}

func (x *CMsgClientPICSChangesSinceResponse_AppChange) Reset() {
	*x = CMsgClientPICSChangesSinceResponse_AppChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_appinfo_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientPICSChangesSinceResponse_AppChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientPICSChangesSinceResponse_AppChange) ProtoMessage() {}

func (x *CMsgClientPICSChangesSinceResponse_AppChange) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_appinfo_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientPICSChangesSinceResponse_AppChange.ProtoReflect.Descriptor instead.
func (*CMsgClientPICSChangesSinceResponse_AppChange) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_appinfo_proto_rawDescGZIP(), []int{4, 1}
}

func (x *CMsgClientPICSChangesSinceResponse_AppChange) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CMsgClientPICSChangesSinceResponse_AppChange) GetChangeNumber() uint32 {
	if x != nil && x.ChangeNumber != nil {
		return *x.ChangeNumber
	}
	return 0
}

func (x *CMsgClientPICSChangesSinceResponse_AppChange) GetNeedsToken() bool {
	if x != nil && x.NeedsToken != nil {
		return *x.NeedsToken
	}
	return false
}

type CMsgClientPICSProductInfoRequest_AppInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid              *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	AccessToken        *uint64 `protobuf:"varint,2,opt,name=access_token,json=accessToken" json:"access_token,omitempty"`
	OnlyPublicObsolete *bool   `protobuf:"varint,3,opt,name=only_public_obsolete,json=onlyPublicObsolete" json:"only_public_obsolete,omitempty"`
}

func (x *CMsgClientPICSProductInfoRequest_AppInfo) Reset() {
	*x = CMsgClientPICSProductInfoRequest_AppInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_appinfo_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientPICSProductInfoRequest_AppInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientPICSProductInfoRequest_AppInfo) ProtoMessage() {}

func (x *CMsgClientPICSProductInfoRequest_AppInfo) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_appinfo_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientPICSProductInfoRequest_AppInfo.ProtoReflect.Descriptor instead.
func (*CMsgClientPICSProductInfoRequest_AppInfo) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_appinfo_proto_rawDescGZIP(), []int{5, 0}
}

func (x *CMsgClientPICSProductInfoRequest_AppInfo) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CMsgClientPICSProductInfoRequest_AppInfo) GetAccessToken() uint64 {
	if x != nil && x.AccessToken != nil {
		return *x.AccessToken
	}
	return 0
}

func (x *CMsgClientPICSProductInfoRequest_AppInfo) GetOnlyPublicObsolete() bool {
	if x != nil && x.OnlyPublicObsolete != nil {
		return *x.OnlyPublicObsolete
	}
	return false
}

type CMsgClientPICSProductInfoRequest_PackageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Packageid   *uint32 `protobuf:"varint,1,opt,name=packageid" json:"packageid,omitempty"`
	AccessToken *uint64 `protobuf:"varint,2,opt,name=access_token,json=accessToken" json:"access_token,omitempty"`
}

func (x *CMsgClientPICSProductInfoRequest_PackageInfo) Reset() {
	*x = CMsgClientPICSProductInfoRequest_PackageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_appinfo_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientPICSProductInfoRequest_PackageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientPICSProductInfoRequest_PackageInfo) ProtoMessage() {}

func (x *CMsgClientPICSProductInfoRequest_PackageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_appinfo_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientPICSProductInfoRequest_PackageInfo.ProtoReflect.Descriptor instead.
func (*CMsgClientPICSProductInfoRequest_PackageInfo) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_appinfo_proto_rawDescGZIP(), []int{5, 1}
}

func (x *CMsgClientPICSProductInfoRequest_PackageInfo) GetPackageid() uint32 {
	if x != nil && x.Packageid != nil {
		return *x.Packageid
	}
	return 0
}

func (x *CMsgClientPICSProductInfoRequest_PackageInfo) GetAccessToken() uint64 {
	if x != nil && x.AccessToken != nil {
		return *x.AccessToken
	}
	return 0
}

type CMsgClientPICSProductInfoResponse_AppInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid        *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	ChangeNumber *uint32 `protobuf:"varint,2,opt,name=change_number,json=changeNumber" json:"change_number,omitempty"`
	MissingToken *bool   `protobuf:"varint,3,opt,name=missing_token,json=missingToken" json:"missing_token,omitempty"`
	Sha          []byte  `protobuf:"bytes,4,opt,name=sha" json:"sha,omitempty"`
	Buffer       []byte  `protobuf:"bytes,5,opt,name=buffer" json:"buffer,omitempty"`
	OnlyPublic   *bool   `protobuf:"varint,6,opt,name=only_public,json=onlyPublic" json:"only_public,omitempty"`
	Size         *uint32 `protobuf:"varint,7,opt,name=size" json:"size,omitempty"`
}

func (x *CMsgClientPICSProductInfoResponse_AppInfo) Reset() {
	*x = CMsgClientPICSProductInfoResponse_AppInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_appinfo_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientPICSProductInfoResponse_AppInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientPICSProductInfoResponse_AppInfo) ProtoMessage() {}

func (x *CMsgClientPICSProductInfoResponse_AppInfo) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_appinfo_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientPICSProductInfoResponse_AppInfo.ProtoReflect.Descriptor instead.
func (*CMsgClientPICSProductInfoResponse_AppInfo) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_appinfo_proto_rawDescGZIP(), []int{6, 0}
}

func (x *CMsgClientPICSProductInfoResponse_AppInfo) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CMsgClientPICSProductInfoResponse_AppInfo) GetChangeNumber() uint32 {
	if x != nil && x.ChangeNumber != nil {
		return *x.ChangeNumber
	}
	return 0
}

func (x *CMsgClientPICSProductInfoResponse_AppInfo) GetMissingToken() bool {
	if x != nil && x.MissingToken != nil {
		return *x.MissingToken
	}
	return false
}

func (x *CMsgClientPICSProductInfoResponse_AppInfo) GetSha() []byte {
	if x != nil {
		return x.Sha
	}
	return nil
}

func (x *CMsgClientPICSProductInfoResponse_AppInfo) GetBuffer() []byte {
	if x != nil {
		return x.Buffer
	}
	return nil
}

func (x *CMsgClientPICSProductInfoResponse_AppInfo) GetOnlyPublic() bool {
	if x != nil && x.OnlyPublic != nil {
		return *x.OnlyPublic
	}
	return false
}

func (x *CMsgClientPICSProductInfoResponse_AppInfo) GetSize() uint32 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

type CMsgClientPICSProductInfoResponse_PackageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Packageid    *uint32 `protobuf:"varint,1,opt,name=packageid" json:"packageid,omitempty"`
	ChangeNumber *uint32 `protobuf:"varint,2,opt,name=change_number,json=changeNumber" json:"change_number,omitempty"`
	MissingToken *bool   `protobuf:"varint,3,opt,name=missing_token,json=missingToken" json:"missing_token,omitempty"`
	Sha          []byte  `protobuf:"bytes,4,opt,name=sha" json:"sha,omitempty"`
	Buffer       []byte  `protobuf:"bytes,5,opt,name=buffer" json:"buffer,omitempty"`
	Size         *uint32 `protobuf:"varint,6,opt,name=size" json:"size,omitempty"`
}

func (x *CMsgClientPICSProductInfoResponse_PackageInfo) Reset() {
	*x = CMsgClientPICSProductInfoResponse_PackageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_appinfo_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientPICSProductInfoResponse_PackageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientPICSProductInfoResponse_PackageInfo) ProtoMessage() {}

func (x *CMsgClientPICSProductInfoResponse_PackageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_appinfo_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientPICSProductInfoResponse_PackageInfo.ProtoReflect.Descriptor instead.
func (*CMsgClientPICSProductInfoResponse_PackageInfo) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_appinfo_proto_rawDescGZIP(), []int{6, 1}
}

func (x *CMsgClientPICSProductInfoResponse_PackageInfo) GetPackageid() uint32 {
	if x != nil && x.Packageid != nil {
		return *x.Packageid
	}
	return 0
}

func (x *CMsgClientPICSProductInfoResponse_PackageInfo) GetChangeNumber() uint32 {
	if x != nil && x.ChangeNumber != nil {
		return *x.ChangeNumber
	}
	return 0
}

func (x *CMsgClientPICSProductInfoResponse_PackageInfo) GetMissingToken() bool {
	if x != nil && x.MissingToken != nil {
		return *x.MissingToken
	}
	return false
}

func (x *CMsgClientPICSProductInfoResponse_PackageInfo) GetSha() []byte {
	if x != nil {
		return x.Sha
	}
	return nil
}

func (x *CMsgClientPICSProductInfoResponse_PackageInfo) GetBuffer() []byte {
	if x != nil {
		return x.Buffer
	}
	return nil
}

func (x *CMsgClientPICSProductInfoResponse_PackageInfo) GetSize() uint32 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

type CMsgClientPICSAccessTokenResponse_PackageToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Packageid   *uint32 `protobuf:"varint,1,opt,name=packageid" json:"packageid,omitempty"`
	AccessToken *uint64 `protobuf:"varint,2,opt,name=access_token,json=accessToken" json:"access_token,omitempty"`
}

func (x *CMsgClientPICSAccessTokenResponse_PackageToken) Reset() {
	*x = CMsgClientPICSAccessTokenResponse_PackageToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_appinfo_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientPICSAccessTokenResponse_PackageToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientPICSAccessTokenResponse_PackageToken) ProtoMessage() {}

func (x *CMsgClientPICSAccessTokenResponse_PackageToken) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_appinfo_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientPICSAccessTokenResponse_PackageToken.ProtoReflect.Descriptor instead.
func (*CMsgClientPICSAccessTokenResponse_PackageToken) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_appinfo_proto_rawDescGZIP(), []int{8, 0}
}

func (x *CMsgClientPICSAccessTokenResponse_PackageToken) GetPackageid() uint32 {
	if x != nil && x.Packageid != nil {
		return *x.Packageid
	}
	return 0
}

func (x *CMsgClientPICSAccessTokenResponse_PackageToken) GetAccessToken() uint64 {
	if x != nil && x.AccessToken != nil {
		return *x.AccessToken
	}
	return 0
}

type CMsgClientPICSAccessTokenResponse_AppToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid       *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	AccessToken *uint64 `protobuf:"varint,2,opt,name=access_token,json=accessToken" json:"access_token,omitempty"`
}

func (x *CMsgClientPICSAccessTokenResponse_AppToken) Reset() {
	*x = CMsgClientPICSAccessTokenResponse_AppToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_appinfo_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientPICSAccessTokenResponse_AppToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientPICSAccessTokenResponse_AppToken) ProtoMessage() {}

func (x *CMsgClientPICSAccessTokenResponse_AppToken) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_appinfo_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientPICSAccessTokenResponse_AppToken.ProtoReflect.Descriptor instead.
func (*CMsgClientPICSAccessTokenResponse_AppToken) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_appinfo_proto_rawDescGZIP(), []int{8, 1}
}

func (x *CMsgClientPICSAccessTokenResponse_AppToken) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CMsgClientPICSAccessTokenResponse_AppToken) GetAccessToken() uint64 {
	if x != nil && x.AccessToken != nil {
		return *x.AccessToken
	}
	return 0
}

var File_steammessages_clientserver_appinfo_proto protoreflect.FileDescriptor

var file_steammessages_clientserver_appinfo_proto_rawDesc = []byte{
	0x0a, 0x28, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x70,
	0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x73, 0x74, 0x65, 0x61,
	0x6d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6f, 0x0a, 0x17, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x2b, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x0f,
	0x73, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x92, 0x01, 0x0a, 0x18, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x13, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f,
	0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0f, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x46, 0x75, 0x6c, 0x6c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x49, 0x44, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x06, 0x61, 0x70, 0x70, 0x49, 0x44, 0x73, 0x22, 0xe3, 0x01, 0x0a, 0x18, 0x43,
	0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x04, 0x61, 0x70, 0x70, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x41, 0x70, 0x70, 0x52, 0x04, 0x61, 0x70, 0x70, 0x73, 0x12, 0x30, 0x0a, 0x10, 0x73, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x5f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x0f, 0x73, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x1a, 0x62, 0x0a, 0x03,
	0x41, 0x70, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0c, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x43, 0x52, 0x43, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x52, 0x43,
	0x22, 0xa7, 0x02, 0x0a, 0x21, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50,
	0x49, 0x43, 0x53, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x5f,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x11, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x15, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x61,
	0x70, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x73, 0x65, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x19, 0x73, 0x65, 0x6e,
	0x64, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x73, 0x65,
	0x6e, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x13, 0x6e, 0x75, 0x6d, 0x5f, 0x61, 0x70, 0x70, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x10, 0x6e, 0x75, 0x6d, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x64, 0x12, 0x35, 0x0a, 0x17, 0x6e, 0x75, 0x6d, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x6e, 0x75, 0x6d, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64, 0x22, 0xac, 0x05, 0x0a, 0x22, 0x43,
	0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x49, 0x43, 0x53, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x13, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x5f, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x11, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x66,
	0x75, 0x6c, 0x6c, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0f, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x46, 0x75, 0x6c, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x5a, 0x0a, 0x0f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x43, 0x4d, 0x73,
	0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x49, 0x43, 0x53, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x0e, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x4e, 0x0a,
	0x0b, 0x61, 0x70, 0x70, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50,
	0x49, 0x43, 0x53, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x53, 0x69, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x31, 0x0a,
	0x15, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x61, 0x70, 0x70, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x66, 0x6f,
	0x72, 0x63, 0x65, 0x46, 0x75, 0x6c, 0x6c, 0x41, 0x70, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x39, 0x0a, 0x19, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x16, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x46, 0x75, 0x6c, 0x6c, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x1a, 0x73, 0x0a, 0x0d, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x65, 0x64, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6e, 0x65, 0x65, 0x64, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x1a, 0x67, 0x0a, 0x09, 0x41, 0x70, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70,
	0x70, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x65, 0x64,
	0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6e,
	0x65, 0x65, 0x64, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xdb, 0x04, 0x0a, 0x20, 0x43, 0x4d,
	0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x49, 0x43, 0x53, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x49,
	0x0a, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x49, 0x43,
	0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x08, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x04, 0x61, 0x70, 0x70,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x50, 0x49, 0x43, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x61, 0x70, 0x70, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x65, 0x74, 0x61,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x6d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x26,
	0x0a, 0x0f, 0x6e, 0x75, 0x6d, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6e, 0x75, 0x6d, 0x50, 0x72, 0x65, 0x76,
	0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x47, 0x0a, 0x20, 0x4f, 0x42, 0x53, 0x4f, 0x4c, 0x45,
	0x54, 0x45, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x5f, 0x70, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x1d, 0x4f, 0x42, 0x53, 0x4f, 0x4c, 0x45, 0x54, 0x45, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12,
	0x27, 0x0a, 0x0f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0e, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x1a, 0x74, 0x0a, 0x07, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70,
	0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x30, 0x0a, 0x14, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6f, 0x62, 0x73, 0x6f, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x12, 0x6f, 0x6e, 0x6c, 0x79, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4f,
	0x62, 0x73, 0x6f, 0x6c, 0x65, 0x74, 0x65, 0x1a, 0x4e, 0x0a, 0x0b, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x9e, 0x06, 0x0a, 0x21, 0x43, 0x4d, 0x73, 0x67,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x49, 0x43, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a,
	0x04, 0x61, 0x70, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x43, 0x4d,
	0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x49, 0x43, 0x53, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x61, 0x70, 0x70, 0x73, 0x12, 0x25, 0x0a,
	0x0e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x69, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x41, 0x70,
	0x70, 0x69, 0x64, 0x73, 0x12, 0x4a, 0x0a, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x50, 0x49, 0x43, 0x53, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73,
	0x12, 0x2d, 0x0a, 0x12, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x70, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x11, 0x75, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x69, 0x64, 0x73, 0x12,
	0x24, 0x0a, 0x0e, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6f, 0x6e, 0x6c,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74,
	0x61, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x5f, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x12, 0x22, 0x0a, 0x0d, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x68, 0x74, 0x74, 0x70, 0x4d, 0x69, 0x6e,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x68, 0x6f, 0x73,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x74, 0x74, 0x70, 0x48, 0x6f, 0x73,
	0x74, 0x1a, 0xc8, 0x01, 0x0a, 0x07, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70,
	0x70, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x10, 0x0a,
	0x03, 0x73, 0x68, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x73, 0x68, 0x61, 0x12,
	0x16, 0x0a, 0x06, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x06, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x6e, 0x6c, 0x79, 0x5f,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6f, 0x6e,
	0x6c, 0x79, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x1a, 0xb3, 0x01, 0x0a,
	0x0b, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x23, 0x0a, 0x0d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x68, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x03, 0x73, 0x68, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x3a, 0x04, 0x88, 0xb5, 0x18, 0x00, 0x22, 0x5a, 0x0a, 0x20, 0x43, 0x4d, 0x73, 0x67,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x49, 0x43, 0x53, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x69, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x70, 0x70, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x61, 0x70,
	0x70, 0x69, 0x64, 0x73, 0x22, 0xd7, 0x03, 0x0a, 0x21, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x50, 0x49, 0x43, 0x53, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x15, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x49, 0x43, 0x53, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x13, 0x70, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12,
	0x32, 0x0a, 0x15, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x65, 0x6e, 0x69, 0x65,
	0x64, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x13,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6e, 0x69, 0x65, 0x64, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x73, 0x12, 0x57, 0x0a, 0x11, 0x61, 0x70, 0x70, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x49, 0x43, 0x53, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x0f, 0x61, 0x70, 0x70,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x2a, 0x0a, 0x11,
	0x61, 0x70, 0x70, 0x5f, 0x64, 0x65, 0x6e, 0x69, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x44, 0x65, 0x6e, 0x69,
	0x65, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x1a, 0x4f, 0x0a, 0x0c, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x1a, 0x43, 0x0a, 0x08, 0x41, 0x70, 0x70,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x43,
	0x42, 0x25, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x70, 0x70, 0x69, 0x6e,
	0x66, 0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x01, 0x50, 0x01, 0x5a, 0x13, 0x73, 0x74, 0x65,
	0x61, 0x6d, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x73, 0x74, 0x65, 0x61, 0x6d,
	0x80, 0x01, 0x00,
}

var (
	file_steammessages_clientserver_appinfo_proto_rawDescOnce sync.Once
	file_steammessages_clientserver_appinfo_proto_rawDescData = file_steammessages_clientserver_appinfo_proto_rawDesc
)

func file_steammessages_clientserver_appinfo_proto_rawDescGZIP() []byte {
	file_steammessages_clientserver_appinfo_proto_rawDescOnce.Do(func() {
		file_steammessages_clientserver_appinfo_proto_rawDescData = protoimpl.X.CompressGZIP(file_steammessages_clientserver_appinfo_proto_rawDescData)
	})
	return file_steammessages_clientserver_appinfo_proto_rawDescData
}

var file_steammessages_clientserver_appinfo_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_steammessages_clientserver_appinfo_proto_goTypes = []interface{}{
	(*CMsgClientAppInfoUpdate)(nil),                          // 0: CMsgClientAppInfoUpdate
	(*CMsgClientAppInfoChanges)(nil),                         // 1: CMsgClientAppInfoChanges
	(*CMsgClientAppInfoRequest)(nil),                         // 2: CMsgClientAppInfoRequest
	(*CMsgClientPICSChangesSinceRequest)(nil),                // 3: CMsgClientPICSChangesSinceRequest
	(*CMsgClientPICSChangesSinceResponse)(nil),               // 4: CMsgClientPICSChangesSinceResponse
	(*CMsgClientPICSProductInfoRequest)(nil),                 // 5: CMsgClientPICSProductInfoRequest
	(*CMsgClientPICSProductInfoResponse)(nil),                // 6: CMsgClientPICSProductInfoResponse
	(*CMsgClientPICSAccessTokenRequest)(nil),                 // 7: CMsgClientPICSAccessTokenRequest
	(*CMsgClientPICSAccessTokenResponse)(nil),                // 8: CMsgClientPICSAccessTokenResponse
	(*CMsgClientAppInfoRequest_App)(nil),                     // 9: CMsgClientAppInfoRequest.App
	(*CMsgClientPICSChangesSinceResponse_PackageChange)(nil), // 10: CMsgClientPICSChangesSinceResponse.PackageChange
	(*CMsgClientPICSChangesSinceResponse_AppChange)(nil),     // 11: CMsgClientPICSChangesSinceResponse.AppChange
	(*CMsgClientPICSProductInfoRequest_AppInfo)(nil),         // 12: CMsgClientPICSProductInfoRequest.AppInfo
	(*CMsgClientPICSProductInfoRequest_PackageInfo)(nil),     // 13: CMsgClientPICSProductInfoRequest.PackageInfo
	(*CMsgClientPICSProductInfoResponse_AppInfo)(nil),        // 14: CMsgClientPICSProductInfoResponse.AppInfo
	(*CMsgClientPICSProductInfoResponse_PackageInfo)(nil),    // 15: CMsgClientPICSProductInfoResponse.PackageInfo
	(*CMsgClientPICSAccessTokenResponse_PackageToken)(nil),   // 16: CMsgClientPICSAccessTokenResponse.PackageToken
	(*CMsgClientPICSAccessTokenResponse_AppToken)(nil),       // 17: CMsgClientPICSAccessTokenResponse.AppToken
}
var file_steammessages_clientserver_appinfo_proto_depIdxs = []int32{
	9,  // 0: CMsgClientAppInfoRequest.apps:type_name -> CMsgClientAppInfoRequest.App
	10, // 1: CMsgClientPICSChangesSinceResponse.package_changes:type_name -> CMsgClientPICSChangesSinceResponse.PackageChange
	11, // 2: CMsgClientPICSChangesSinceResponse.app_changes:type_name -> CMsgClientPICSChangesSinceResponse.AppChange
	13, // 3: CMsgClientPICSProductInfoRequest.packages:type_name -> CMsgClientPICSProductInfoRequest.PackageInfo
	12, // 4: CMsgClientPICSProductInfoRequest.apps:type_name -> CMsgClientPICSProductInfoRequest.AppInfo
	14, // 5: CMsgClientPICSProductInfoResponse.apps:type_name -> CMsgClientPICSProductInfoResponse.AppInfo
	15, // 6: CMsgClientPICSProductInfoResponse.packages:type_name -> CMsgClientPICSProductInfoResponse.PackageInfo
	16, // 7: CMsgClientPICSAccessTokenResponse.package_access_tokens:type_name -> CMsgClientPICSAccessTokenResponse.PackageToken
	17, // 8: CMsgClientPICSAccessTokenResponse.app_access_tokens:type_name -> CMsgClientPICSAccessTokenResponse.AppToken
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_steammessages_clientserver_appinfo_proto_init() }
func file_steammessages_clientserver_appinfo_proto_init() {
	if File_steammessages_clientserver_appinfo_proto != nil {
		return
	}
	file_steammessages_base_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_steammessages_clientserver_appinfo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientAppInfoUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_appinfo_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientAppInfoChanges); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_appinfo_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientAppInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_appinfo_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientPICSChangesSinceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_appinfo_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientPICSChangesSinceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_appinfo_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientPICSProductInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_appinfo_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientPICSProductInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_appinfo_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientPICSAccessTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_appinfo_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientPICSAccessTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_appinfo_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientAppInfoRequest_App); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_appinfo_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientPICSChangesSinceResponse_PackageChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_appinfo_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientPICSChangesSinceResponse_AppChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_appinfo_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientPICSProductInfoRequest_AppInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_appinfo_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientPICSProductInfoRequest_PackageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_appinfo_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientPICSProductInfoResponse_AppInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_appinfo_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientPICSProductInfoResponse_PackageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_appinfo_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientPICSAccessTokenResponse_PackageToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_appinfo_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientPICSAccessTokenResponse_AppToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_steammessages_clientserver_appinfo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_steammessages_clientserver_appinfo_proto_goTypes,
		DependencyIndexes: file_steammessages_clientserver_appinfo_proto_depIdxs,
		MessageInfos:      file_steammessages_clientserver_appinfo_proto_msgTypes,
	}.Build()
	File_steammessages_clientserver_appinfo_proto = out.File
	file_steammessages_clientserver_appinfo_proto_rawDesc = nil
	file_steammessages_clientserver_appinfo_proto_goTypes = nil
	file_steammessages_clientserver_appinfo_proto_depIdxs = nil
}
