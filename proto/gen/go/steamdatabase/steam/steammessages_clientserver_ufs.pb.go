// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: steammessages_clientserver_ufs.proto

package steam

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CMsgClientUFSUploadFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId                     *uint32 `protobuf:"varint,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	FileSize                  *uint32 `protobuf:"varint,2,opt,name=file_size,json=fileSize" json:"file_size,omitempty"`
	RawFileSize               *uint32 `protobuf:"varint,3,opt,name=raw_file_size,json=rawFileSize" json:"raw_file_size,omitempty"`
	ShaFile                   []byte  `protobuf:"bytes,4,opt,name=sha_file,json=shaFile" json:"sha_file,omitempty"`
	TimeStamp                 *uint64 `protobuf:"varint,5,opt,name=time_stamp,json=timeStamp" json:"time_stamp,omitempty"`
	FileName                  *string `protobuf:"bytes,6,opt,name=file_name,json=fileName" json:"file_name,omitempty"`
	PlatformsToSyncDeprecated *uint32 `protobuf:"varint,7,opt,name=platforms_to_sync_deprecated,json=platformsToSyncDeprecated" json:"platforms_to_sync_deprecated,omitempty"`
	PlatformsToSync           *uint32 `protobuf:"varint,8,opt,name=platforms_to_sync,json=platformsToSync,def=4294967295" json:"platforms_to_sync,omitempty"`
	CellId                    *uint32 `protobuf:"varint,9,opt,name=cell_id,json=cellId" json:"cell_id,omitempty"`
	CanEncrypt                *bool   `protobuf:"varint,10,opt,name=can_encrypt,json=canEncrypt" json:"can_encrypt,omitempty"`
}

// Default values for CMsgClientUFSUploadFileRequest fields.
const (
	Default_CMsgClientUFSUploadFileRequest_PlatformsToSync = uint32(4294967295)
)

func (x *CMsgClientUFSUploadFileRequest) Reset() {
	*x = CMsgClientUFSUploadFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_ufs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientUFSUploadFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientUFSUploadFileRequest) ProtoMessage() {}

func (x *CMsgClientUFSUploadFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_ufs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientUFSUploadFileRequest.ProtoReflect.Descriptor instead.
func (*CMsgClientUFSUploadFileRequest) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_ufs_proto_rawDescGZIP(), []int{0}
}

func (x *CMsgClientUFSUploadFileRequest) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *CMsgClientUFSUploadFileRequest) GetFileSize() uint32 {
	if x != nil && x.FileSize != nil {
		return *x.FileSize
	}
	return 0
}

func (x *CMsgClientUFSUploadFileRequest) GetRawFileSize() uint32 {
	if x != nil && x.RawFileSize != nil {
		return *x.RawFileSize
	}
	return 0
}

func (x *CMsgClientUFSUploadFileRequest) GetShaFile() []byte {
	if x != nil {
		return x.ShaFile
	}
	return nil
}

func (x *CMsgClientUFSUploadFileRequest) GetTimeStamp() uint64 {
	if x != nil && x.TimeStamp != nil {
		return *x.TimeStamp
	}
	return 0
}

func (x *CMsgClientUFSUploadFileRequest) GetFileName() string {
	if x != nil && x.FileName != nil {
		return *x.FileName
	}
	return ""
}

func (x *CMsgClientUFSUploadFileRequest) GetPlatformsToSyncDeprecated() uint32 {
	if x != nil && x.PlatformsToSyncDeprecated != nil {
		return *x.PlatformsToSyncDeprecated
	}
	return 0
}

func (x *CMsgClientUFSUploadFileRequest) GetPlatformsToSync() uint32 {
	if x != nil && x.PlatformsToSync != nil {
		return *x.PlatformsToSync
	}
	return Default_CMsgClientUFSUploadFileRequest_PlatformsToSync
}

func (x *CMsgClientUFSUploadFileRequest) GetCellId() uint32 {
	if x != nil && x.CellId != nil {
		return *x.CellId
	}
	return 0
}

func (x *CMsgClientUFSUploadFileRequest) GetCanEncrypt() bool {
	if x != nil && x.CanEncrypt != nil {
		return *x.CanEncrypt
	}
	return false
}

type CMsgClientUFSUploadFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eresult     *int32  `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
	ShaFile     []byte  `protobuf:"bytes,2,opt,name=sha_file,json=shaFile" json:"sha_file,omitempty"`
	UseHttp     *bool   `protobuf:"varint,3,opt,name=use_http,json=useHttp" json:"use_http,omitempty"`
	HttpHost    *string `protobuf:"bytes,4,opt,name=http_host,json=httpHost" json:"http_host,omitempty"`
	HttpUrl     *string `protobuf:"bytes,5,opt,name=http_url,json=httpUrl" json:"http_url,omitempty"`
	KvHeaders   []byte  `protobuf:"bytes,6,opt,name=kv_headers,json=kvHeaders" json:"kv_headers,omitempty"`
	UseHttps    *bool   `protobuf:"varint,7,opt,name=use_https,json=useHttps" json:"use_https,omitempty"`
	EncryptFile *bool   `protobuf:"varint,8,opt,name=encrypt_file,json=encryptFile" json:"encrypt_file,omitempty"`
}

// Default values for CMsgClientUFSUploadFileResponse fields.
const (
	Default_CMsgClientUFSUploadFileResponse_Eresult = int32(2)
)

func (x *CMsgClientUFSUploadFileResponse) Reset() {
	*x = CMsgClientUFSUploadFileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_ufs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientUFSUploadFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientUFSUploadFileResponse) ProtoMessage() {}

func (x *CMsgClientUFSUploadFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_ufs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientUFSUploadFileResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientUFSUploadFileResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_ufs_proto_rawDescGZIP(), []int{1}
}

func (x *CMsgClientUFSUploadFileResponse) GetEresult() int32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return Default_CMsgClientUFSUploadFileResponse_Eresult
}

func (x *CMsgClientUFSUploadFileResponse) GetShaFile() []byte {
	if x != nil {
		return x.ShaFile
	}
	return nil
}

func (x *CMsgClientUFSUploadFileResponse) GetUseHttp() bool {
	if x != nil && x.UseHttp != nil {
		return *x.UseHttp
	}
	return false
}

func (x *CMsgClientUFSUploadFileResponse) GetHttpHost() string {
	if x != nil && x.HttpHost != nil {
		return *x.HttpHost
	}
	return ""
}

func (x *CMsgClientUFSUploadFileResponse) GetHttpUrl() string {
	if x != nil && x.HttpUrl != nil {
		return *x.HttpUrl
	}
	return ""
}

func (x *CMsgClientUFSUploadFileResponse) GetKvHeaders() []byte {
	if x != nil {
		return x.KvHeaders
	}
	return nil
}

func (x *CMsgClientUFSUploadFileResponse) GetUseHttps() bool {
	if x != nil && x.UseHttps != nil {
		return *x.UseHttps
	}
	return false
}

func (x *CMsgClientUFSUploadFileResponse) GetEncryptFile() bool {
	if x != nil && x.EncryptFile != nil {
		return *x.EncryptFile
	}
	return false
}

type CMsgClientUFSUploadCommit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Files []*CMsgClientUFSUploadCommit_File `protobuf:"bytes,1,rep,name=files" json:"files,omitempty"`
}

func (x *CMsgClientUFSUploadCommit) Reset() {
	*x = CMsgClientUFSUploadCommit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_ufs_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientUFSUploadCommit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientUFSUploadCommit) ProtoMessage() {}

func (x *CMsgClientUFSUploadCommit) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_ufs_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientUFSUploadCommit.ProtoReflect.Descriptor instead.
func (*CMsgClientUFSUploadCommit) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_ufs_proto_rawDescGZIP(), []int{2}
}

func (x *CMsgClientUFSUploadCommit) GetFiles() []*CMsgClientUFSUploadCommit_File {
	if x != nil {
		return x.Files
	}
	return nil
}

type CMsgClientUFSUploadCommitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Files []*CMsgClientUFSUploadCommitResponse_File `protobuf:"bytes,1,rep,name=files" json:"files,omitempty"`
}

func (x *CMsgClientUFSUploadCommitResponse) Reset() {
	*x = CMsgClientUFSUploadCommitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_ufs_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientUFSUploadCommitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientUFSUploadCommitResponse) ProtoMessage() {}

func (x *CMsgClientUFSUploadCommitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_ufs_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientUFSUploadCommitResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientUFSUploadCommitResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_ufs_proto_rawDescGZIP(), []int{3}
}

func (x *CMsgClientUFSUploadCommitResponse) GetFiles() []*CMsgClientUFSUploadCommitResponse_File {
	if x != nil {
		return x.Files
	}
	return nil
}

type CMsgClientUFSFileChunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShaFile   []byte  `protobuf:"bytes,1,opt,name=sha_file,json=shaFile" json:"sha_file,omitempty"`
	FileStart *uint32 `protobuf:"varint,2,opt,name=file_start,json=fileStart" json:"file_start,omitempty"`
	Data      []byte  `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (x *CMsgClientUFSFileChunk) Reset() {
	*x = CMsgClientUFSFileChunk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_ufs_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientUFSFileChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientUFSFileChunk) ProtoMessage() {}

func (x *CMsgClientUFSFileChunk) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_ufs_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientUFSFileChunk.ProtoReflect.Descriptor instead.
func (*CMsgClientUFSFileChunk) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_ufs_proto_rawDescGZIP(), []int{4}
}

func (x *CMsgClientUFSFileChunk) GetShaFile() []byte {
	if x != nil {
		return x.ShaFile
	}
	return nil
}

func (x *CMsgClientUFSFileChunk) GetFileStart() uint32 {
	if x != nil && x.FileStart != nil {
		return *x.FileStart
	}
	return 0
}

func (x *CMsgClientUFSFileChunk) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type CMsgClientUFSTransferHeartbeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CMsgClientUFSTransferHeartbeat) Reset() {
	*x = CMsgClientUFSTransferHeartbeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_ufs_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientUFSTransferHeartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientUFSTransferHeartbeat) ProtoMessage() {}

func (x *CMsgClientUFSTransferHeartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_ufs_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientUFSTransferHeartbeat.ProtoReflect.Descriptor instead.
func (*CMsgClientUFSTransferHeartbeat) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_ufs_proto_rawDescGZIP(), []int{5}
}

type CMsgClientUFSUploadFileFinished struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eresult *int32 `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
	ShaFile []byte `protobuf:"bytes,2,opt,name=sha_file,json=shaFile" json:"sha_file,omitempty"`
}

// Default values for CMsgClientUFSUploadFileFinished fields.
const (
	Default_CMsgClientUFSUploadFileFinished_Eresult = int32(2)
)

func (x *CMsgClientUFSUploadFileFinished) Reset() {
	*x = CMsgClientUFSUploadFileFinished{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_ufs_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientUFSUploadFileFinished) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientUFSUploadFileFinished) ProtoMessage() {}

func (x *CMsgClientUFSUploadFileFinished) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_ufs_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientUFSUploadFileFinished.ProtoReflect.Descriptor instead.
func (*CMsgClientUFSUploadFileFinished) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_ufs_proto_rawDescGZIP(), []int{6}
}

func (x *CMsgClientUFSUploadFileFinished) GetEresult() int32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return Default_CMsgClientUFSUploadFileFinished_Eresult
}

func (x *CMsgClientUFSUploadFileFinished) GetShaFile() []byte {
	if x != nil {
		return x.ShaFile
	}
	return nil
}

type CMsgClientUFSDeleteFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId            *uint32 `protobuf:"varint,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	FileName         *string `protobuf:"bytes,2,opt,name=file_name,json=fileName" json:"file_name,omitempty"`
	IsExplicitDelete *bool   `protobuf:"varint,3,opt,name=is_explicit_delete,json=isExplicitDelete" json:"is_explicit_delete,omitempty"`
}

func (x *CMsgClientUFSDeleteFileRequest) Reset() {
	*x = CMsgClientUFSDeleteFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_ufs_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientUFSDeleteFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientUFSDeleteFileRequest) ProtoMessage() {}

func (x *CMsgClientUFSDeleteFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_ufs_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientUFSDeleteFileRequest.ProtoReflect.Descriptor instead.
func (*CMsgClientUFSDeleteFileRequest) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_ufs_proto_rawDescGZIP(), []int{7}
}

func (x *CMsgClientUFSDeleteFileRequest) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *CMsgClientUFSDeleteFileRequest) GetFileName() string {
	if x != nil && x.FileName != nil {
		return *x.FileName
	}
	return ""
}

func (x *CMsgClientUFSDeleteFileRequest) GetIsExplicitDelete() bool {
	if x != nil && x.IsExplicitDelete != nil {
		return *x.IsExplicitDelete
	}
	return false
}

type CMsgClientUFSDeleteFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eresult  *int32  `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
	FileName *string `protobuf:"bytes,2,opt,name=file_name,json=fileName" json:"file_name,omitempty"`
}

// Default values for CMsgClientUFSDeleteFileResponse fields.
const (
	Default_CMsgClientUFSDeleteFileResponse_Eresult = int32(2)
)

func (x *CMsgClientUFSDeleteFileResponse) Reset() {
	*x = CMsgClientUFSDeleteFileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_ufs_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientUFSDeleteFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientUFSDeleteFileResponse) ProtoMessage() {}

func (x *CMsgClientUFSDeleteFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_ufs_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientUFSDeleteFileResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientUFSDeleteFileResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_ufs_proto_rawDescGZIP(), []int{8}
}

func (x *CMsgClientUFSDeleteFileResponse) GetEresult() int32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return Default_CMsgClientUFSDeleteFileResponse_Eresult
}

func (x *CMsgClientUFSDeleteFileResponse) GetFileName() string {
	if x != nil && x.FileName != nil {
		return *x.FileName
	}
	return ""
}

type CMsgClientUFSGetFileListForApp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppsToQuery      []uint32 `protobuf:"varint,1,rep,name=apps_to_query,json=appsToQuery" json:"apps_to_query,omitempty"`
	SendPathPrefixes *bool    `protobuf:"varint,2,opt,name=send_path_prefixes,json=sendPathPrefixes" json:"send_path_prefixes,omitempty"`
}

func (x *CMsgClientUFSGetFileListForApp) Reset() {
	*x = CMsgClientUFSGetFileListForApp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_ufs_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientUFSGetFileListForApp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientUFSGetFileListForApp) ProtoMessage() {}

func (x *CMsgClientUFSGetFileListForApp) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_ufs_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientUFSGetFileListForApp.ProtoReflect.Descriptor instead.
func (*CMsgClientUFSGetFileListForApp) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_ufs_proto_rawDescGZIP(), []int{9}
}

func (x *CMsgClientUFSGetFileListForApp) GetAppsToQuery() []uint32 {
	if x != nil {
		return x.AppsToQuery
	}
	return nil
}

func (x *CMsgClientUFSGetFileListForApp) GetSendPathPrefixes() bool {
	if x != nil && x.SendPathPrefixes != nil {
		return *x.SendPathPrefixes
	}
	return false
}

type CMsgClientUFSGetFileListForAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Files        []*CMsgClientUFSGetFileListForAppResponse_File `protobuf:"bytes,1,rep,name=files" json:"files,omitempty"`
	PathPrefixes []string                                       `protobuf:"bytes,2,rep,name=path_prefixes,json=pathPrefixes" json:"path_prefixes,omitempty"`
}

func (x *CMsgClientUFSGetFileListForAppResponse) Reset() {
	*x = CMsgClientUFSGetFileListForAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_ufs_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientUFSGetFileListForAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientUFSGetFileListForAppResponse) ProtoMessage() {}

func (x *CMsgClientUFSGetFileListForAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_ufs_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientUFSGetFileListForAppResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientUFSGetFileListForAppResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_ufs_proto_rawDescGZIP(), []int{10}
}

func (x *CMsgClientUFSGetFileListForAppResponse) GetFiles() []*CMsgClientUFSGetFileListForAppResponse_File {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *CMsgClientUFSGetFileListForAppResponse) GetPathPrefixes() []string {
	if x != nil {
		return x.PathPrefixes
	}
	return nil
}

type CMsgClientUFSDownloadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId         *uint32 `protobuf:"varint,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	FileName      *string `protobuf:"bytes,2,opt,name=file_name,json=fileName" json:"file_name,omitempty"`
	CanHandleHttp *bool   `protobuf:"varint,3,opt,name=can_handle_http,json=canHandleHttp" json:"can_handle_http,omitempty"`
}

func (x *CMsgClientUFSDownloadRequest) Reset() {
	*x = CMsgClientUFSDownloadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_ufs_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientUFSDownloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientUFSDownloadRequest) ProtoMessage() {}

func (x *CMsgClientUFSDownloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_ufs_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientUFSDownloadRequest.ProtoReflect.Descriptor instead.
func (*CMsgClientUFSDownloadRequest) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_ufs_proto_rawDescGZIP(), []int{11}
}

func (x *CMsgClientUFSDownloadRequest) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *CMsgClientUFSDownloadRequest) GetFileName() string {
	if x != nil && x.FileName != nil {
		return *x.FileName
	}
	return ""
}

func (x *CMsgClientUFSDownloadRequest) GetCanHandleHttp() bool {
	if x != nil && x.CanHandleHttp != nil {
		return *x.CanHandleHttp
	}
	return false
}

type CMsgClientUFSDownloadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eresult          *int32  `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
	AppId            *uint32 `protobuf:"varint,2,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	FileSize         *uint32 `protobuf:"varint,3,opt,name=file_size,json=fileSize" json:"file_size,omitempty"`
	RawFileSize      *uint32 `protobuf:"varint,4,opt,name=raw_file_size,json=rawFileSize" json:"raw_file_size,omitempty"`
	ShaFile          []byte  `protobuf:"bytes,5,opt,name=sha_file,json=shaFile" json:"sha_file,omitempty"`
	TimeStamp        *uint64 `protobuf:"varint,6,opt,name=time_stamp,json=timeStamp" json:"time_stamp,omitempty"`
	IsExplicitDelete *bool   `protobuf:"varint,7,opt,name=is_explicit_delete,json=isExplicitDelete" json:"is_explicit_delete,omitempty"`
	UseHttp          *bool   `protobuf:"varint,8,opt,name=use_http,json=useHttp" json:"use_http,omitempty"`
	HttpHost         *string `protobuf:"bytes,9,opt,name=http_host,json=httpHost" json:"http_host,omitempty"`
	HttpUrl          *string `protobuf:"bytes,10,opt,name=http_url,json=httpUrl" json:"http_url,omitempty"`
	KvHeaders        []byte  `protobuf:"bytes,11,opt,name=kv_headers,json=kvHeaders" json:"kv_headers,omitempty"`
	UseHttps         *bool   `protobuf:"varint,12,opt,name=use_https,json=useHttps" json:"use_https,omitempty"`
	Encrypted        *bool   `protobuf:"varint,13,opt,name=encrypted" json:"encrypted,omitempty"`
}

// Default values for CMsgClientUFSDownloadResponse fields.
const (
	Default_CMsgClientUFSDownloadResponse_Eresult = int32(2)
)

func (x *CMsgClientUFSDownloadResponse) Reset() {
	*x = CMsgClientUFSDownloadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_ufs_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientUFSDownloadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientUFSDownloadResponse) ProtoMessage() {}

func (x *CMsgClientUFSDownloadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_ufs_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientUFSDownloadResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientUFSDownloadResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_ufs_proto_rawDescGZIP(), []int{12}
}

func (x *CMsgClientUFSDownloadResponse) GetEresult() int32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return Default_CMsgClientUFSDownloadResponse_Eresult
}

func (x *CMsgClientUFSDownloadResponse) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *CMsgClientUFSDownloadResponse) GetFileSize() uint32 {
	if x != nil && x.FileSize != nil {
		return *x.FileSize
	}
	return 0
}

func (x *CMsgClientUFSDownloadResponse) GetRawFileSize() uint32 {
	if x != nil && x.RawFileSize != nil {
		return *x.RawFileSize
	}
	return 0
}

func (x *CMsgClientUFSDownloadResponse) GetShaFile() []byte {
	if x != nil {
		return x.ShaFile
	}
	return nil
}

func (x *CMsgClientUFSDownloadResponse) GetTimeStamp() uint64 {
	if x != nil && x.TimeStamp != nil {
		return *x.TimeStamp
	}
	return 0
}

func (x *CMsgClientUFSDownloadResponse) GetIsExplicitDelete() bool {
	if x != nil && x.IsExplicitDelete != nil {
		return *x.IsExplicitDelete
	}
	return false
}

func (x *CMsgClientUFSDownloadResponse) GetUseHttp() bool {
	if x != nil && x.UseHttp != nil {
		return *x.UseHttp
	}
	return false
}

func (x *CMsgClientUFSDownloadResponse) GetHttpHost() string {
	if x != nil && x.HttpHost != nil {
		return *x.HttpHost
	}
	return ""
}

func (x *CMsgClientUFSDownloadResponse) GetHttpUrl() string {
	if x != nil && x.HttpUrl != nil {
		return *x.HttpUrl
	}
	return ""
}

func (x *CMsgClientUFSDownloadResponse) GetKvHeaders() []byte {
	if x != nil {
		return x.KvHeaders
	}
	return nil
}

func (x *CMsgClientUFSDownloadResponse) GetUseHttps() bool {
	if x != nil && x.UseHttps != nil {
		return *x.UseHttps
	}
	return false
}

func (x *CMsgClientUFSDownloadResponse) GetEncrypted() bool {
	if x != nil && x.Encrypted != nil {
		return *x.Encrypted
	}
	return false
}

type CMsgClientUFSLoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProtocolVersion *uint32  `protobuf:"varint,1,opt,name=protocol_version,json=protocolVersion" json:"protocol_version,omitempty"`
	AmSessionToken  *uint64  `protobuf:"varint,2,opt,name=am_session_token,json=amSessionToken" json:"am_session_token,omitempty"`
	Apps            []uint32 `protobuf:"varint,3,rep,name=apps" json:"apps,omitempty"`
}

func (x *CMsgClientUFSLoginRequest) Reset() {
	*x = CMsgClientUFSLoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_ufs_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientUFSLoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientUFSLoginRequest) ProtoMessage() {}

func (x *CMsgClientUFSLoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_ufs_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientUFSLoginRequest.ProtoReflect.Descriptor instead.
func (*CMsgClientUFSLoginRequest) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_ufs_proto_rawDescGZIP(), []int{13}
}

func (x *CMsgClientUFSLoginRequest) GetProtocolVersion() uint32 {
	if x != nil && x.ProtocolVersion != nil {
		return *x.ProtocolVersion
	}
	return 0
}

func (x *CMsgClientUFSLoginRequest) GetAmSessionToken() uint64 {
	if x != nil && x.AmSessionToken != nil {
		return *x.AmSessionToken
	}
	return 0
}

func (x *CMsgClientUFSLoginRequest) GetApps() []uint32 {
	if x != nil {
		return x.Apps
	}
	return nil
}

type CMsgClientUFSLoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eresult *int32 `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
}

// Default values for CMsgClientUFSLoginResponse fields.
const (
	Default_CMsgClientUFSLoginResponse_Eresult = int32(2)
)

func (x *CMsgClientUFSLoginResponse) Reset() {
	*x = CMsgClientUFSLoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_ufs_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientUFSLoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientUFSLoginResponse) ProtoMessage() {}

func (x *CMsgClientUFSLoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_ufs_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientUFSLoginResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientUFSLoginResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_ufs_proto_rawDescGZIP(), []int{14}
}

func (x *CMsgClientUFSLoginResponse) GetEresult() int32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return Default_CMsgClientUFSLoginResponse_Eresult
}

type CMsgClientUFSGetUGCDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hcontent *uint64 `protobuf:"fixed64,1,opt,name=hcontent,def=18446744073709551615" json:"hcontent,omitempty"`
}

// Default values for CMsgClientUFSGetUGCDetails fields.
const (
	Default_CMsgClientUFSGetUGCDetails_Hcontent = uint64(18446744073709551615)
)

func (x *CMsgClientUFSGetUGCDetails) Reset() {
	*x = CMsgClientUFSGetUGCDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_ufs_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientUFSGetUGCDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientUFSGetUGCDetails) ProtoMessage() {}

func (x *CMsgClientUFSGetUGCDetails) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_ufs_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientUFSGetUGCDetails.ProtoReflect.Descriptor instead.
func (*CMsgClientUFSGetUGCDetails) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_ufs_proto_rawDescGZIP(), []int{15}
}

func (x *CMsgClientUFSGetUGCDetails) GetHcontent() uint64 {
	if x != nil && x.Hcontent != nil {
		return *x.Hcontent
	}
	return Default_CMsgClientUFSGetUGCDetails_Hcontent
}

type CMsgClientUFSGetUGCDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eresult            *int32  `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
	Url                *string `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	AppId              *uint32 `protobuf:"varint,3,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	Filename           *string `protobuf:"bytes,4,opt,name=filename" json:"filename,omitempty"`
	SteamidCreator     *uint64 `protobuf:"fixed64,5,opt,name=steamid_creator,json=steamidCreator" json:"steamid_creator,omitempty"`
	FileSize           *uint32 `protobuf:"varint,6,opt,name=file_size,json=fileSize" json:"file_size,omitempty"`
	CompressedFileSize *uint32 `protobuf:"varint,7,opt,name=compressed_file_size,json=compressedFileSize" json:"compressed_file_size,omitempty"`
	RangecheckHost     *string `protobuf:"bytes,8,opt,name=rangecheck_host,json=rangecheckHost" json:"rangecheck_host,omitempty"`
	FileEncodedSha1    *string `protobuf:"bytes,9,opt,name=file_encoded_sha1,json=fileEncodedSha1" json:"file_encoded_sha1,omitempty"`
}

// Default values for CMsgClientUFSGetUGCDetailsResponse fields.
const (
	Default_CMsgClientUFSGetUGCDetailsResponse_Eresult = int32(2)
)

func (x *CMsgClientUFSGetUGCDetailsResponse) Reset() {
	*x = CMsgClientUFSGetUGCDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_ufs_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientUFSGetUGCDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientUFSGetUGCDetailsResponse) ProtoMessage() {}

func (x *CMsgClientUFSGetUGCDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_ufs_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientUFSGetUGCDetailsResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientUFSGetUGCDetailsResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_ufs_proto_rawDescGZIP(), []int{16}
}

func (x *CMsgClientUFSGetUGCDetailsResponse) GetEresult() int32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return Default_CMsgClientUFSGetUGCDetailsResponse_Eresult
}

func (x *CMsgClientUFSGetUGCDetailsResponse) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *CMsgClientUFSGetUGCDetailsResponse) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *CMsgClientUFSGetUGCDetailsResponse) GetFilename() string {
	if x != nil && x.Filename != nil {
		return *x.Filename
	}
	return ""
}

func (x *CMsgClientUFSGetUGCDetailsResponse) GetSteamidCreator() uint64 {
	if x != nil && x.SteamidCreator != nil {
		return *x.SteamidCreator
	}
	return 0
}

func (x *CMsgClientUFSGetUGCDetailsResponse) GetFileSize() uint32 {
	if x != nil && x.FileSize != nil {
		return *x.FileSize
	}
	return 0
}

func (x *CMsgClientUFSGetUGCDetailsResponse) GetCompressedFileSize() uint32 {
	if x != nil && x.CompressedFileSize != nil {
		return *x.CompressedFileSize
	}
	return 0
}

func (x *CMsgClientUFSGetUGCDetailsResponse) GetRangecheckHost() string {
	if x != nil && x.RangecheckHost != nil {
		return *x.RangecheckHost
	}
	return ""
}

func (x *CMsgClientUFSGetUGCDetailsResponse) GetFileEncodedSha1() string {
	if x != nil && x.FileEncodedSha1 != nil {
		return *x.FileEncodedSha1
	}
	return ""
}

type CMsgClientUFSGetSingleFileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId    *uint32 `protobuf:"varint,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	FileName *string `protobuf:"bytes,2,opt,name=file_name,json=fileName" json:"file_name,omitempty"`
}

func (x *CMsgClientUFSGetSingleFileInfo) Reset() {
	*x = CMsgClientUFSGetSingleFileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_ufs_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientUFSGetSingleFileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientUFSGetSingleFileInfo) ProtoMessage() {}

func (x *CMsgClientUFSGetSingleFileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_ufs_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientUFSGetSingleFileInfo.ProtoReflect.Descriptor instead.
func (*CMsgClientUFSGetSingleFileInfo) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_ufs_proto_rawDescGZIP(), []int{17}
}

func (x *CMsgClientUFSGetSingleFileInfo) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *CMsgClientUFSGetSingleFileInfo) GetFileName() string {
	if x != nil && x.FileName != nil {
		return *x.FileName
	}
	return ""
}

type CMsgClientUFSGetSingleFileInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eresult          *int32  `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
	AppId            *uint32 `protobuf:"varint,2,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	FileName         *string `protobuf:"bytes,3,opt,name=file_name,json=fileName" json:"file_name,omitempty"`
	ShaFile          []byte  `protobuf:"bytes,4,opt,name=sha_file,json=shaFile" json:"sha_file,omitempty"`
	TimeStamp        *uint64 `protobuf:"varint,5,opt,name=time_stamp,json=timeStamp" json:"time_stamp,omitempty"`
	RawFileSize      *uint32 `protobuf:"varint,6,opt,name=raw_file_size,json=rawFileSize" json:"raw_file_size,omitempty"`
	IsExplicitDelete *bool   `protobuf:"varint,7,opt,name=is_explicit_delete,json=isExplicitDelete" json:"is_explicit_delete,omitempty"`
}

// Default values for CMsgClientUFSGetSingleFileInfoResponse fields.
const (
	Default_CMsgClientUFSGetSingleFileInfoResponse_Eresult = int32(2)
)

func (x *CMsgClientUFSGetSingleFileInfoResponse) Reset() {
	*x = CMsgClientUFSGetSingleFileInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_ufs_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientUFSGetSingleFileInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientUFSGetSingleFileInfoResponse) ProtoMessage() {}

func (x *CMsgClientUFSGetSingleFileInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_ufs_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientUFSGetSingleFileInfoResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientUFSGetSingleFileInfoResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_ufs_proto_rawDescGZIP(), []int{18}
}

func (x *CMsgClientUFSGetSingleFileInfoResponse) GetEresult() int32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return Default_CMsgClientUFSGetSingleFileInfoResponse_Eresult
}

func (x *CMsgClientUFSGetSingleFileInfoResponse) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *CMsgClientUFSGetSingleFileInfoResponse) GetFileName() string {
	if x != nil && x.FileName != nil {
		return *x.FileName
	}
	return ""
}

func (x *CMsgClientUFSGetSingleFileInfoResponse) GetShaFile() []byte {
	if x != nil {
		return x.ShaFile
	}
	return nil
}

func (x *CMsgClientUFSGetSingleFileInfoResponse) GetTimeStamp() uint64 {
	if x != nil && x.TimeStamp != nil {
		return *x.TimeStamp
	}
	return 0
}

func (x *CMsgClientUFSGetSingleFileInfoResponse) GetRawFileSize() uint32 {
	if x != nil && x.RawFileSize != nil {
		return *x.RawFileSize
	}
	return 0
}

func (x *CMsgClientUFSGetSingleFileInfoResponse) GetIsExplicitDelete() bool {
	if x != nil && x.IsExplicitDelete != nil {
		return *x.IsExplicitDelete
	}
	return false
}

type CMsgClientUFSShareFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId    *uint32 `protobuf:"varint,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	FileName *string `protobuf:"bytes,2,opt,name=file_name,json=fileName" json:"file_name,omitempty"`
}

func (x *CMsgClientUFSShareFile) Reset() {
	*x = CMsgClientUFSShareFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_ufs_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientUFSShareFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientUFSShareFile) ProtoMessage() {}

func (x *CMsgClientUFSShareFile) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_ufs_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientUFSShareFile.ProtoReflect.Descriptor instead.
func (*CMsgClientUFSShareFile) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_ufs_proto_rawDescGZIP(), []int{19}
}

func (x *CMsgClientUFSShareFile) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *CMsgClientUFSShareFile) GetFileName() string {
	if x != nil && x.FileName != nil {
		return *x.FileName
	}
	return ""
}

type CMsgClientUFSShareFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eresult  *int32  `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
	Hcontent *uint64 `protobuf:"fixed64,2,opt,name=hcontent,def=18446744073709551615" json:"hcontent,omitempty"`
}

// Default values for CMsgClientUFSShareFileResponse fields.
const (
	Default_CMsgClientUFSShareFileResponse_Eresult  = int32(2)
	Default_CMsgClientUFSShareFileResponse_Hcontent = uint64(18446744073709551615)
)

func (x *CMsgClientUFSShareFileResponse) Reset() {
	*x = CMsgClientUFSShareFileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_ufs_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientUFSShareFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientUFSShareFileResponse) ProtoMessage() {}

func (x *CMsgClientUFSShareFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_ufs_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientUFSShareFileResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientUFSShareFileResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_ufs_proto_rawDescGZIP(), []int{20}
}

func (x *CMsgClientUFSShareFileResponse) GetEresult() int32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return Default_CMsgClientUFSShareFileResponse_Eresult
}

func (x *CMsgClientUFSShareFileResponse) GetHcontent() uint64 {
	if x != nil && x.Hcontent != nil {
		return *x.Hcontent
	}
	return Default_CMsgClientUFSShareFileResponse_Hcontent
}

type CMsgClientUFSUploadCommit_File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eresult  *int32  `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
	AppId    *uint32 `protobuf:"varint,2,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	ShaFile  []byte  `protobuf:"bytes,3,opt,name=sha_file,json=shaFile" json:"sha_file,omitempty"`
	CubFile  *uint32 `protobuf:"varint,4,opt,name=cub_file,json=cubFile" json:"cub_file,omitempty"`
	FileName *string `protobuf:"bytes,5,opt,name=file_name,json=fileName" json:"file_name,omitempty"`
}

// Default values for CMsgClientUFSUploadCommit_File fields.
const (
	Default_CMsgClientUFSUploadCommit_File_Eresult = int32(2)
)

func (x *CMsgClientUFSUploadCommit_File) Reset() {
	*x = CMsgClientUFSUploadCommit_File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_ufs_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientUFSUploadCommit_File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientUFSUploadCommit_File) ProtoMessage() {}

func (x *CMsgClientUFSUploadCommit_File) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_ufs_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientUFSUploadCommit_File.ProtoReflect.Descriptor instead.
func (*CMsgClientUFSUploadCommit_File) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_ufs_proto_rawDescGZIP(), []int{2, 0}
}

func (x *CMsgClientUFSUploadCommit_File) GetEresult() int32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return Default_CMsgClientUFSUploadCommit_File_Eresult
}

func (x *CMsgClientUFSUploadCommit_File) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *CMsgClientUFSUploadCommit_File) GetShaFile() []byte {
	if x != nil {
		return x.ShaFile
	}
	return nil
}

func (x *CMsgClientUFSUploadCommit_File) GetCubFile() uint32 {
	if x != nil && x.CubFile != nil {
		return *x.CubFile
	}
	return 0
}

func (x *CMsgClientUFSUploadCommit_File) GetFileName() string {
	if x != nil && x.FileName != nil {
		return *x.FileName
	}
	return ""
}

type CMsgClientUFSUploadCommitResponse_File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eresult *int32  `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
	AppId   *uint32 `protobuf:"varint,2,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	ShaFile []byte  `protobuf:"bytes,3,opt,name=sha_file,json=shaFile" json:"sha_file,omitempty"`
}

// Default values for CMsgClientUFSUploadCommitResponse_File fields.
const (
	Default_CMsgClientUFSUploadCommitResponse_File_Eresult = int32(2)
)

func (x *CMsgClientUFSUploadCommitResponse_File) Reset() {
	*x = CMsgClientUFSUploadCommitResponse_File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_ufs_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientUFSUploadCommitResponse_File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientUFSUploadCommitResponse_File) ProtoMessage() {}

func (x *CMsgClientUFSUploadCommitResponse_File) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_ufs_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientUFSUploadCommitResponse_File.ProtoReflect.Descriptor instead.
func (*CMsgClientUFSUploadCommitResponse_File) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_ufs_proto_rawDescGZIP(), []int{3, 0}
}

func (x *CMsgClientUFSUploadCommitResponse_File) GetEresult() int32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return Default_CMsgClientUFSUploadCommitResponse_File_Eresult
}

func (x *CMsgClientUFSUploadCommitResponse_File) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *CMsgClientUFSUploadCommitResponse_File) GetShaFile() []byte {
	if x != nil {
		return x.ShaFile
	}
	return nil
}

type CMsgClientUFSGetFileListForAppResponse_File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId            *uint32 `protobuf:"varint,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	FileName         *string `protobuf:"bytes,2,opt,name=file_name,json=fileName" json:"file_name,omitempty"`
	ShaFile          []byte  `protobuf:"bytes,3,opt,name=sha_file,json=shaFile" json:"sha_file,omitempty"`
	TimeStamp        *uint64 `protobuf:"varint,4,opt,name=time_stamp,json=timeStamp" json:"time_stamp,omitempty"`
	RawFileSize      *uint32 `protobuf:"varint,5,opt,name=raw_file_size,json=rawFileSize" json:"raw_file_size,omitempty"`
	IsExplicitDelete *bool   `protobuf:"varint,6,opt,name=is_explicit_delete,json=isExplicitDelete" json:"is_explicit_delete,omitempty"`
	PlatformsToSync  *uint32 `protobuf:"varint,7,opt,name=platforms_to_sync,json=platformsToSync" json:"platforms_to_sync,omitempty"`
	PathPrefixIndex  *uint32 `protobuf:"varint,8,opt,name=path_prefix_index,json=pathPrefixIndex" json:"path_prefix_index,omitempty"`
}

func (x *CMsgClientUFSGetFileListForAppResponse_File) Reset() {
	*x = CMsgClientUFSGetFileListForAppResponse_File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_clientserver_ufs_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClientUFSGetFileListForAppResponse_File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientUFSGetFileListForAppResponse_File) ProtoMessage() {}

func (x *CMsgClientUFSGetFileListForAppResponse_File) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_ufs_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientUFSGetFileListForAppResponse_File.ProtoReflect.Descriptor instead.
func (*CMsgClientUFSGetFileListForAppResponse_File) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_ufs_proto_rawDescGZIP(), []int{10, 0}
}

func (x *CMsgClientUFSGetFileListForAppResponse_File) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *CMsgClientUFSGetFileListForAppResponse_File) GetFileName() string {
	if x != nil && x.FileName != nil {
		return *x.FileName
	}
	return ""
}

func (x *CMsgClientUFSGetFileListForAppResponse_File) GetShaFile() []byte {
	if x != nil {
		return x.ShaFile
	}
	return nil
}

func (x *CMsgClientUFSGetFileListForAppResponse_File) GetTimeStamp() uint64 {
	if x != nil && x.TimeStamp != nil {
		return *x.TimeStamp
	}
	return 0
}

func (x *CMsgClientUFSGetFileListForAppResponse_File) GetRawFileSize() uint32 {
	if x != nil && x.RawFileSize != nil {
		return *x.RawFileSize
	}
	return 0
}

func (x *CMsgClientUFSGetFileListForAppResponse_File) GetIsExplicitDelete() bool {
	if x != nil && x.IsExplicitDelete != nil {
		return *x.IsExplicitDelete
	}
	return false
}

func (x *CMsgClientUFSGetFileListForAppResponse_File) GetPlatformsToSync() uint32 {
	if x != nil && x.PlatformsToSync != nil {
		return *x.PlatformsToSync
	}
	return 0
}

func (x *CMsgClientUFSGetFileListForAppResponse_File) GetPathPrefixIndex() uint32 {
	if x != nil && x.PathPrefixIndex != nil {
		return *x.PathPrefixIndex
	}
	return 0
}

var File_steammessages_clientserver_ufs_proto protoreflect.FileDescriptor

var file_steammessages_clientserver_ufs_proto_rawDesc = []byte{
	0x0a, 0x24, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x75, 0x66, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x82, 0x03, 0x0a, 0x1e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55,
	0x46, 0x53, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x72, 0x61, 0x77, 0x5f, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x72, 0x61, 0x77, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x68, 0x61, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x73,
	0x68, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x1c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x5f,
	0x74, 0x6f, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x19, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x73, 0x54, 0x6f, 0x53, 0x79, 0x6e, 0x63, 0x44, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x36, 0x0a, 0x11, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x73,
	0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x0a,
	0x34, 0x32, 0x39, 0x34, 0x39, 0x36, 0x37, 0x32, 0x39, 0x35, 0x52, 0x0f, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x73, 0x54, 0x6f, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x17, 0x0a, 0x07, 0x63,
	0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x65,
	0x6c, 0x6c, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x6e, 0x5f, 0x65, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x63, 0x61, 0x6e, 0x45, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x22, 0x8b, 0x02, 0x0a, 0x1f, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x55, 0x46, 0x53, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x07, 0x65, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x32, 0x52, 0x07, 0x65,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x5f, 0x66, 0x69,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x73, 0x68, 0x61, 0x46, 0x69, 0x6c,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x5f, 0x68, 0x74, 0x74, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x75, 0x73, 0x65, 0x48, 0x74, 0x74, 0x70, 0x12, 0x1b, 0x0a, 0x09,
	0x68, 0x74, 0x74, 0x70, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x68, 0x74, 0x74, 0x70, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x74, 0x74,
	0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x74, 0x74,
	0x70, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x6b, 0x76, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x6b, 0x76, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x5f, 0x68, 0x74, 0x74, 0x70, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x75, 0x73, 0x65, 0x48, 0x74, 0x74, 0x70, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x46,
	0x69, 0x6c, 0x65, 0x22, 0xe2, 0x01, 0x0a, 0x19, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x55, 0x46, 0x53, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x12, 0x35, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x46, 0x53,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x1a, 0x8d, 0x01, 0x0a, 0x04, 0x46, 0x69, 0x6c,
	0x65, 0x12, 0x1b, 0x0a, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x3a, 0x01, 0x32, 0x52, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x15,
	0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x5f, 0x66, 0x69, 0x6c,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x73, 0x68, 0x61, 0x46, 0x69, 0x6c, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x63, 0x75, 0x62, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x63, 0x75, 0x62, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xb9, 0x01, 0x0a, 0x21, 0x43, 0x4d, 0x73,
	0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x46, 0x53, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d,
	0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x46, 0x53, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x1a, 0x55, 0x0a,
	0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x32, 0x52, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61,
	0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x73, 0x68, 0x61,
	0x46, 0x69, 0x6c, 0x65, 0x22, 0x66, 0x0a, 0x16, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x55, 0x46, 0x53, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x68, 0x61, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x73, 0x68, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x66,
	0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x20, 0x0a, 0x1e,
	0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x46, 0x53, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x22, 0x59,
	0x0a, 0x1f, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x46, 0x53, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65,
	0x64, 0x12, 0x1b, 0x0a, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x3a, 0x01, 0x32, 0x52, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x68, 0x61, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x73, 0x68, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x1e, 0x43, 0x4d,
	0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x46, 0x53, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06,
	0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x2c, 0x0a, 0x12, 0x69, 0x73, 0x5f, 0x65, 0x78, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x5f,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x73,
	0x45, 0x78, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x22, 0x5b,
	0x0a, 0x1f, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x46, 0x53, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1b, 0x0a, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x3a, 0x01, 0x32, 0x52, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x72, 0x0a, 0x1e, 0x43,
	0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x46, 0x53, 0x47, 0x65, 0x74, 0x46,
	0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6f, 0x72, 0x41, 0x70, 0x70, 0x12, 0x22, 0x0a,
	0x0d, 0x61, 0x70, 0x70, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x73, 0x54, 0x6f, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x70,
	0x72, 0x65, 0x66, 0x69, 0x78, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x73,
	0x65, 0x6e, 0x64, 0x50, 0x61, 0x74, 0x68, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x65, 0x73, 0x22,
	0xbc, 0x03, 0x0a, 0x26, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x46,
	0x53, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6f, 0x72, 0x41,
	0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x05, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x46, 0x53, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x46, 0x6f, 0x72, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x23,
	0x0a, 0x0d, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x74, 0x68, 0x50, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x65, 0x73, 0x1a, 0x9e, 0x02, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x15, 0x0a, 0x06,
	0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x73, 0x68, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x22, 0x0a, 0x0d, 0x72, 0x61,
	0x77, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x72, 0x61, 0x77, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2c,
	0x0a, 0x12, 0x69, 0x73, 0x5f, 0x65, 0x78, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x5f, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x45, 0x78,
	0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x11,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x79, 0x6e,
	0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x73, 0x54, 0x6f, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x61, 0x74, 0x68,
	0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0f, 0x70, 0x61, 0x74, 0x68, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x3a, 0x08, 0x80, 0xb5, 0x18, 0x08, 0x88, 0xb5, 0x18, 0x10, 0x22, 0x7a,
	0x0a, 0x1c, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x46, 0x53, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15,
	0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x61, 0x6e, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x5f, 0x68, 0x74, 0x74, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x63, 0x61, 0x6e,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x48, 0x74, 0x74, 0x70, 0x22, 0xa9, 0x03, 0x0a, 0x1d, 0x43,
	0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x46, 0x53, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x07,
	0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x32,
	0x52, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x22, 0x0a,
	0x0d, 0x72, 0x61, 0x77, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x72, 0x61, 0x77, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x73, 0x68, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2c, 0x0a, 0x12, 0x69,
	0x73, 0x5f, 0x65, 0x78, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x45, 0x78, 0x70, 0x6c, 0x69,
	0x63, 0x69, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x5f, 0x68, 0x74, 0x74, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x75, 0x73, 0x65,
	0x48, 0x74, 0x74, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x68, 0x6f, 0x73,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x74, 0x74, 0x70, 0x48, 0x6f, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x74, 0x74, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a,
	0x6b, 0x76, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x6b, 0x76, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x75,
	0x73, 0x65, 0x5f, 0x68, 0x74, 0x74, 0x70, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x48, 0x74, 0x74, 0x70, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x65, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x22, 0x84, 0x01, 0x0a, 0x19, 0x43, 0x4d, 0x73, 0x67, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x46, 0x53, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x28, 0x0a, 0x10, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x61, 0x6d, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x70, 0x70,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x04, 0x61, 0x70, 0x70, 0x73, 0x22, 0x39, 0x0a,
	0x1a, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x46, 0x53, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x07, 0x65,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x32, 0x52,
	0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x4e, 0x0a, 0x1a, 0x43, 0x4d, 0x73, 0x67,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x46, 0x53, 0x47, 0x65, 0x74, 0x55, 0x47, 0x43, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x30, 0x0a, 0x08, 0x68, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x06, 0x3a, 0x14, 0x31, 0x38, 0x34, 0x34, 0x36, 0x37,
	0x34, 0x34, 0x30, 0x37, 0x33, 0x37, 0x30, 0x39, 0x35, 0x35, 0x31, 0x36, 0x31, 0x35, 0x52, 0x08,
	0x68, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xd3, 0x02, 0x0a, 0x22, 0x43, 0x4d, 0x73,
	0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x46, 0x53, 0x47, 0x65, 0x74, 0x55, 0x47, 0x43,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1b, 0x0a, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x3a, 0x01, 0x32, 0x52, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x15,
	0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x69, 0x64, 0x5f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0e, 0x73, 0x74, 0x65, 0x61,
	0x6d, 0x69, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x64, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x61, 0x6e,
	0x67, 0x65, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x48, 0x6f,
	0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64,
	0x65, 0x64, 0x5f, 0x73, 0x68, 0x61, 0x31, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66,
	0x69, 0x6c, 0x65, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x53, 0x68, 0x61, 0x31, 0x22, 0x54,
	0x0a, 0x1e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x46, 0x53, 0x47,
	0x65, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x85, 0x02, 0x0a, 0x26, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x55, 0x46, 0x53, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1b, 0x0a, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x3a, 0x01, 0x32, 0x52, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x15, 0x0a, 0x06,
	0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x73, 0x68, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x22, 0x0a, 0x0d, 0x72, 0x61,
	0x77, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x72, 0x61, 0x77, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2c,
	0x0a, 0x12, 0x69, 0x73, 0x5f, 0x65, 0x78, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x5f, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x45, 0x78,
	0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x22, 0x4c, 0x0a, 0x16,
	0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x46, 0x53, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x6f, 0x0a, 0x1e, 0x43, 0x4d,
	0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x46, 0x53, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x07,
	0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x32,
	0x52, 0x07, 0x65, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x30, 0x0a, 0x08, 0x68, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x06, 0x3a, 0x14, 0x31, 0x38, 0x34,
	0x34, 0x36, 0x37, 0x34, 0x34, 0x30, 0x37, 0x33, 0x37, 0x30, 0x39, 0x35, 0x35, 0x31, 0x36, 0x31,
	0x35, 0x52, 0x08, 0x68, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x3f, 0x42, 0x21, 0x53,
	0x74, 0x65, 0x61, 0x6d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x66, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x48, 0x01, 0x50, 0x01, 0x5a, 0x13, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x64, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x2f, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x80, 0x01, 0x00,
}

var (
	file_steammessages_clientserver_ufs_proto_rawDescOnce sync.Once
	file_steammessages_clientserver_ufs_proto_rawDescData = file_steammessages_clientserver_ufs_proto_rawDesc
)

func file_steammessages_clientserver_ufs_proto_rawDescGZIP() []byte {
	file_steammessages_clientserver_ufs_proto_rawDescOnce.Do(func() {
		file_steammessages_clientserver_ufs_proto_rawDescData = protoimpl.X.CompressGZIP(file_steammessages_clientserver_ufs_proto_rawDescData)
	})
	return file_steammessages_clientserver_ufs_proto_rawDescData
}

var file_steammessages_clientserver_ufs_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_steammessages_clientserver_ufs_proto_goTypes = []interface{}{
	(*CMsgClientUFSUploadFileRequest)(nil),              // 0: CMsgClientUFSUploadFileRequest
	(*CMsgClientUFSUploadFileResponse)(nil),             // 1: CMsgClientUFSUploadFileResponse
	(*CMsgClientUFSUploadCommit)(nil),                   // 2: CMsgClientUFSUploadCommit
	(*CMsgClientUFSUploadCommitResponse)(nil),           // 3: CMsgClientUFSUploadCommitResponse
	(*CMsgClientUFSFileChunk)(nil),                      // 4: CMsgClientUFSFileChunk
	(*CMsgClientUFSTransferHeartbeat)(nil),              // 5: CMsgClientUFSTransferHeartbeat
	(*CMsgClientUFSUploadFileFinished)(nil),             // 6: CMsgClientUFSUploadFileFinished
	(*CMsgClientUFSDeleteFileRequest)(nil),              // 7: CMsgClientUFSDeleteFileRequest
	(*CMsgClientUFSDeleteFileResponse)(nil),             // 8: CMsgClientUFSDeleteFileResponse
	(*CMsgClientUFSGetFileListForApp)(nil),              // 9: CMsgClientUFSGetFileListForApp
	(*CMsgClientUFSGetFileListForAppResponse)(nil),      // 10: CMsgClientUFSGetFileListForAppResponse
	(*CMsgClientUFSDownloadRequest)(nil),                // 11: CMsgClientUFSDownloadRequest
	(*CMsgClientUFSDownloadResponse)(nil),               // 12: CMsgClientUFSDownloadResponse
	(*CMsgClientUFSLoginRequest)(nil),                   // 13: CMsgClientUFSLoginRequest
	(*CMsgClientUFSLoginResponse)(nil),                  // 14: CMsgClientUFSLoginResponse
	(*CMsgClientUFSGetUGCDetails)(nil),                  // 15: CMsgClientUFSGetUGCDetails
	(*CMsgClientUFSGetUGCDetailsResponse)(nil),          // 16: CMsgClientUFSGetUGCDetailsResponse
	(*CMsgClientUFSGetSingleFileInfo)(nil),              // 17: CMsgClientUFSGetSingleFileInfo
	(*CMsgClientUFSGetSingleFileInfoResponse)(nil),      // 18: CMsgClientUFSGetSingleFileInfoResponse
	(*CMsgClientUFSShareFile)(nil),                      // 19: CMsgClientUFSShareFile
	(*CMsgClientUFSShareFileResponse)(nil),              // 20: CMsgClientUFSShareFileResponse
	(*CMsgClientUFSUploadCommit_File)(nil),              // 21: CMsgClientUFSUploadCommit.File
	(*CMsgClientUFSUploadCommitResponse_File)(nil),      // 22: CMsgClientUFSUploadCommitResponse.File
	(*CMsgClientUFSGetFileListForAppResponse_File)(nil), // 23: CMsgClientUFSGetFileListForAppResponse.File
}
var file_steammessages_clientserver_ufs_proto_depIdxs = []int32{
	21, // 0: CMsgClientUFSUploadCommit.files:type_name -> CMsgClientUFSUploadCommit.File
	22, // 1: CMsgClientUFSUploadCommitResponse.files:type_name -> CMsgClientUFSUploadCommitResponse.File
	23, // 2: CMsgClientUFSGetFileListForAppResponse.files:type_name -> CMsgClientUFSGetFileListForAppResponse.File
	3,  // [3:3] is the sub-list for method output_type
	3,  // [3:3] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_steammessages_clientserver_ufs_proto_init() }
func file_steammessages_clientserver_ufs_proto_init() {
	if File_steammessages_clientserver_ufs_proto != nil {
		return
	}
	file_steammessages_base_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_steammessages_clientserver_ufs_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientUFSUploadFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_ufs_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientUFSUploadFileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_ufs_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientUFSUploadCommit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_ufs_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientUFSUploadCommitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_ufs_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientUFSFileChunk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_ufs_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientUFSTransferHeartbeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_ufs_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientUFSUploadFileFinished); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_ufs_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientUFSDeleteFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_ufs_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientUFSDeleteFileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_ufs_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientUFSGetFileListForApp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_ufs_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientUFSGetFileListForAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_ufs_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientUFSDownloadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_ufs_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientUFSDownloadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_ufs_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientUFSLoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_ufs_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientUFSLoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_ufs_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientUFSGetUGCDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_ufs_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientUFSGetUGCDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_ufs_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientUFSGetSingleFileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_ufs_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientUFSGetSingleFileInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_ufs_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientUFSShareFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_ufs_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientUFSShareFileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_ufs_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientUFSUploadCommit_File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_ufs_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientUFSUploadCommitResponse_File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_clientserver_ufs_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClientUFSGetFileListForAppResponse_File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_steammessages_clientserver_ufs_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_steammessages_clientserver_ufs_proto_goTypes,
		DependencyIndexes: file_steammessages_clientserver_ufs_proto_depIdxs,
		MessageInfos:      file_steammessages_clientserver_ufs_proto_msgTypes,
	}.Build()
	File_steammessages_clientserver_ufs_proto = out.File
	file_steammessages_clientserver_ufs_proto_rawDesc = nil
	file_steammessages_clientserver_ufs_proto_goTypes = nil
	file_steammessages_clientserver_ufs_proto_depIdxs = nil
}
