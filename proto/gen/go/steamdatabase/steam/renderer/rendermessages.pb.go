// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: renderer/rendermessages.proto

package renderer

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CMsgBeginFrame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FramePaintTime               *float64 `protobuf:"fixed64,1,opt,name=frame_paint_time,json=framePaintTime" json:"frame_paint_time,omitempty"`
	SurfaceWidth                 *uint32  `protobuf:"varint,2,opt,name=surface_width,json=surfaceWidth" json:"surface_width,omitempty"`
	SurfaceHeight                *uint32  `protobuf:"varint,3,opt,name=surface_height,json=surfaceHeight" json:"surface_height,omitempty"`
	RenderTarget                 *uint32  `protobuf:"varint,4,opt,name=render_target,json=renderTarget" json:"render_target,omitempty"`
	UiScaleFactor                *float64 `protobuf:"fixed64,5,opt,name=ui_scale_factor,json=uiScaleFactor" json:"ui_scale_factor,omitempty"`
	EmptyFrame                   *bool    `protobuf:"varint,6,opt,name=empty_frame,json=emptyFrame" json:"empty_frame,omitempty"`
	ClearGpuResourcesBeforeFrame *bool    `protobuf:"varint,7,opt,name=clear_gpu_resources_before_frame,json=clearGpuResourcesBeforeFrame" json:"clear_gpu_resources_before_frame,omitempty"`
}

func (x *CMsgBeginFrame) Reset() {
	*x = CMsgBeginFrame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgBeginFrame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBeginFrame) ProtoMessage() {}

func (x *CMsgBeginFrame) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBeginFrame.ProtoReflect.Descriptor instead.
func (*CMsgBeginFrame) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{0}
}

func (x *CMsgBeginFrame) GetFramePaintTime() float64 {
	if x != nil && x.FramePaintTime != nil {
		return *x.FramePaintTime
	}
	return 0
}

func (x *CMsgBeginFrame) GetSurfaceWidth() uint32 {
	if x != nil && x.SurfaceWidth != nil {
		return *x.SurfaceWidth
	}
	return 0
}

func (x *CMsgBeginFrame) GetSurfaceHeight() uint32 {
	if x != nil && x.SurfaceHeight != nil {
		return *x.SurfaceHeight
	}
	return 0
}

func (x *CMsgBeginFrame) GetRenderTarget() uint32 {
	if x != nil && x.RenderTarget != nil {
		return *x.RenderTarget
	}
	return 0
}

func (x *CMsgBeginFrame) GetUiScaleFactor() float64 {
	if x != nil && x.UiScaleFactor != nil {
		return *x.UiScaleFactor
	}
	return 0
}

func (x *CMsgBeginFrame) GetEmptyFrame() bool {
	if x != nil && x.EmptyFrame != nil {
		return *x.EmptyFrame
	}
	return false
}

func (x *CMsgBeginFrame) GetClearGpuResourcesBeforeFrame() bool {
	if x != nil && x.ClearGpuResourcesBeforeFrame != nil {
		return *x.ClearGpuResourcesBeforeFrame
	}
	return false
}

type CMsgEndFrame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MouseCursorTextureId *uint32  `protobuf:"varint,1,opt,name=mouse_cursor_texture_id,json=mouseCursorTextureId" json:"mouse_cursor_texture_id,omitempty"`
	MouseCursorHotspotX  *float32 `protobuf:"fixed32,2,opt,name=mouse_cursor_hotspot_x,json=mouseCursorHotspotX" json:"mouse_cursor_hotspot_x,omitempty"`
	MouseCursorHotspotY  *float32 `protobuf:"fixed32,3,opt,name=mouse_cursor_hotspot_y,json=mouseCursorHotspotY" json:"mouse_cursor_hotspot_y,omitempty"`
}

func (x *CMsgEndFrame) Reset() {
	*x = CMsgEndFrame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgEndFrame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgEndFrame) ProtoMessage() {}

func (x *CMsgEndFrame) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgEndFrame.ProtoReflect.Descriptor instead.
func (*CMsgEndFrame) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{1}
}

func (x *CMsgEndFrame) GetMouseCursorTextureId() uint32 {
	if x != nil && x.MouseCursorTextureId != nil {
		return *x.MouseCursorTextureId
	}
	return 0
}

func (x *CMsgEndFrame) GetMouseCursorHotspotX() float32 {
	if x != nil && x.MouseCursorHotspotX != nil {
		return *x.MouseCursorHotspotX
	}
	return 0
}

func (x *CMsgEndFrame) GetMouseCursorHotspotY() float32 {
	if x != nil && x.MouseCursorHotspotY != nil {
		return *x.MouseCursorHotspotY
	}
	return 0
}

type CMsgClearBackbuffer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClearColorRgba *uint32 `protobuf:"varint,1,opt,name=clear_color_rgba,json=clearColorRgba" json:"clear_color_rgba,omitempty"`
}

func (x *CMsgClearBackbuffer) Reset() {
	*x = CMsgClearBackbuffer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClearBackbuffer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClearBackbuffer) ProtoMessage() {}

func (x *CMsgClearBackbuffer) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClearBackbuffer.ProtoReflect.Descriptor instead.
func (*CMsgClearBackbuffer) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{2}
}

func (x *CMsgClearBackbuffer) GetClearColorRgba() uint32 {
	if x != nil && x.ClearColorRgba != nil {
		return *x.ClearColorRgba
	}
	return 0
}

type CMsgDeleteTexture struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TexturePointer *uint64 `protobuf:"varint,1,opt,name=texture_pointer,json=texturePointer" json:"texture_pointer,omitempty"`
}

func (x *CMsgDeleteTexture) Reset() {
	*x = CMsgDeleteTexture{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgDeleteTexture) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgDeleteTexture) ProtoMessage() {}

func (x *CMsgDeleteTexture) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgDeleteTexture.ProtoReflect.Descriptor instead.
func (*CMsgDeleteTexture) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{3}
}

func (x *CMsgDeleteTexture) GetTexturePointer() uint64 {
	if x != nil && x.TexturePointer != nil {
		return *x.TexturePointer
	}
	return 0
}

type CMsgDeletePanel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContextId *uint64 `protobuf:"varint,1,opt,name=context_id,json=contextId" json:"context_id,omitempty"`
}

func (x *CMsgDeletePanel) Reset() {
	*x = CMsgDeletePanel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgDeletePanel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgDeletePanel) ProtoMessage() {}

func (x *CMsgDeletePanel) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgDeletePanel.ProtoReflect.Descriptor instead.
func (*CMsgDeletePanel) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{4}
}

func (x *CMsgDeletePanel) GetContextId() uint64 {
	if x != nil && x.ContextId != nil {
		return *x.ContextId
	}
	return 0
}

type CMsgDeleteParticleSystem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PanelHandle *uint64 `protobuf:"varint,1,opt,name=panel_handle,json=panelHandle" json:"panel_handle,omitempty"`
	BrushIndex  *uint32 `protobuf:"varint,2,opt,name=brush_index,json=brushIndex" json:"brush_index,omitempty"`
}

func (x *CMsgDeleteParticleSystem) Reset() {
	*x = CMsgDeleteParticleSystem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgDeleteParticleSystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgDeleteParticleSystem) ProtoMessage() {}

func (x *CMsgDeleteParticleSystem) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgDeleteParticleSystem.ProtoReflect.Descriptor instead.
func (*CMsgDeleteParticleSystem) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{5}
}

func (x *CMsgDeleteParticleSystem) GetPanelHandle() uint64 {
	if x != nil && x.PanelHandle != nil {
		return *x.PanelHandle
	}
	return 0
}

func (x *CMsgDeleteParticleSystem) GetBrushIndex() uint32 {
	if x != nil && x.BrushIndex != nil {
		return *x.BrushIndex
	}
	return 0
}

type CMsgPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X *float64 `protobuf:"fixed64,1,opt,name=x" json:"x,omitempty"`
	Y *float64 `protobuf:"fixed64,2,opt,name=y" json:"y,omitempty"`
	Z *float64 `protobuf:"fixed64,3,opt,name=z" json:"z,omitempty"`
}

func (x *CMsgPoint) Reset() {
	*x = CMsgPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgPoint) ProtoMessage() {}

func (x *CMsgPoint) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgPoint.ProtoReflect.Descriptor instead.
func (*CMsgPoint) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{6}
}

func (x *CMsgPoint) GetX() float64 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *CMsgPoint) GetY() float64 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

func (x *CMsgPoint) GetZ() float64 {
	if x != nil && x.Z != nil {
		return *x.Z
	}
	return 0
}

type CMsgMatrix4X4 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	M00 *float64 `protobuf:"fixed64,1,opt,name=m00" json:"m00,omitempty"`
	M01 *float64 `protobuf:"fixed64,2,opt,name=m01" json:"m01,omitempty"`
	M02 *float64 `protobuf:"fixed64,3,opt,name=m02" json:"m02,omitempty"`
	M03 *float64 `protobuf:"fixed64,4,opt,name=m03" json:"m03,omitempty"`
	M10 *float64 `protobuf:"fixed64,5,opt,name=m10" json:"m10,omitempty"`
	M11 *float64 `protobuf:"fixed64,6,opt,name=m11" json:"m11,omitempty"`
	M12 *float64 `protobuf:"fixed64,7,opt,name=m12" json:"m12,omitempty"`
	M13 *float64 `protobuf:"fixed64,8,opt,name=m13" json:"m13,omitempty"`
	M20 *float64 `protobuf:"fixed64,9,opt,name=m20" json:"m20,omitempty"`
	M21 *float64 `protobuf:"fixed64,10,opt,name=m21" json:"m21,omitempty"`
	M22 *float64 `protobuf:"fixed64,11,opt,name=m22" json:"m22,omitempty"`
	M23 *float64 `protobuf:"fixed64,12,opt,name=m23" json:"m23,omitempty"`
	M30 *float64 `protobuf:"fixed64,13,opt,name=m30" json:"m30,omitempty"`
	M31 *float64 `protobuf:"fixed64,14,opt,name=m31" json:"m31,omitempty"`
	M32 *float64 `protobuf:"fixed64,15,opt,name=m32" json:"m32,omitempty"`
	M33 *float64 `protobuf:"fixed64,16,opt,name=m33" json:"m33,omitempty"`
}

func (x *CMsgMatrix4X4) Reset() {
	*x = CMsgMatrix4X4{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgMatrix4X4) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgMatrix4X4) ProtoMessage() {}

func (x *CMsgMatrix4X4) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgMatrix4X4.ProtoReflect.Descriptor instead.
func (*CMsgMatrix4X4) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{7}
}

func (x *CMsgMatrix4X4) GetM00() float64 {
	if x != nil && x.M00 != nil {
		return *x.M00
	}
	return 0
}

func (x *CMsgMatrix4X4) GetM01() float64 {
	if x != nil && x.M01 != nil {
		return *x.M01
	}
	return 0
}

func (x *CMsgMatrix4X4) GetM02() float64 {
	if x != nil && x.M02 != nil {
		return *x.M02
	}
	return 0
}

func (x *CMsgMatrix4X4) GetM03() float64 {
	if x != nil && x.M03 != nil {
		return *x.M03
	}
	return 0
}

func (x *CMsgMatrix4X4) GetM10() float64 {
	if x != nil && x.M10 != nil {
		return *x.M10
	}
	return 0
}

func (x *CMsgMatrix4X4) GetM11() float64 {
	if x != nil && x.M11 != nil {
		return *x.M11
	}
	return 0
}

func (x *CMsgMatrix4X4) GetM12() float64 {
	if x != nil && x.M12 != nil {
		return *x.M12
	}
	return 0
}

func (x *CMsgMatrix4X4) GetM13() float64 {
	if x != nil && x.M13 != nil {
		return *x.M13
	}
	return 0
}

func (x *CMsgMatrix4X4) GetM20() float64 {
	if x != nil && x.M20 != nil {
		return *x.M20
	}
	return 0
}

func (x *CMsgMatrix4X4) GetM21() float64 {
	if x != nil && x.M21 != nil {
		return *x.M21
	}
	return 0
}

func (x *CMsgMatrix4X4) GetM22() float64 {
	if x != nil && x.M22 != nil {
		return *x.M22
	}
	return 0
}

func (x *CMsgMatrix4X4) GetM23() float64 {
	if x != nil && x.M23 != nil {
		return *x.M23
	}
	return 0
}

func (x *CMsgMatrix4X4) GetM30() float64 {
	if x != nil && x.M30 != nil {
		return *x.M30
	}
	return 0
}

func (x *CMsgMatrix4X4) GetM31() float64 {
	if x != nil && x.M31 != nil {
		return *x.M31
	}
	return 0
}

func (x *CMsgMatrix4X4) GetM32() float64 {
	if x != nil && x.M32 != nil {
		return *x.M32
	}
	return 0
}

func (x *CMsgMatrix4X4) GetM33() float64 {
	if x != nil && x.M33 != nil {
		return *x.M33
	}
	return 0
}

type CRadiusData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopLeft     *CRadiusData_CCornerRadius `protobuf:"bytes,1,opt,name=top_left,json=topLeft" json:"top_left,omitempty"`
	TopRight    *CRadiusData_CCornerRadius `protobuf:"bytes,2,opt,name=top_right,json=topRight" json:"top_right,omitempty"`
	BottomRight *CRadiusData_CCornerRadius `protobuf:"bytes,3,opt,name=bottom_right,json=bottomRight" json:"bottom_right,omitempty"`
	BottomLeft  *CRadiusData_CCornerRadius `protobuf:"bytes,4,opt,name=bottom_left,json=bottomLeft" json:"bottom_left,omitempty"`
}

func (x *CRadiusData) Reset() {
	*x = CRadiusData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CRadiusData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CRadiusData) ProtoMessage() {}

func (x *CRadiusData) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CRadiusData.ProtoReflect.Descriptor instead.
func (*CRadiusData) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{8}
}

func (x *CRadiusData) GetTopLeft() *CRadiusData_CCornerRadius {
	if x != nil {
		return x.TopLeft
	}
	return nil
}

func (x *CRadiusData) GetTopRight() *CRadiusData_CCornerRadius {
	if x != nil {
		return x.TopRight
	}
	return nil
}

func (x *CRadiusData) GetBottomRight() *CRadiusData_CCornerRadius {
	if x != nil {
		return x.BottomRight
	}
	return nil
}

func (x *CRadiusData) GetBottomLeft() *CRadiusData_CCornerRadius {
	if x != nil {
		return x.BottomLeft
	}
	return nil
}

type CBorderData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Top    *CBorderData_CBorderSide `protobuf:"bytes,1,opt,name=top" json:"top,omitempty"`
	Right  *CBorderData_CBorderSide `protobuf:"bytes,2,opt,name=right" json:"right,omitempty"`
	Bottom *CBorderData_CBorderSide `protobuf:"bytes,3,opt,name=bottom" json:"bottom,omitempty"`
	Left   *CBorderData_CBorderSide `protobuf:"bytes,4,opt,name=left" json:"left,omitempty"`
}

func (x *CBorderData) Reset() {
	*x = CBorderData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CBorderData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CBorderData) ProtoMessage() {}

func (x *CBorderData) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CBorderData.ProtoReflect.Descriptor instead.
func (*CBorderData) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{9}
}

func (x *CBorderData) GetTop() *CBorderData_CBorderSide {
	if x != nil {
		return x.Top
	}
	return nil
}

func (x *CBorderData) GetRight() *CBorderData_CBorderSide {
	if x != nil {
		return x.Right
	}
	return nil
}

func (x *CBorderData) GetBottom() *CBorderData_CBorderSide {
	if x != nil {
		return x.Bottom
	}
	return nil
}

func (x *CBorderData) GetLeft() *CBorderData_CBorderSide {
	if x != nil {
		return x.Left
	}
	return nil
}

type CBoxShadowData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inset            *bool    `protobuf:"varint,1,opt,name=inset" json:"inset,omitempty"`
	HorizontalOffset *float64 `protobuf:"fixed64,2,opt,name=horizontal_offset,json=horizontalOffset" json:"horizontal_offset,omitempty"`
	VerticalOffset   *float64 `protobuf:"fixed64,3,opt,name=vertical_offset,json=verticalOffset" json:"vertical_offset,omitempty"`
	BlurRadius       *float64 `protobuf:"fixed64,4,opt,name=blur_radius,json=blurRadius" json:"blur_radius,omitempty"`
	SpreadDistance   *float64 `protobuf:"fixed64,5,opt,name=spread_distance,json=spreadDistance" json:"spread_distance,omitempty"`
	Color            *uint32  `protobuf:"varint,6,opt,name=color" json:"color,omitempty"`
	Fill             *bool    `protobuf:"varint,7,opt,name=fill" json:"fill,omitempty"`
	Animating        *bool    `protobuf:"varint,8,opt,name=animating" json:"animating,omitempty"`
}

func (x *CBoxShadowData) Reset() {
	*x = CBoxShadowData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CBoxShadowData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CBoxShadowData) ProtoMessage() {}

func (x *CBoxShadowData) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CBoxShadowData.ProtoReflect.Descriptor instead.
func (*CBoxShadowData) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{10}
}

func (x *CBoxShadowData) GetInset() bool {
	if x != nil && x.Inset != nil {
		return *x.Inset
	}
	return false
}

func (x *CBoxShadowData) GetHorizontalOffset() float64 {
	if x != nil && x.HorizontalOffset != nil {
		return *x.HorizontalOffset
	}
	return 0
}

func (x *CBoxShadowData) GetVerticalOffset() float64 {
	if x != nil && x.VerticalOffset != nil {
		return *x.VerticalOffset
	}
	return 0
}

func (x *CBoxShadowData) GetBlurRadius() float64 {
	if x != nil && x.BlurRadius != nil {
		return *x.BlurRadius
	}
	return 0
}

func (x *CBoxShadowData) GetSpreadDistance() float64 {
	if x != nil && x.SpreadDistance != nil {
		return *x.SpreadDistance
	}
	return 0
}

func (x *CBoxShadowData) GetColor() uint32 {
	if x != nil && x.Color != nil {
		return *x.Color
	}
	return 0
}

func (x *CBoxShadowData) GetFill() bool {
	if x != nil && x.Fill != nil {
		return *x.Fill
	}
	return false
}

func (x *CBoxShadowData) GetAnimating() bool {
	if x != nil && x.Animating != nil {
		return *x.Animating
	}
	return false
}

type CTextShadowData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HorizontalOffset *float64 `protobuf:"fixed64,2,opt,name=horizontal_offset,json=horizontalOffset" json:"horizontal_offset,omitempty"`
	VerticalOffset   *float64 `protobuf:"fixed64,3,opt,name=vertical_offset,json=verticalOffset" json:"vertical_offset,omitempty"`
	BlurRadius       *float64 `protobuf:"fixed64,4,opt,name=blur_radius,json=blurRadius" json:"blur_radius,omitempty"`
	Color            *uint32  `protobuf:"varint,6,opt,name=color" json:"color,omitempty"`
	Animating        *bool    `protobuf:"varint,8,opt,name=animating" json:"animating,omitempty"`
	Strength         *float64 `protobuf:"fixed64,9,opt,name=strength" json:"strength,omitempty"`
}

func (x *CTextShadowData) Reset() {
	*x = CTextShadowData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CTextShadowData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CTextShadowData) ProtoMessage() {}

func (x *CTextShadowData) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CTextShadowData.ProtoReflect.Descriptor instead.
func (*CTextShadowData) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{11}
}

func (x *CTextShadowData) GetHorizontalOffset() float64 {
	if x != nil && x.HorizontalOffset != nil {
		return *x.HorizontalOffset
	}
	return 0
}

func (x *CTextShadowData) GetVerticalOffset() float64 {
	if x != nil && x.VerticalOffset != nil {
		return *x.VerticalOffset
	}
	return 0
}

func (x *CTextShadowData) GetBlurRadius() float64 {
	if x != nil && x.BlurRadius != nil {
		return *x.BlurRadius
	}
	return 0
}

func (x *CTextShadowData) GetColor() uint32 {
	if x != nil && x.Color != nil {
		return *x.Color
	}
	return 0
}

func (x *CTextShadowData) GetAnimating() bool {
	if x != nil && x.Animating != nil {
		return *x.Animating
	}
	return false
}

func (x *CTextShadowData) GetStrength() float64 {
	if x != nil && x.Strength != nil {
		return *x.Strength
	}
	return 0
}

type CRadialClipData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CenterX     *float64 `protobuf:"fixed64,1,opt,name=center_x,json=centerX" json:"center_x,omitempty"`
	CenterY     *float64 `protobuf:"fixed64,2,opt,name=center_y,json=centerY" json:"center_y,omitempty"`
	StartAngle  *float64 `protobuf:"fixed64,3,opt,name=start_angle,json=startAngle" json:"start_angle,omitempty"`
	SectorAngle *float64 `protobuf:"fixed64,4,opt,name=sector_angle,json=sectorAngle" json:"sector_angle,omitempty"`
}

func (x *CRadialClipData) Reset() {
	*x = CRadialClipData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CRadialClipData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CRadialClipData) ProtoMessage() {}

func (x *CRadialClipData) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CRadialClipData.ProtoReflect.Descriptor instead.
func (*CRadialClipData) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{12}
}

func (x *CRadialClipData) GetCenterX() float64 {
	if x != nil && x.CenterX != nil {
		return *x.CenterX
	}
	return 0
}

func (x *CRadialClipData) GetCenterY() float64 {
	if x != nil && x.CenterY != nil {
		return *x.CenterY
	}
	return 0
}

func (x *CRadialClipData) GetStartAngle() float64 {
	if x != nil && x.StartAngle != nil {
		return *x.StartAngle
	}
	return 0
}

func (x *CRadialClipData) GetSectorAngle() float64 {
	if x != nil && x.SectorAngle != nil {
		return *x.SectorAngle
	}
	return 0
}

type CMsgClipData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RectClip   *bool            `protobuf:"varint,1,opt,name=rect_clip,json=rectClip" json:"rect_clip,omitempty"`
	Left       *float64         `protobuf:"fixed64,2,opt,name=left" json:"left,omitempty"`
	Top        *float64         `protobuf:"fixed64,3,opt,name=top" json:"top,omitempty"`
	Right      *float64         `protobuf:"fixed64,4,opt,name=right" json:"right,omitempty"`
	Bottom     *float64         `protobuf:"fixed64,5,opt,name=bottom" json:"bottom,omitempty"`
	RadialClip *CRadialClipData `protobuf:"bytes,6,opt,name=radial_clip,json=radialClip" json:"radial_clip,omitempty"`
}

func (x *CMsgClipData) Reset() {
	*x = CMsgClipData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClipData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClipData) ProtoMessage() {}

func (x *CMsgClipData) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClipData.ProtoReflect.Descriptor instead.
func (*CMsgClipData) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{13}
}

func (x *CMsgClipData) GetRectClip() bool {
	if x != nil && x.RectClip != nil {
		return *x.RectClip
	}
	return false
}

func (x *CMsgClipData) GetLeft() float64 {
	if x != nil && x.Left != nil {
		return *x.Left
	}
	return 0
}

func (x *CMsgClipData) GetTop() float64 {
	if x != nil && x.Top != nil {
		return *x.Top
	}
	return 0
}

func (x *CMsgClipData) GetRight() float64 {
	if x != nil && x.Right != nil {
		return *x.Right
	}
	return 0
}

func (x *CMsgClipData) GetBottom() float64 {
	if x != nil && x.Bottom != nil {
		return *x.Bottom
	}
	return 0
}

func (x *CMsgClipData) GetRadialClip() *CRadialClipData {
	if x != nil {
		return x.RadialClip
	}
	return nil
}

type CMsgPushCompositingLayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LayerId                     *uint64          `protobuf:"varint,1,opt,name=layer_id,json=layerId" json:"layer_id,omitempty"`
	Width                       *float64         `protobuf:"fixed64,2,opt,name=width" json:"width,omitempty"`
	Height                      *float64         `protobuf:"fixed64,3,opt,name=height" json:"height,omitempty"`
	LayerQuadTopLeftX           *float64         `protobuf:"fixed64,4,opt,name=layer_quad_top_left_x,json=layerQuadTopLeftX" json:"layer_quad_top_left_x,omitempty"`
	LayerQuadTopLeftY           *float64         `protobuf:"fixed64,5,opt,name=layer_quad_top_left_y,json=layerQuadTopLeftY" json:"layer_quad_top_left_y,omitempty"`
	LayerQuadTopLeftZ           *float64         `protobuf:"fixed64,6,opt,name=layer_quad_top_left_z,json=layerQuadTopLeftZ" json:"layer_quad_top_left_z,omitempty"`
	LayerQuadTopRightX          *float64         `protobuf:"fixed64,7,opt,name=layer_quad_top_right_x,json=layerQuadTopRightX" json:"layer_quad_top_right_x,omitempty"`
	LayerQuadTopRightY          *float64         `protobuf:"fixed64,8,opt,name=layer_quad_top_right_y,json=layerQuadTopRightY" json:"layer_quad_top_right_y,omitempty"`
	LayerQuadTopRightZ          *float64         `protobuf:"fixed64,9,opt,name=layer_quad_top_right_z,json=layerQuadTopRightZ" json:"layer_quad_top_right_z,omitempty"`
	LayerQuadBottomLeftX        *float64         `protobuf:"fixed64,10,opt,name=layer_quad_bottom_left_x,json=layerQuadBottomLeftX" json:"layer_quad_bottom_left_x,omitempty"`
	LayerQuadBottomLeftY        *float64         `protobuf:"fixed64,11,opt,name=layer_quad_bottom_left_y,json=layerQuadBottomLeftY" json:"layer_quad_bottom_left_y,omitempty"`
	LayerQuadBottomLeftZ        *float64         `protobuf:"fixed64,12,opt,name=layer_quad_bottom_left_z,json=layerQuadBottomLeftZ" json:"layer_quad_bottom_left_z,omitempty"`
	LayerQuadBottomRightX       *float64         `protobuf:"fixed64,13,opt,name=layer_quad_bottom_right_x,json=layerQuadBottomRightX" json:"layer_quad_bottom_right_x,omitempty"`
	LayerQuadBottomRightY       *float64         `protobuf:"fixed64,14,opt,name=layer_quad_bottom_right_y,json=layerQuadBottomRightY" json:"layer_quad_bottom_right_y,omitempty"`
	LayerQuadBottomRightZ       *float64         `protobuf:"fixed64,15,opt,name=layer_quad_bottom_right_z,json=layerQuadBottomRightZ" json:"layer_quad_bottom_right_z,omitempty"`
	TransformM00                *float64         `protobuf:"fixed64,16,opt,name=transform_m00,json=transformM00" json:"transform_m00,omitempty"`
	TransformM01                *float64         `protobuf:"fixed64,17,opt,name=transform_m01,json=transformM01" json:"transform_m01,omitempty"`
	TransformM02                *float64         `protobuf:"fixed64,18,opt,name=transform_m02,json=transformM02" json:"transform_m02,omitempty"`
	TransformM03                *float64         `protobuf:"fixed64,19,opt,name=transform_m03,json=transformM03" json:"transform_m03,omitempty"`
	TransformM10                *float64         `protobuf:"fixed64,20,opt,name=transform_m10,json=transformM10" json:"transform_m10,omitempty"`
	TransformM11                *float64         `protobuf:"fixed64,21,opt,name=transform_m11,json=transformM11" json:"transform_m11,omitempty"`
	TransformM12                *float64         `protobuf:"fixed64,22,opt,name=transform_m12,json=transformM12" json:"transform_m12,omitempty"`
	TransformM13                *float64         `protobuf:"fixed64,23,opt,name=transform_m13,json=transformM13" json:"transform_m13,omitempty"`
	TransformM20                *float64         `protobuf:"fixed64,24,opt,name=transform_m20,json=transformM20" json:"transform_m20,omitempty"`
	TransformM21                *float64         `protobuf:"fixed64,25,opt,name=transform_m21,json=transformM21" json:"transform_m21,omitempty"`
	TransformM22                *float64         `protobuf:"fixed64,26,opt,name=transform_m22,json=transformM22" json:"transform_m22,omitempty"`
	TransformM23                *float64         `protobuf:"fixed64,27,opt,name=transform_m23,json=transformM23" json:"transform_m23,omitempty"`
	TransformM30                *float64         `protobuf:"fixed64,28,opt,name=transform_m30,json=transformM30" json:"transform_m30,omitempty"`
	TransformM31                *float64         `protobuf:"fixed64,29,opt,name=transform_m31,json=transformM31" json:"transform_m31,omitempty"`
	TransformM32                *float64         `protobuf:"fixed64,30,opt,name=transform_m32,json=transformM32" json:"transform_m32,omitempty"`
	TransformM33                *float64         `protobuf:"fixed64,31,opt,name=transform_m33,json=transformM33" json:"transform_m33,omitempty"`
	PerspectiveDepth            *float64         `protobuf:"fixed64,32,opt,name=perspective_depth,json=perspectiveDepth" json:"perspective_depth,omitempty"`
	Opacity                     *float64         `protobuf:"fixed64,33,opt,name=opacity" json:"opacity,omitempty"`
	CompositionColor            *uint32          `protobuf:"varint,34,opt,name=composition_color,json=compositionColor" json:"composition_color,omitempty"`
	Saturation                  *float64         `protobuf:"fixed64,35,opt,name=saturation" json:"saturation,omitempty"`
	HueShift                    *float64         `protobuf:"fixed64,36,opt,name=hue_shift,json=hueShift" json:"hue_shift,omitempty"`
	Brightness                  *float64         `protobuf:"fixed64,37,opt,name=brightness" json:"brightness,omitempty"`
	Contrast                    *float64         `protobuf:"fixed64,38,opt,name=contrast" json:"contrast,omitempty"`
	OpacityMaskTextureId        *uint32          `protobuf:"varint,39,opt,name=opacity_mask_texture_id,json=opacityMaskTextureId" json:"opacity_mask_texture_id,omitempty"`
	OpacityMaskOpacity          *float64         `protobuf:"fixed64,40,opt,name=opacity_mask_opacity,json=opacityMaskOpacity" json:"opacity_mask_opacity,omitempty"`
	Border                      *CBorderData     `protobuf:"bytes,41,opt,name=border" json:"border,omitempty"`
	BorderRadius                *CRadiusData     `protobuf:"bytes,42,opt,name=border_radius,json=borderRadius" json:"border_radius,omitempty"`
	BoxShadow                   *CBoxShadowData  `protobuf:"bytes,43,opt,name=box_shadow,json=boxShadow" json:"box_shadow,omitempty"`
	GaussianblurPasses          *float64         `protobuf:"fixed64,44,opt,name=gaussianblur_passes,json=gaussianblurPasses" json:"gaussianblur_passes,omitempty"`
	GaussianblurStddevhor       *float64         `protobuf:"fixed64,45,opt,name=gaussianblur_stddevhor,json=gaussianblurStddevhor" json:"gaussianblur_stddevhor,omitempty"`
	GaussianblurStddevver       *float64         `protobuf:"fixed64,46,opt,name=gaussianblur_stddevver,json=gaussianblurStddevver" json:"gaussianblur_stddevver,omitempty"`
	Scale_2DFactorsX            *float64         `protobuf:"fixed64,47,opt,name=scale_2d_factors_x,json=scale2dFactorsX" json:"scale_2d_factors_x,omitempty"`
	Scale_2DFactorsY            *float64         `protobuf:"fixed64,48,opt,name=scale_2d_factors_y,json=scale2dFactorsY" json:"scale_2d_factors_y,omitempty"`
	Rotate_2D                   *float64         `protobuf:"fixed64,49,opt,name=rotate_2d,json=rotate2d" json:"rotate_2d,omitempty"`
	NeedsClear                  *bool            `protobuf:"varint,50,opt,name=needs_clear,json=needsClear" json:"needs_clear,omitempty"`
	NeedsDepth                  *bool            `protobuf:"varint,51,opt,name=needs_depth,json=needsDepth" json:"needs_depth,omitempty"`
	NeedsIntermediateTexture    *bool            `protobuf:"varint,52,opt,name=needs_intermediate_texture,json=needsIntermediateTexture" json:"needs_intermediate_texture,omitempty"`
	NeedsRedrawEveryFrame       *bool            `protobuf:"varint,53,opt,name=needs_redraw_every_frame,json=needsRedrawEveryFrame" json:"needs_redraw_every_frame,omitempty"`
	TextShadow                  *CTextShadowData `protobuf:"bytes,54,opt,name=text_shadow,json=textShadow" json:"text_shadow,omitempty"`
	MixBlendMode                *uint32          `protobuf:"varint,55,opt,name=mix_blend_mode,json=mixBlendMode" json:"mix_blend_mode,omitempty"`
	OccludedLeftEdge            *float64         `protobuf:"fixed64,56,opt,name=occluded_left_edge,json=occludedLeftEdge" json:"occluded_left_edge,omitempty"`
	OccludedTopEdge             *float64         `protobuf:"fixed64,57,opt,name=occluded_top_edge,json=occludedTopEdge" json:"occluded_top_edge,omitempty"`
	OccludedRightEdge           *float64         `protobuf:"fixed64,58,opt,name=occluded_right_edge,json=occludedRightEdge" json:"occluded_right_edge,omitempty"`
	OccludedBottomEdge          *float64         `protobuf:"fixed64,59,opt,name=occluded_bottom_edge,json=occludedBottomEdge" json:"occluded_bottom_edge,omitempty"`
	RadialClip                  *CRadialClipData `protobuf:"bytes,60,opt,name=radial_clip,json=radialClip" json:"radial_clip,omitempty"`
	MotionblurVelocity          *float64         `protobuf:"fixed64,61,opt,name=motionblur_velocity,json=motionblurVelocity" json:"motionblur_velocity,omitempty"`
	MotionblurDirx              *float64         `protobuf:"fixed64,62,opt,name=motionblur_dirx,json=motionblurDirx" json:"motionblur_dirx,omitempty"`
	MotionblurDiry              *float64         `protobuf:"fixed64,63,opt,name=motionblur_diry,json=motionblurDiry" json:"motionblur_diry,omitempty"`
	CompositionLayerTextureName *string          `protobuf:"bytes,64,opt,name=composition_layer_texture_name,json=compositionLayerTextureName" json:"composition_layer_texture_name,omitempty"`
}

func (x *CMsgPushCompositingLayer) Reset() {
	*x = CMsgPushCompositingLayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgPushCompositingLayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgPushCompositingLayer) ProtoMessage() {}

func (x *CMsgPushCompositingLayer) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgPushCompositingLayer.ProtoReflect.Descriptor instead.
func (*CMsgPushCompositingLayer) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{14}
}

func (x *CMsgPushCompositingLayer) GetLayerId() uint64 {
	if x != nil && x.LayerId != nil {
		return *x.LayerId
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetWidth() float64 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetHeight() float64 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetLayerQuadTopLeftX() float64 {
	if x != nil && x.LayerQuadTopLeftX != nil {
		return *x.LayerQuadTopLeftX
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetLayerQuadTopLeftY() float64 {
	if x != nil && x.LayerQuadTopLeftY != nil {
		return *x.LayerQuadTopLeftY
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetLayerQuadTopLeftZ() float64 {
	if x != nil && x.LayerQuadTopLeftZ != nil {
		return *x.LayerQuadTopLeftZ
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetLayerQuadTopRightX() float64 {
	if x != nil && x.LayerQuadTopRightX != nil {
		return *x.LayerQuadTopRightX
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetLayerQuadTopRightY() float64 {
	if x != nil && x.LayerQuadTopRightY != nil {
		return *x.LayerQuadTopRightY
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetLayerQuadTopRightZ() float64 {
	if x != nil && x.LayerQuadTopRightZ != nil {
		return *x.LayerQuadTopRightZ
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetLayerQuadBottomLeftX() float64 {
	if x != nil && x.LayerQuadBottomLeftX != nil {
		return *x.LayerQuadBottomLeftX
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetLayerQuadBottomLeftY() float64 {
	if x != nil && x.LayerQuadBottomLeftY != nil {
		return *x.LayerQuadBottomLeftY
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetLayerQuadBottomLeftZ() float64 {
	if x != nil && x.LayerQuadBottomLeftZ != nil {
		return *x.LayerQuadBottomLeftZ
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetLayerQuadBottomRightX() float64 {
	if x != nil && x.LayerQuadBottomRightX != nil {
		return *x.LayerQuadBottomRightX
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetLayerQuadBottomRightY() float64 {
	if x != nil && x.LayerQuadBottomRightY != nil {
		return *x.LayerQuadBottomRightY
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetLayerQuadBottomRightZ() float64 {
	if x != nil && x.LayerQuadBottomRightZ != nil {
		return *x.LayerQuadBottomRightZ
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetTransformM00() float64 {
	if x != nil && x.TransformM00 != nil {
		return *x.TransformM00
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetTransformM01() float64 {
	if x != nil && x.TransformM01 != nil {
		return *x.TransformM01
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetTransformM02() float64 {
	if x != nil && x.TransformM02 != nil {
		return *x.TransformM02
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetTransformM03() float64 {
	if x != nil && x.TransformM03 != nil {
		return *x.TransformM03
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetTransformM10() float64 {
	if x != nil && x.TransformM10 != nil {
		return *x.TransformM10
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetTransformM11() float64 {
	if x != nil && x.TransformM11 != nil {
		return *x.TransformM11
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetTransformM12() float64 {
	if x != nil && x.TransformM12 != nil {
		return *x.TransformM12
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetTransformM13() float64 {
	if x != nil && x.TransformM13 != nil {
		return *x.TransformM13
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetTransformM20() float64 {
	if x != nil && x.TransformM20 != nil {
		return *x.TransformM20
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetTransformM21() float64 {
	if x != nil && x.TransformM21 != nil {
		return *x.TransformM21
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetTransformM22() float64 {
	if x != nil && x.TransformM22 != nil {
		return *x.TransformM22
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetTransformM23() float64 {
	if x != nil && x.TransformM23 != nil {
		return *x.TransformM23
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetTransformM30() float64 {
	if x != nil && x.TransformM30 != nil {
		return *x.TransformM30
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetTransformM31() float64 {
	if x != nil && x.TransformM31 != nil {
		return *x.TransformM31
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetTransformM32() float64 {
	if x != nil && x.TransformM32 != nil {
		return *x.TransformM32
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetTransformM33() float64 {
	if x != nil && x.TransformM33 != nil {
		return *x.TransformM33
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetPerspectiveDepth() float64 {
	if x != nil && x.PerspectiveDepth != nil {
		return *x.PerspectiveDepth
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetOpacity() float64 {
	if x != nil && x.Opacity != nil {
		return *x.Opacity
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetCompositionColor() uint32 {
	if x != nil && x.CompositionColor != nil {
		return *x.CompositionColor
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetSaturation() float64 {
	if x != nil && x.Saturation != nil {
		return *x.Saturation
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetHueShift() float64 {
	if x != nil && x.HueShift != nil {
		return *x.HueShift
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetBrightness() float64 {
	if x != nil && x.Brightness != nil {
		return *x.Brightness
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetContrast() float64 {
	if x != nil && x.Contrast != nil {
		return *x.Contrast
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetOpacityMaskTextureId() uint32 {
	if x != nil && x.OpacityMaskTextureId != nil {
		return *x.OpacityMaskTextureId
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetOpacityMaskOpacity() float64 {
	if x != nil && x.OpacityMaskOpacity != nil {
		return *x.OpacityMaskOpacity
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetBorder() *CBorderData {
	if x != nil {
		return x.Border
	}
	return nil
}

func (x *CMsgPushCompositingLayer) GetBorderRadius() *CRadiusData {
	if x != nil {
		return x.BorderRadius
	}
	return nil
}

func (x *CMsgPushCompositingLayer) GetBoxShadow() *CBoxShadowData {
	if x != nil {
		return x.BoxShadow
	}
	return nil
}

func (x *CMsgPushCompositingLayer) GetGaussianblurPasses() float64 {
	if x != nil && x.GaussianblurPasses != nil {
		return *x.GaussianblurPasses
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetGaussianblurStddevhor() float64 {
	if x != nil && x.GaussianblurStddevhor != nil {
		return *x.GaussianblurStddevhor
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetGaussianblurStddevver() float64 {
	if x != nil && x.GaussianblurStddevver != nil {
		return *x.GaussianblurStddevver
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetScale_2DFactorsX() float64 {
	if x != nil && x.Scale_2DFactorsX != nil {
		return *x.Scale_2DFactorsX
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetScale_2DFactorsY() float64 {
	if x != nil && x.Scale_2DFactorsY != nil {
		return *x.Scale_2DFactorsY
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetRotate_2D() float64 {
	if x != nil && x.Rotate_2D != nil {
		return *x.Rotate_2D
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetNeedsClear() bool {
	if x != nil && x.NeedsClear != nil {
		return *x.NeedsClear
	}
	return false
}

func (x *CMsgPushCompositingLayer) GetNeedsDepth() bool {
	if x != nil && x.NeedsDepth != nil {
		return *x.NeedsDepth
	}
	return false
}

func (x *CMsgPushCompositingLayer) GetNeedsIntermediateTexture() bool {
	if x != nil && x.NeedsIntermediateTexture != nil {
		return *x.NeedsIntermediateTexture
	}
	return false
}

func (x *CMsgPushCompositingLayer) GetNeedsRedrawEveryFrame() bool {
	if x != nil && x.NeedsRedrawEveryFrame != nil {
		return *x.NeedsRedrawEveryFrame
	}
	return false
}

func (x *CMsgPushCompositingLayer) GetTextShadow() *CTextShadowData {
	if x != nil {
		return x.TextShadow
	}
	return nil
}

func (x *CMsgPushCompositingLayer) GetMixBlendMode() uint32 {
	if x != nil && x.MixBlendMode != nil {
		return *x.MixBlendMode
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetOccludedLeftEdge() float64 {
	if x != nil && x.OccludedLeftEdge != nil {
		return *x.OccludedLeftEdge
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetOccludedTopEdge() float64 {
	if x != nil && x.OccludedTopEdge != nil {
		return *x.OccludedTopEdge
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetOccludedRightEdge() float64 {
	if x != nil && x.OccludedRightEdge != nil {
		return *x.OccludedRightEdge
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetOccludedBottomEdge() float64 {
	if x != nil && x.OccludedBottomEdge != nil {
		return *x.OccludedBottomEdge
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetRadialClip() *CRadialClipData {
	if x != nil {
		return x.RadialClip
	}
	return nil
}

func (x *CMsgPushCompositingLayer) GetMotionblurVelocity() float64 {
	if x != nil && x.MotionblurVelocity != nil {
		return *x.MotionblurVelocity
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetMotionblurDirx() float64 {
	if x != nil && x.MotionblurDirx != nil {
		return *x.MotionblurDirx
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetMotionblurDiry() float64 {
	if x != nil && x.MotionblurDiry != nil {
		return *x.MotionblurDiry
	}
	return 0
}

func (x *CMsgPushCompositingLayer) GetCompositionLayerTextureName() string {
	if x != nil && x.CompositionLayerTextureName != nil {
		return *x.CompositionLayerTextureName
	}
	return ""
}

type CMsgPopCompositingLayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CMsgPopCompositingLayer) Reset() {
	*x = CMsgPopCompositingLayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgPopCompositingLayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgPopCompositingLayer) ProtoMessage() {}

func (x *CMsgPopCompositingLayer) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgPopCompositingLayer.ProtoReflect.Descriptor instead.
func (*CMsgPopCompositingLayer) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{15}
}

type CMsgFreeCompositingLayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LayerId *uint64 `protobuf:"varint,1,opt,name=layer_id,json=layerId" json:"layer_id,omitempty"`
}

func (x *CMsgFreeCompositingLayer) Reset() {
	*x = CMsgFreeCompositingLayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgFreeCompositingLayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgFreeCompositingLayer) ProtoMessage() {}

func (x *CMsgFreeCompositingLayer) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgFreeCompositingLayer.ProtoReflect.Descriptor instead.
func (*CMsgFreeCompositingLayer) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{16}
}

func (x *CMsgFreeCompositingLayer) GetLayerId() uint64 {
	if x != nil && x.LayerId != nil {
		return *x.LayerId
	}
	return 0
}

type CMsgTransitionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime       *float64 `protobuf:"fixed64,1,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	DelaySeconds    *float64 `protobuf:"fixed64,2,opt,name=delay_seconds,json=delaySeconds" json:"delay_seconds,omitempty"`
	DurationSeconds *float64 `protobuf:"fixed64,3,opt,name=duration_seconds,json=durationSeconds" json:"duration_seconds,omitempty"`
	TimingFunc      *uint32  `protobuf:"varint,4,opt,name=timing_func,json=timingFunc,def=0" json:"timing_func,omitempty"`
	CubicBezier_0   *float32 `protobuf:"fixed32,5,opt,name=cubic_bezier_0,json=cubicBezier0" json:"cubic_bezier_0,omitempty"`
	CubicBezier_1   *float32 `protobuf:"fixed32,6,opt,name=cubic_bezier_1,json=cubicBezier1" json:"cubic_bezier_1,omitempty"`
	CubicBezier_2   *float32 `protobuf:"fixed32,7,opt,name=cubic_bezier_2,json=cubicBezier2" json:"cubic_bezier_2,omitempty"`
	CubicBezier_3   *float32 `protobuf:"fixed32,8,opt,name=cubic_bezier_3,json=cubicBezier3" json:"cubic_bezier_3,omitempty"`
}

// Default values for CMsgTransitionData fields.
const (
	Default_CMsgTransitionData_TimingFunc = uint32(0)
)

func (x *CMsgTransitionData) Reset() {
	*x = CMsgTransitionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgTransitionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgTransitionData) ProtoMessage() {}

func (x *CMsgTransitionData) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgTransitionData.ProtoReflect.Descriptor instead.
func (*CMsgTransitionData) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{17}
}

func (x *CMsgTransitionData) GetStartTime() float64 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *CMsgTransitionData) GetDelaySeconds() float64 {
	if x != nil && x.DelaySeconds != nil {
		return *x.DelaySeconds
	}
	return 0
}

func (x *CMsgTransitionData) GetDurationSeconds() float64 {
	if x != nil && x.DurationSeconds != nil {
		return *x.DurationSeconds
	}
	return 0
}

func (x *CMsgTransitionData) GetTimingFunc() uint32 {
	if x != nil && x.TimingFunc != nil {
		return *x.TimingFunc
	}
	return Default_CMsgTransitionData_TimingFunc
}

func (x *CMsgTransitionData) GetCubicBezier_0() float32 {
	if x != nil && x.CubicBezier_0 != nil {
		return *x.CubicBezier_0
	}
	return 0
}

func (x *CMsgTransitionData) GetCubicBezier_1() float32 {
	if x != nil && x.CubicBezier_1 != nil {
		return *x.CubicBezier_1
	}
	return 0
}

func (x *CMsgTransitionData) GetCubicBezier_2() float32 {
	if x != nil && x.CubicBezier_2 != nil {
		return *x.CubicBezier_2
	}
	return 0
}

func (x *CMsgTransitionData) GetCubicBezier_3() float32 {
	if x != nil && x.CubicBezier_3 != nil {
		return *x.CubicBezier_3
	}
	return 0
}

type CMsgAnimationData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime       *float64                  `protobuf:"fixed64,1,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	DelaySeconds    *float64                  `protobuf:"fixed64,2,opt,name=delay_seconds,json=delaySeconds" json:"delay_seconds,omitempty"`
	DurationSeconds *float64                  `protobuf:"fixed64,3,opt,name=duration_seconds,json=durationSeconds" json:"duration_seconds,omitempty"`
	TimingFunc      *uint32                   `protobuf:"varint,4,opt,name=timing_func,json=timingFunc" json:"timing_func,omitempty"`
	CubicBezier_0   *float32                  `protobuf:"fixed32,5,opt,name=cubic_bezier_0,json=cubicBezier0" json:"cubic_bezier_0,omitempty"`
	CubicBezier_1   *float32                  `protobuf:"fixed32,6,opt,name=cubic_bezier_1,json=cubicBezier1" json:"cubic_bezier_1,omitempty"`
	CubicBezier_2   *float32                  `protobuf:"fixed32,7,opt,name=cubic_bezier_2,json=cubicBezier2" json:"cubic_bezier_2,omitempty"`
	CubicBezier_3   *float32                  `protobuf:"fixed32,8,opt,name=cubic_bezier_3,json=cubicBezier3" json:"cubic_bezier_3,omitempty"`
	Direction       *uint32                   `protobuf:"varint,9,opt,name=direction" json:"direction,omitempty"`
	Iteration       *float32                  `protobuf:"fixed32,10,opt,name=iteration" json:"iteration,omitempty"`
	Frames          []*CMsgAnimationFrameData `protobuf:"bytes,11,rep,name=frames" json:"frames,omitempty"`
}

func (x *CMsgAnimationData) Reset() {
	*x = CMsgAnimationData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgAnimationData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgAnimationData) ProtoMessage() {}

func (x *CMsgAnimationData) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgAnimationData.ProtoReflect.Descriptor instead.
func (*CMsgAnimationData) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{18}
}

func (x *CMsgAnimationData) GetStartTime() float64 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *CMsgAnimationData) GetDelaySeconds() float64 {
	if x != nil && x.DelaySeconds != nil {
		return *x.DelaySeconds
	}
	return 0
}

func (x *CMsgAnimationData) GetDurationSeconds() float64 {
	if x != nil && x.DurationSeconds != nil {
		return *x.DurationSeconds
	}
	return 0
}

func (x *CMsgAnimationData) GetTimingFunc() uint32 {
	if x != nil && x.TimingFunc != nil {
		return *x.TimingFunc
	}
	return 0
}

func (x *CMsgAnimationData) GetCubicBezier_0() float32 {
	if x != nil && x.CubicBezier_0 != nil {
		return *x.CubicBezier_0
	}
	return 0
}

func (x *CMsgAnimationData) GetCubicBezier_1() float32 {
	if x != nil && x.CubicBezier_1 != nil {
		return *x.CubicBezier_1
	}
	return 0
}

func (x *CMsgAnimationData) GetCubicBezier_2() float32 {
	if x != nil && x.CubicBezier_2 != nil {
		return *x.CubicBezier_2
	}
	return 0
}

func (x *CMsgAnimationData) GetCubicBezier_3() float32 {
	if x != nil && x.CubicBezier_3 != nil {
		return *x.CubicBezier_3
	}
	return 0
}

func (x *CMsgAnimationData) GetDirection() uint32 {
	if x != nil && x.Direction != nil {
		return *x.Direction
	}
	return 0
}

func (x *CMsgAnimationData) GetIteration() float32 {
	if x != nil && x.Iteration != nil {
		return *x.Iteration
	}
	return 0
}

func (x *CMsgAnimationData) GetFrames() []*CMsgAnimationFrameData {
	if x != nil {
		return x.Frames
	}
	return nil
}

type CMsgAnimationFrameData struct {
	state           protoimpl.MessageState
	sizeCache       protoimpl.SizeCache
	unknownFields   protoimpl.UnknownFields
	extensionFields protoimpl.ExtensionFields

	Percent       *float32 `protobuf:"fixed32,1,opt,name=percent" json:"percent,omitempty"`
	TimingFunc    *uint32  `protobuf:"varint,2,opt,name=timing_func,json=timingFunc,def=0" json:"timing_func,omitempty"`
	CubicBezier_0 *float32 `protobuf:"fixed32,3,opt,name=cubic_bezier_0,json=cubicBezier0" json:"cubic_bezier_0,omitempty"`
	CubicBezier_1 *float32 `protobuf:"fixed32,4,opt,name=cubic_bezier_1,json=cubicBezier1" json:"cubic_bezier_1,omitempty"`
	CubicBezier_2 *float32 `protobuf:"fixed32,5,opt,name=cubic_bezier_2,json=cubicBezier2" json:"cubic_bezier_2,omitempty"`
	CubicBezier_3 *float32 `protobuf:"fixed32,6,opt,name=cubic_bezier_3,json=cubicBezier3" json:"cubic_bezier_3,omitempty"`
}

// Default values for CMsgAnimationFrameData fields.
const (
	Default_CMsgAnimationFrameData_TimingFunc = uint32(0)
)

func (x *CMsgAnimationFrameData) Reset() {
	*x = CMsgAnimationFrameData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgAnimationFrameData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgAnimationFrameData) ProtoMessage() {}

func (x *CMsgAnimationFrameData) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgAnimationFrameData.ProtoReflect.Descriptor instead.
func (*CMsgAnimationFrameData) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{19}
}

func (x *CMsgAnimationFrameData) GetPercent() float32 {
	if x != nil && x.Percent != nil {
		return *x.Percent
	}
	return 0
}

func (x *CMsgAnimationFrameData) GetTimingFunc() uint32 {
	if x != nil && x.TimingFunc != nil {
		return *x.TimingFunc
	}
	return Default_CMsgAnimationFrameData_TimingFunc
}

func (x *CMsgAnimationFrameData) GetCubicBezier_0() float32 {
	if x != nil && x.CubicBezier_0 != nil {
		return *x.CubicBezier_0
	}
	return 0
}

func (x *CMsgAnimationFrameData) GetCubicBezier_1() float32 {
	if x != nil && x.CubicBezier_1 != nil {
		return *x.CubicBezier_1
	}
	return 0
}

func (x *CMsgAnimationFrameData) GetCubicBezier_2() float32 {
	if x != nil && x.CubicBezier_2 != nil {
		return *x.CubicBezier_2
	}
	return 0
}

func (x *CMsgAnimationFrameData) GetCubicBezier_3() float32 {
	if x != nil && x.CubicBezier_3 != nil {
		return *x.CubicBezier_3
	}
	return 0
}

type CMsgPointWithTransition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base           *CMsgPoint           `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	Transition     *CMsgPoint           `protobuf:"bytes,2,opt,name=transition" json:"transition,omitempty"`
	TransitionData *CMsgTransitionData  `protobuf:"bytes,3,opt,name=transition_data,json=transitionData" json:"transition_data,omitempty"`
	StyleSymbol    *uint32              `protobuf:"varint,4,opt,name=style_symbol,json=styleSymbol" json:"style_symbol,omitempty"`
	Animations     []*CMsgAnimationData `protobuf:"bytes,5,rep,name=animations" json:"animations,omitempty"`
}

func (x *CMsgPointWithTransition) Reset() {
	*x = CMsgPointWithTransition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgPointWithTransition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgPointWithTransition) ProtoMessage() {}

func (x *CMsgPointWithTransition) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgPointWithTransition.ProtoReflect.Descriptor instead.
func (*CMsgPointWithTransition) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{20}
}

func (x *CMsgPointWithTransition) GetBase() *CMsgPoint {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *CMsgPointWithTransition) GetTransition() *CMsgPoint {
	if x != nil {
		return x.Transition
	}
	return nil
}

func (x *CMsgPointWithTransition) GetTransitionData() *CMsgTransitionData {
	if x != nil {
		return x.TransitionData
	}
	return nil
}

func (x *CMsgPointWithTransition) GetStyleSymbol() uint32 {
	if x != nil && x.StyleSymbol != nil {
		return *x.StyleSymbol
	}
	return 0
}

func (x *CMsgPointWithTransition) GetAnimations() []*CMsgAnimationData {
	if x != nil {
		return x.Animations
	}
	return nil
}

type CMsgColor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base           *uint32              `protobuf:"varint,1,opt,name=base" json:"base,omitempty"`
	Transition     *uint32              `protobuf:"varint,2,opt,name=transition" json:"transition,omitempty"`
	TransitionData *CMsgTransitionData  `protobuf:"bytes,3,opt,name=transition_data,json=transitionData" json:"transition_data,omitempty"`
	StyleSymbol    *uint32              `protobuf:"varint,4,opt,name=style_symbol,json=styleSymbol" json:"style_symbol,omitempty"`
	Animations     []*CMsgAnimationData `protobuf:"bytes,5,rep,name=animations" json:"animations,omitempty"`
}

func (x *CMsgColor) Reset() {
	*x = CMsgColor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgColor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgColor) ProtoMessage() {}

func (x *CMsgColor) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgColor.ProtoReflect.Descriptor instead.
func (*CMsgColor) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{21}
}

func (x *CMsgColor) GetBase() uint32 {
	if x != nil && x.Base != nil {
		return *x.Base
	}
	return 0
}

func (x *CMsgColor) GetTransition() uint32 {
	if x != nil && x.Transition != nil {
		return *x.Transition
	}
	return 0
}

func (x *CMsgColor) GetTransitionData() *CMsgTransitionData {
	if x != nil {
		return x.TransitionData
	}
	return nil
}

func (x *CMsgColor) GetStyleSymbol() uint32 {
	if x != nil && x.StyleSymbol != nil {
		return *x.StyleSymbol
	}
	return 0
}

func (x *CMsgColor) GetAnimations() []*CMsgAnimationData {
	if x != nil {
		return x.Animations
	}
	return nil
}

type CMsgColorStop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position  *float64 `protobuf:"fixed64,1,opt,name=position" json:"position,omitempty"`
	ColorRgba *uint32  `protobuf:"varint,2,opt,name=color_rgba,json=colorRgba" json:"color_rgba,omitempty"`
}

func (x *CMsgColorStop) Reset() {
	*x = CMsgColorStop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgColorStop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgColorStop) ProtoMessage() {}

func (x *CMsgColorStop) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgColorStop.ProtoReflect.Descriptor instead.
func (*CMsgColorStop) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{22}
}

func (x *CMsgColorStop) GetPosition() float64 {
	if x != nil && x.Position != nil {
		return *x.Position
	}
	return 0
}

func (x *CMsgColorStop) GetColorRgba() uint32 {
	if x != nil && x.ColorRgba != nil {
		return *x.ColorRgba
	}
	return 0
}

type CMsgLinearGradient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartPosition *CMsgPoint       `protobuf:"bytes,1,opt,name=start_position,json=startPosition" json:"start_position,omitempty"`
	EndPosition   *CMsgPoint       `protobuf:"bytes,2,opt,name=end_position,json=endPosition" json:"end_position,omitempty"`
	ColorStop     []*CMsgColorStop `protobuf:"bytes,3,rep,name=color_stop,json=colorStop" json:"color_stop,omitempty"`
}

func (x *CMsgLinearGradient) Reset() {
	*x = CMsgLinearGradient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgLinearGradient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgLinearGradient) ProtoMessage() {}

func (x *CMsgLinearGradient) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgLinearGradient.ProtoReflect.Descriptor instead.
func (*CMsgLinearGradient) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{23}
}

func (x *CMsgLinearGradient) GetStartPosition() *CMsgPoint {
	if x != nil {
		return x.StartPosition
	}
	return nil
}

func (x *CMsgLinearGradient) GetEndPosition() *CMsgPoint {
	if x != nil {
		return x.EndPosition
	}
	return nil
}

func (x *CMsgLinearGradient) GetColorStop() []*CMsgColorStop {
	if x != nil {
		return x.ColorStop
	}
	return nil
}

type CMsgRadialGradient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CenterPosition *CMsgPoint       `protobuf:"bytes,1,opt,name=center_position,json=centerPosition" json:"center_position,omitempty"`
	OffsetDistance *CMsgPoint       `protobuf:"bytes,2,opt,name=offset_distance,json=offsetDistance" json:"offset_distance,omitempty"`
	Radii          *CMsgPoint       `protobuf:"bytes,3,opt,name=radii" json:"radii,omitempty"`
	ColorStop      []*CMsgColorStop `protobuf:"bytes,4,rep,name=color_stop,json=colorStop" json:"color_stop,omitempty"`
}

func (x *CMsgRadialGradient) Reset() {
	*x = CMsgRadialGradient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgRadialGradient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRadialGradient) ProtoMessage() {}

func (x *CMsgRadialGradient) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRadialGradient.ProtoReflect.Descriptor instead.
func (*CMsgRadialGradient) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{24}
}

func (x *CMsgRadialGradient) GetCenterPosition() *CMsgPoint {
	if x != nil {
		return x.CenterPosition
	}
	return nil
}

func (x *CMsgRadialGradient) GetOffsetDistance() *CMsgPoint {
	if x != nil {
		return x.OffsetDistance
	}
	return nil
}

func (x *CMsgRadialGradient) GetRadii() *CMsgPoint {
	if x != nil {
		return x.Radii
	}
	return nil
}

func (x *CMsgRadialGradient) GetColorStop() []*CMsgColorStop {
	if x != nil {
		return x.ColorStop
	}
	return nil
}

type CMsgParticle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParticlePosition  *CMsgPoint `protobuf:"bytes,1,opt,name=particle_position,json=particlePosition" json:"particle_position,omitempty"`
	ParticleSize      *float32   `protobuf:"fixed32,2,opt,name=particle_size,json=particleSize" json:"particle_size,omitempty"`
	ParticleSharpness *float32   `protobuf:"fixed32,3,opt,name=particle_sharpness,json=particleSharpness" json:"particle_sharpness,omitempty"`
	ColorRgba         *uint32    `protobuf:"varint,4,opt,name=color_rgba,json=colorRgba" json:"color_rgba,omitempty"`
}

func (x *CMsgParticle) Reset() {
	*x = CMsgParticle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgParticle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgParticle) ProtoMessage() {}

func (x *CMsgParticle) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgParticle.ProtoReflect.Descriptor instead.
func (*CMsgParticle) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{25}
}

func (x *CMsgParticle) GetParticlePosition() *CMsgPoint {
	if x != nil {
		return x.ParticlePosition
	}
	return nil
}

func (x *CMsgParticle) GetParticleSize() float32 {
	if x != nil && x.ParticleSize != nil {
		return *x.ParticleSize
	}
	return 0
}

func (x *CMsgParticle) GetParticleSharpness() float32 {
	if x != nil && x.ParticleSharpness != nil {
		return *x.ParticleSharpness
	}
	return 0
}

func (x *CMsgParticle) GetColorRgba() uint32 {
	if x != nil && x.ColorRgba != nil {
		return *x.ColorRgba
	}
	return 0
}

type CMsgParticleSystem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasePosition                        *CMsgPoint      `protobuf:"bytes,1,opt,name=base_position,json=basePosition" json:"base_position,omitempty"`
	BasePositionVariance                *CMsgPoint      `protobuf:"bytes,2,opt,name=base_position_variance,json=basePositionVariance" json:"base_position_variance,omitempty"`
	ParticleSize                        *float64        `protobuf:"fixed64,3,opt,name=particle_size,json=particleSize" json:"particle_size,omitempty"`
	ParticleSizeVariance                *float64        `protobuf:"fixed64,4,opt,name=particle_size_variance,json=particleSizeVariance" json:"particle_size_variance,omitempty"`
	ParticlesPerSecond                  *float64        `protobuf:"fixed64,5,opt,name=particles_per_second,json=particlesPerSecond" json:"particles_per_second,omitempty"`
	ParticlesPerSecondVariance          *float64        `protobuf:"fixed64,6,opt,name=particles_per_second_variance,json=particlesPerSecondVariance" json:"particles_per_second_variance,omitempty"`
	ParticleLifespanSeconds             *float64        `protobuf:"fixed64,7,opt,name=particle_lifespan_seconds,json=particleLifespanSeconds" json:"particle_lifespan_seconds,omitempty"`
	ParticleLifespanSecondsVariance     *float64        `protobuf:"fixed64,8,opt,name=particle_lifespan_seconds_variance,json=particleLifespanSecondsVariance" json:"particle_lifespan_seconds_variance,omitempty"`
	ParticleInitialVelocity             *CMsgPoint      `protobuf:"bytes,9,opt,name=particle_initial_velocity,json=particleInitialVelocity" json:"particle_initial_velocity,omitempty"`
	ParticleInitialVelocityVariance     *CMsgPoint      `protobuf:"bytes,10,opt,name=particle_initial_velocity_variance,json=particleInitialVelocityVariance" json:"particle_initial_velocity_variance,omitempty"`
	GravityAcceleration                 *CMsgPoint      `protobuf:"bytes,11,opt,name=gravity_acceleration,json=gravityAcceleration" json:"gravity_acceleration,omitempty"`
	GravityAccelerationParticleVariance *CMsgPoint      `protobuf:"bytes,12,opt,name=gravity_acceleration_particle_variance,json=gravityAccelerationParticleVariance" json:"gravity_acceleration_particle_variance,omitempty"`
	ColorStartRgba                      *uint32         `protobuf:"varint,13,opt,name=color_start_rgba,json=colorStartRgba" json:"color_start_rgba,omitempty"`
	ColorStartRgbaVariance              *uint32         `protobuf:"varint,14,opt,name=color_start_rgba_variance,json=colorStartRgbaVariance" json:"color_start_rgba_variance,omitempty"`
	ColorEndRgba                        *uint32         `protobuf:"varint,15,opt,name=color_end_rgba,json=colorEndRgba" json:"color_end_rgba,omitempty"`
	ColorEndRgbaVariance                *uint32         `protobuf:"varint,16,opt,name=color_end_rgba_variance,json=colorEndRgbaVariance" json:"color_end_rgba_variance,omitempty"`
	ParentPanelHandle                   *uint64         `protobuf:"varint,17,opt,name=parent_panel_handle,json=parentPanelHandle" json:"parent_panel_handle,omitempty"`
	ParentBrushIndex                    *uint32         `protobuf:"varint,18,opt,name=parent_brush_index,json=parentBrushIndex" json:"parent_brush_index,omitempty"`
	ParticleSharpness                   *float32        `protobuf:"fixed32,19,opt,name=particle_sharpness,json=particleSharpness" json:"particle_sharpness,omitempty"`
	ParticleSharpnessVariance           *float32        `protobuf:"fixed32,20,opt,name=particle_sharpness_variance,json=particleSharpnessVariance" json:"particle_sharpness_variance,omitempty"`
	ParticleFlicker                     *float32        `protobuf:"fixed32,21,opt,name=particle_flicker,json=particleFlicker" json:"particle_flicker,omitempty"`
	ParticleFlickerVariance             *float32        `protobuf:"fixed32,22,opt,name=particle_flicker_variance,json=particleFlickerVariance" json:"particle_flicker_variance,omitempty"`
	ParticleVelocityMin                 *CMsgPoint      `protobuf:"bytes,23,opt,name=particle_velocity_min,json=particleVelocityMin" json:"particle_velocity_min,omitempty"`
	ParticleVelocityMax                 *CMsgPoint      `protobuf:"bytes,24,opt,name=particle_velocity_max,json=particleVelocityMax" json:"particle_velocity_max,omitempty"`
	Particles                           []*CMsgParticle `protobuf:"bytes,50,rep,name=particles" json:"particles,omitempty"`
}

func (x *CMsgParticleSystem) Reset() {
	*x = CMsgParticleSystem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgParticleSystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgParticleSystem) ProtoMessage() {}

func (x *CMsgParticleSystem) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgParticleSystem.ProtoReflect.Descriptor instead.
func (*CMsgParticleSystem) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{26}
}

func (x *CMsgParticleSystem) GetBasePosition() *CMsgPoint {
	if x != nil {
		return x.BasePosition
	}
	return nil
}

func (x *CMsgParticleSystem) GetBasePositionVariance() *CMsgPoint {
	if x != nil {
		return x.BasePositionVariance
	}
	return nil
}

func (x *CMsgParticleSystem) GetParticleSize() float64 {
	if x != nil && x.ParticleSize != nil {
		return *x.ParticleSize
	}
	return 0
}

func (x *CMsgParticleSystem) GetParticleSizeVariance() float64 {
	if x != nil && x.ParticleSizeVariance != nil {
		return *x.ParticleSizeVariance
	}
	return 0
}

func (x *CMsgParticleSystem) GetParticlesPerSecond() float64 {
	if x != nil && x.ParticlesPerSecond != nil {
		return *x.ParticlesPerSecond
	}
	return 0
}

func (x *CMsgParticleSystem) GetParticlesPerSecondVariance() float64 {
	if x != nil && x.ParticlesPerSecondVariance != nil {
		return *x.ParticlesPerSecondVariance
	}
	return 0
}

func (x *CMsgParticleSystem) GetParticleLifespanSeconds() float64 {
	if x != nil && x.ParticleLifespanSeconds != nil {
		return *x.ParticleLifespanSeconds
	}
	return 0
}

func (x *CMsgParticleSystem) GetParticleLifespanSecondsVariance() float64 {
	if x != nil && x.ParticleLifespanSecondsVariance != nil {
		return *x.ParticleLifespanSecondsVariance
	}
	return 0
}

func (x *CMsgParticleSystem) GetParticleInitialVelocity() *CMsgPoint {
	if x != nil {
		return x.ParticleInitialVelocity
	}
	return nil
}

func (x *CMsgParticleSystem) GetParticleInitialVelocityVariance() *CMsgPoint {
	if x != nil {
		return x.ParticleInitialVelocityVariance
	}
	return nil
}

func (x *CMsgParticleSystem) GetGravityAcceleration() *CMsgPoint {
	if x != nil {
		return x.GravityAcceleration
	}
	return nil
}

func (x *CMsgParticleSystem) GetGravityAccelerationParticleVariance() *CMsgPoint {
	if x != nil {
		return x.GravityAccelerationParticleVariance
	}
	return nil
}

func (x *CMsgParticleSystem) GetColorStartRgba() uint32 {
	if x != nil && x.ColorStartRgba != nil {
		return *x.ColorStartRgba
	}
	return 0
}

func (x *CMsgParticleSystem) GetColorStartRgbaVariance() uint32 {
	if x != nil && x.ColorStartRgbaVariance != nil {
		return *x.ColorStartRgbaVariance
	}
	return 0
}

func (x *CMsgParticleSystem) GetColorEndRgba() uint32 {
	if x != nil && x.ColorEndRgba != nil {
		return *x.ColorEndRgba
	}
	return 0
}

func (x *CMsgParticleSystem) GetColorEndRgbaVariance() uint32 {
	if x != nil && x.ColorEndRgbaVariance != nil {
		return *x.ColorEndRgbaVariance
	}
	return 0
}

func (x *CMsgParticleSystem) GetParentPanelHandle() uint64 {
	if x != nil && x.ParentPanelHandle != nil {
		return *x.ParentPanelHandle
	}
	return 0
}

func (x *CMsgParticleSystem) GetParentBrushIndex() uint32 {
	if x != nil && x.ParentBrushIndex != nil {
		return *x.ParentBrushIndex
	}
	return 0
}

func (x *CMsgParticleSystem) GetParticleSharpness() float32 {
	if x != nil && x.ParticleSharpness != nil {
		return *x.ParticleSharpness
	}
	return 0
}

func (x *CMsgParticleSystem) GetParticleSharpnessVariance() float32 {
	if x != nil && x.ParticleSharpnessVariance != nil {
		return *x.ParticleSharpnessVariance
	}
	return 0
}

func (x *CMsgParticleSystem) GetParticleFlicker() float32 {
	if x != nil && x.ParticleFlicker != nil {
		return *x.ParticleFlicker
	}
	return 0
}

func (x *CMsgParticleSystem) GetParticleFlickerVariance() float32 {
	if x != nil && x.ParticleFlickerVariance != nil {
		return *x.ParticleFlickerVariance
	}
	return 0
}

func (x *CMsgParticleSystem) GetParticleVelocityMin() *CMsgPoint {
	if x != nil {
		return x.ParticleVelocityMin
	}
	return nil
}

func (x *CMsgParticleSystem) GetParticleVelocityMax() *CMsgPoint {
	if x != nil {
		return x.ParticleVelocityMax
	}
	return nil
}

func (x *CMsgParticleSystem) GetParticles() []*CMsgParticle {
	if x != nil {
		return x.Particles
	}
	return nil
}

type CMsgFillBrush struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Opacity        *float64            `protobuf:"fixed64,1,opt,name=opacity" json:"opacity,omitempty"`
	ColorRgba      *uint32             `protobuf:"varint,2,opt,name=color_rgba,json=colorRgba" json:"color_rgba,omitempty"`
	LinearGradient *CMsgLinearGradient `protobuf:"bytes,3,opt,name=linear_gradient,json=linearGradient" json:"linear_gradient,omitempty"`
	RadialGradient *CMsgRadialGradient `protobuf:"bytes,4,opt,name=radial_gradient,json=radialGradient" json:"radial_gradient,omitempty"`
	ParticleSystem *CMsgParticleSystem `protobuf:"bytes,5,opt,name=particle_system,json=particleSystem" json:"particle_system,omitempty"`
}

func (x *CMsgFillBrush) Reset() {
	*x = CMsgFillBrush{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgFillBrush) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgFillBrush) ProtoMessage() {}

func (x *CMsgFillBrush) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgFillBrush.ProtoReflect.Descriptor instead.
func (*CMsgFillBrush) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{27}
}

func (x *CMsgFillBrush) GetOpacity() float64 {
	if x != nil && x.Opacity != nil {
		return *x.Opacity
	}
	return 0
}

func (x *CMsgFillBrush) GetColorRgba() uint32 {
	if x != nil && x.ColorRgba != nil {
		return *x.ColorRgba
	}
	return 0
}

func (x *CMsgFillBrush) GetLinearGradient() *CMsgLinearGradient {
	if x != nil {
		return x.LinearGradient
	}
	return nil
}

func (x *CMsgFillBrush) GetRadialGradient() *CMsgRadialGradient {
	if x != nil {
		return x.RadialGradient
	}
	return nil
}

func (x *CMsgFillBrush) GetParticleSystem() *CMsgParticleSystem {
	if x != nil {
		return x.ParticleSystem
	}
	return nil
}

type CMsgFillBrushCollection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base           []*CMsgFillBrush     `protobuf:"bytes,1,rep,name=base" json:"base,omitempty"`
	Transition     []*CMsgFillBrush     `protobuf:"bytes,2,rep,name=transition" json:"transition,omitempty"`
	TransitionData *CMsgTransitionData  `protobuf:"bytes,3,opt,name=transition_data,json=transitionData" json:"transition_data,omitempty"`
	StyleSymbol    *uint32              `protobuf:"varint,4,opt,name=style_symbol,json=styleSymbol" json:"style_symbol,omitempty"`
	Animations     []*CMsgAnimationData `protobuf:"bytes,5,rep,name=animations" json:"animations,omitempty"`
}

func (x *CMsgFillBrushCollection) Reset() {
	*x = CMsgFillBrushCollection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgFillBrushCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgFillBrushCollection) ProtoMessage() {}

func (x *CMsgFillBrushCollection) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgFillBrushCollection.ProtoReflect.Descriptor instead.
func (*CMsgFillBrushCollection) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{28}
}

func (x *CMsgFillBrushCollection) GetBase() []*CMsgFillBrush {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *CMsgFillBrushCollection) GetTransition() []*CMsgFillBrush {
	if x != nil {
		return x.Transition
	}
	return nil
}

func (x *CMsgFillBrushCollection) GetTransitionData() *CMsgTransitionData {
	if x != nil {
		return x.TransitionData
	}
	return nil
}

func (x *CMsgFillBrushCollection) GetStyleSymbol() uint32 {
	if x != nil && x.StyleSymbol != nil {
		return *x.StyleSymbol
	}
	return 0
}

func (x *CMsgFillBrushCollection) GetAnimations() []*CMsgAnimationData {
	if x != nil {
		return x.Animations
	}
	return nil
}

type CMsgRenderFillBrushCollection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FillBrush []*CMsgFillBrush `protobuf:"bytes,1,rep,name=fill_brush,json=fillBrush" json:"fill_brush,omitempty"`
}

func (x *CMsgRenderFillBrushCollection) Reset() {
	*x = CMsgRenderFillBrushCollection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgRenderFillBrushCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRenderFillBrushCollection) ProtoMessage() {}

func (x *CMsgRenderFillBrushCollection) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRenderFillBrushCollection.ProtoReflect.Descriptor instead.
func (*CMsgRenderFillBrushCollection) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{29}
}

func (x *CMsgRenderFillBrushCollection) GetFillBrush() []*CMsgFillBrush {
	if x != nil {
		return x.FillBrush
	}
	return nil
}

type CMsgPanelPosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base               *CMsgPoint           `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	Transition         *CMsgPoint           `protobuf:"bytes,2,opt,name=transition" json:"transition,omitempty"`
	TransitionData     *CMsgTransitionData  `protobuf:"bytes,3,opt,name=transition_data,json=transitionData" json:"transition_data,omitempty"`
	StyleSymbol        *uint32              `protobuf:"varint,4,opt,name=style_symbol,json=styleSymbol" json:"style_symbol,omitempty"`
	Animations         []*CMsgAnimationData `protobuf:"bytes,5,rep,name=animations" json:"animations,omitempty"`
	ScrollOffset       *CMsgPoint           `protobuf:"bytes,6,opt,name=scroll_offset,json=scrollOffset" json:"scroll_offset,omitempty"`
	ScrollOffsetTarget *CMsgPoint           `protobuf:"bytes,7,opt,name=scroll_offset_target,json=scrollOffsetTarget" json:"scroll_offset_target,omitempty"`
	ScrollTransitionX  *CMsgTransitionData  `protobuf:"bytes,8,opt,name=scroll_transition_x,json=scrollTransitionX" json:"scroll_transition_x,omitempty"`
	ScrollTransitionY  *CMsgTransitionData  `protobuf:"bytes,9,opt,name=scroll_transition_y,json=scrollTransitionY" json:"scroll_transition_y,omitempty"`
}

func (x *CMsgPanelPosition) Reset() {
	*x = CMsgPanelPosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgPanelPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgPanelPosition) ProtoMessage() {}

func (x *CMsgPanelPosition) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgPanelPosition.ProtoReflect.Descriptor instead.
func (*CMsgPanelPosition) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{30}
}

func (x *CMsgPanelPosition) GetBase() *CMsgPoint {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *CMsgPanelPosition) GetTransition() *CMsgPoint {
	if x != nil {
		return x.Transition
	}
	return nil
}

func (x *CMsgPanelPosition) GetTransitionData() *CMsgTransitionData {
	if x != nil {
		return x.TransitionData
	}
	return nil
}

func (x *CMsgPanelPosition) GetStyleSymbol() uint32 {
	if x != nil && x.StyleSymbol != nil {
		return *x.StyleSymbol
	}
	return 0
}

func (x *CMsgPanelPosition) GetAnimations() []*CMsgAnimationData {
	if x != nil {
		return x.Animations
	}
	return nil
}

func (x *CMsgPanelPosition) GetScrollOffset() *CMsgPoint {
	if x != nil {
		return x.ScrollOffset
	}
	return nil
}

func (x *CMsgPanelPosition) GetScrollOffsetTarget() *CMsgPoint {
	if x != nil {
		return x.ScrollOffsetTarget
	}
	return nil
}

func (x *CMsgPanelPosition) GetScrollTransitionX() *CMsgTransitionData {
	if x != nil {
		return x.ScrollTransitionX
	}
	return nil
}

func (x *CMsgPanelPosition) GetScrollTransitionY() *CMsgTransitionData {
	if x != nil {
		return x.ScrollTransitionY
	}
	return nil
}

type CMsgOpacity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base           *float64             `protobuf:"fixed64,1,opt,name=base" json:"base,omitempty"`
	Transition     *float64             `protobuf:"fixed64,2,opt,name=transition" json:"transition,omitempty"`
	TransitionData *CMsgTransitionData  `protobuf:"bytes,3,opt,name=transition_data,json=transitionData" json:"transition_data,omitempty"`
	StyleSymbol    *uint32              `protobuf:"varint,4,opt,name=style_symbol,json=styleSymbol" json:"style_symbol,omitempty"`
	Animations     []*CMsgAnimationData `protobuf:"bytes,5,rep,name=animations" json:"animations,omitempty"`
}

func (x *CMsgOpacity) Reset() {
	*x = CMsgOpacity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgOpacity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgOpacity) ProtoMessage() {}

func (x *CMsgOpacity) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgOpacity.ProtoReflect.Descriptor instead.
func (*CMsgOpacity) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{31}
}

func (x *CMsgOpacity) GetBase() float64 {
	if x != nil && x.Base != nil {
		return *x.Base
	}
	return 0
}

func (x *CMsgOpacity) GetTransition() float64 {
	if x != nil && x.Transition != nil {
		return *x.Transition
	}
	return 0
}

func (x *CMsgOpacity) GetTransitionData() *CMsgTransitionData {
	if x != nil {
		return x.TransitionData
	}
	return nil
}

func (x *CMsgOpacity) GetStyleSymbol() uint32 {
	if x != nil && x.StyleSymbol != nil {
		return *x.StyleSymbol
	}
	return 0
}

func (x *CMsgOpacity) GetAnimations() []*CMsgAnimationData {
	if x != nil {
		return x.Animations
	}
	return nil
}

type CMsgRotate2D struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base           *float64             `protobuf:"fixed64,1,opt,name=base" json:"base,omitempty"`
	Transition     *float64             `protobuf:"fixed64,2,opt,name=transition" json:"transition,omitempty"`
	TransitionData *CMsgTransitionData  `protobuf:"bytes,3,opt,name=transition_data,json=transitionData" json:"transition_data,omitempty"`
	StyleSymbol    *uint32              `protobuf:"varint,4,opt,name=style_symbol,json=styleSymbol" json:"style_symbol,omitempty"`
	Animations     []*CMsgAnimationData `protobuf:"bytes,5,rep,name=animations" json:"animations,omitempty"`
}

func (x *CMsgRotate2D) Reset() {
	*x = CMsgRotate2D{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgRotate2D) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRotate2D) ProtoMessage() {}

func (x *CMsgRotate2D) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRotate2D.ProtoReflect.Descriptor instead.
func (*CMsgRotate2D) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{32}
}

func (x *CMsgRotate2D) GetBase() float64 {
	if x != nil && x.Base != nil {
		return *x.Base
	}
	return 0
}

func (x *CMsgRotate2D) GetTransition() float64 {
	if x != nil && x.Transition != nil {
		return *x.Transition
	}
	return 0
}

func (x *CMsgRotate2D) GetTransitionData() *CMsgTransitionData {
	if x != nil {
		return x.TransitionData
	}
	return nil
}

func (x *CMsgRotate2D) GetStyleSymbol() uint32 {
	if x != nil && x.StyleSymbol != nil {
		return *x.StyleSymbol
	}
	return 0
}

func (x *CMsgRotate2D) GetAnimations() []*CMsgAnimationData {
	if x != nil {
		return x.Animations
	}
	return nil
}

type CMsgOpacityMaskData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpacityMaskTextureId *uint32  `protobuf:"varint,1,opt,name=opacity_mask_texture_id,json=opacityMaskTextureId" json:"opacity_mask_texture_id,omitempty"`
	OpacityMaskOpacity   *float64 `protobuf:"fixed64,2,opt,name=opacity_mask_opacity,json=opacityMaskOpacity" json:"opacity_mask_opacity,omitempty"`
}

func (x *CMsgOpacityMaskData) Reset() {
	*x = CMsgOpacityMaskData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgOpacityMaskData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgOpacityMaskData) ProtoMessage() {}

func (x *CMsgOpacityMaskData) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgOpacityMaskData.ProtoReflect.Descriptor instead.
func (*CMsgOpacityMaskData) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{33}
}

func (x *CMsgOpacityMaskData) GetOpacityMaskTextureId() uint32 {
	if x != nil && x.OpacityMaskTextureId != nil {
		return *x.OpacityMaskTextureId
	}
	return 0
}

func (x *CMsgOpacityMaskData) GetOpacityMaskOpacity() float64 {
	if x != nil && x.OpacityMaskOpacity != nil {
		return *x.OpacityMaskOpacity
	}
	return 0
}

type CMsgOpacityMask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base           *CMsgOpacityMaskData `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	Transition     *CMsgOpacityMaskData `protobuf:"bytes,2,opt,name=transition" json:"transition,omitempty"`
	TransitionData *CMsgTransitionData  `protobuf:"bytes,3,opt,name=transition_data,json=transitionData" json:"transition_data,omitempty"`
	StyleSymbol    *uint32              `protobuf:"varint,4,opt,name=style_symbol,json=styleSymbol" json:"style_symbol,omitempty"`
	Animations     []*CMsgAnimationData `protobuf:"bytes,5,rep,name=animations" json:"animations,omitempty"`
}

func (x *CMsgOpacityMask) Reset() {
	*x = CMsgOpacityMask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgOpacityMask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgOpacityMask) ProtoMessage() {}

func (x *CMsgOpacityMask) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgOpacityMask.ProtoReflect.Descriptor instead.
func (*CMsgOpacityMask) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{34}
}

func (x *CMsgOpacityMask) GetBase() *CMsgOpacityMaskData {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *CMsgOpacityMask) GetTransition() *CMsgOpacityMaskData {
	if x != nil {
		return x.Transition
	}
	return nil
}

func (x *CMsgOpacityMask) GetTransitionData() *CMsgTransitionData {
	if x != nil {
		return x.TransitionData
	}
	return nil
}

func (x *CMsgOpacityMask) GetStyleSymbol() uint32 {
	if x != nil && x.StyleSymbol != nil {
		return *x.StyleSymbol
	}
	return 0
}

func (x *CMsgOpacityMask) GetAnimations() []*CMsgAnimationData {
	if x != nil {
		return x.Animations
	}
	return nil
}

type CMsgHueShift struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base           *float64             `protobuf:"fixed64,1,opt,name=base" json:"base,omitempty"`
	Transition     *float64             `protobuf:"fixed64,2,opt,name=transition" json:"transition,omitempty"`
	TransitionData *CMsgTransitionData  `protobuf:"bytes,3,opt,name=transition_data,json=transitionData" json:"transition_data,omitempty"`
	StyleSymbol    *uint32              `protobuf:"varint,4,opt,name=style_symbol,json=styleSymbol" json:"style_symbol,omitempty"`
	Animations     []*CMsgAnimationData `protobuf:"bytes,5,rep,name=animations" json:"animations,omitempty"`
}

func (x *CMsgHueShift) Reset() {
	*x = CMsgHueShift{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgHueShift) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgHueShift) ProtoMessage() {}

func (x *CMsgHueShift) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgHueShift.ProtoReflect.Descriptor instead.
func (*CMsgHueShift) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{35}
}

func (x *CMsgHueShift) GetBase() float64 {
	if x != nil && x.Base != nil {
		return *x.Base
	}
	return 0
}

func (x *CMsgHueShift) GetTransition() float64 {
	if x != nil && x.Transition != nil {
		return *x.Transition
	}
	return 0
}

func (x *CMsgHueShift) GetTransitionData() *CMsgTransitionData {
	if x != nil {
		return x.TransitionData
	}
	return nil
}

func (x *CMsgHueShift) GetStyleSymbol() uint32 {
	if x != nil && x.StyleSymbol != nil {
		return *x.StyleSymbol
	}
	return 0
}

func (x *CMsgHueShift) GetAnimations() []*CMsgAnimationData {
	if x != nil {
		return x.Animations
	}
	return nil
}

type CMsgSaturation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base           *float64             `protobuf:"fixed64,1,opt,name=base" json:"base,omitempty"`
	Transition     *float64             `protobuf:"fixed64,2,opt,name=transition" json:"transition,omitempty"`
	TransitionData *CMsgTransitionData  `protobuf:"bytes,3,opt,name=transition_data,json=transitionData" json:"transition_data,omitempty"`
	StyleSymbol    *uint32              `protobuf:"varint,4,opt,name=style_symbol,json=styleSymbol" json:"style_symbol,omitempty"`
	Animations     []*CMsgAnimationData `protobuf:"bytes,5,rep,name=animations" json:"animations,omitempty"`
}

func (x *CMsgSaturation) Reset() {
	*x = CMsgSaturation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSaturation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSaturation) ProtoMessage() {}

func (x *CMsgSaturation) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSaturation.ProtoReflect.Descriptor instead.
func (*CMsgSaturation) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{36}
}

func (x *CMsgSaturation) GetBase() float64 {
	if x != nil && x.Base != nil {
		return *x.Base
	}
	return 0
}

func (x *CMsgSaturation) GetTransition() float64 {
	if x != nil && x.Transition != nil {
		return *x.Transition
	}
	return 0
}

func (x *CMsgSaturation) GetTransitionData() *CMsgTransitionData {
	if x != nil {
		return x.TransitionData
	}
	return nil
}

func (x *CMsgSaturation) GetStyleSymbol() uint32 {
	if x != nil && x.StyleSymbol != nil {
		return *x.StyleSymbol
	}
	return 0
}

func (x *CMsgSaturation) GetAnimations() []*CMsgAnimationData {
	if x != nil {
		return x.Animations
	}
	return nil
}

type CMsgBrightness struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base           *float64             `protobuf:"fixed64,1,opt,name=base" json:"base,omitempty"`
	Transition     *float64             `protobuf:"fixed64,2,opt,name=transition" json:"transition,omitempty"`
	TransitionData *CMsgTransitionData  `protobuf:"bytes,3,opt,name=transition_data,json=transitionData" json:"transition_data,omitempty"`
	StyleSymbol    *uint32              `protobuf:"varint,4,opt,name=style_symbol,json=styleSymbol" json:"style_symbol,omitempty"`
	Animations     []*CMsgAnimationData `protobuf:"bytes,5,rep,name=animations" json:"animations,omitempty"`
}

func (x *CMsgBrightness) Reset() {
	*x = CMsgBrightness{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgBrightness) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBrightness) ProtoMessage() {}

func (x *CMsgBrightness) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBrightness.ProtoReflect.Descriptor instead.
func (*CMsgBrightness) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{37}
}

func (x *CMsgBrightness) GetBase() float64 {
	if x != nil && x.Base != nil {
		return *x.Base
	}
	return 0
}

func (x *CMsgBrightness) GetTransition() float64 {
	if x != nil && x.Transition != nil {
		return *x.Transition
	}
	return 0
}

func (x *CMsgBrightness) GetTransitionData() *CMsgTransitionData {
	if x != nil {
		return x.TransitionData
	}
	return nil
}

func (x *CMsgBrightness) GetStyleSymbol() uint32 {
	if x != nil && x.StyleSymbol != nil {
		return *x.StyleSymbol
	}
	return 0
}

func (x *CMsgBrightness) GetAnimations() []*CMsgAnimationData {
	if x != nil {
		return x.Animations
	}
	return nil
}

type CMsgContrast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base           *float64             `protobuf:"fixed64,1,opt,name=base" json:"base,omitempty"`
	Transition     *float64             `protobuf:"fixed64,2,opt,name=transition" json:"transition,omitempty"`
	TransitionData *CMsgTransitionData  `protobuf:"bytes,3,opt,name=transition_data,json=transitionData" json:"transition_data,omitempty"`
	StyleSymbol    *uint32              `protobuf:"varint,4,opt,name=style_symbol,json=styleSymbol" json:"style_symbol,omitempty"`
	Animations     []*CMsgAnimationData `protobuf:"bytes,5,rep,name=animations" json:"animations,omitempty"`
}

func (x *CMsgContrast) Reset() {
	*x = CMsgContrast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgContrast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgContrast) ProtoMessage() {}

func (x *CMsgContrast) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgContrast.ProtoReflect.Descriptor instead.
func (*CMsgContrast) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{38}
}

func (x *CMsgContrast) GetBase() float64 {
	if x != nil && x.Base != nil {
		return *x.Base
	}
	return 0
}

func (x *CMsgContrast) GetTransition() float64 {
	if x != nil && x.Transition != nil {
		return *x.Transition
	}
	return 0
}

func (x *CMsgContrast) GetTransitionData() *CMsgTransitionData {
	if x != nil {
		return x.TransitionData
	}
	return nil
}

func (x *CMsgContrast) GetStyleSymbol() uint32 {
	if x != nil && x.StyleSymbol != nil {
		return *x.StyleSymbol
	}
	return 0
}

func (x *CMsgContrast) GetAnimations() []*CMsgAnimationData {
	if x != nil {
		return x.Animations
	}
	return nil
}

type CMsgGaussianValues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Passes    *float64 `protobuf:"fixed64,1,opt,name=passes" json:"passes,omitempty"`
	StddevHor *float64 `protobuf:"fixed64,2,opt,name=stddev_hor,json=stddevHor" json:"stddev_hor,omitempty"`
	StddevVer *float64 `protobuf:"fixed64,3,opt,name=stddev_ver,json=stddevVer" json:"stddev_ver,omitempty"`
}

func (x *CMsgGaussianValues) Reset() {
	*x = CMsgGaussianValues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGaussianValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGaussianValues) ProtoMessage() {}

func (x *CMsgGaussianValues) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGaussianValues.ProtoReflect.Descriptor instead.
func (*CMsgGaussianValues) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{39}
}

func (x *CMsgGaussianValues) GetPasses() float64 {
	if x != nil && x.Passes != nil {
		return *x.Passes
	}
	return 0
}

func (x *CMsgGaussianValues) GetStddevHor() float64 {
	if x != nil && x.StddevHor != nil {
		return *x.StddevHor
	}
	return 0
}

func (x *CMsgGaussianValues) GetStddevVer() float64 {
	if x != nil && x.StddevVer != nil {
		return *x.StddevVer
	}
	return 0
}

type CMsgGaussianBlur struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base           *CMsgGaussianValues  `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	Transition     *CMsgGaussianValues  `protobuf:"bytes,2,opt,name=transition" json:"transition,omitempty"`
	TransitionData *CMsgTransitionData  `protobuf:"bytes,3,opt,name=transition_data,json=transitionData" json:"transition_data,omitempty"`
	StyleSymbol    *uint32              `protobuf:"varint,4,opt,name=style_symbol,json=styleSymbol" json:"style_symbol,omitempty"`
	Animations     []*CMsgAnimationData `protobuf:"bytes,5,rep,name=animations" json:"animations,omitempty"`
}

func (x *CMsgGaussianBlur) Reset() {
	*x = CMsgGaussianBlur{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGaussianBlur) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGaussianBlur) ProtoMessage() {}

func (x *CMsgGaussianBlur) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGaussianBlur.ProtoReflect.Descriptor instead.
func (*CMsgGaussianBlur) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{40}
}

func (x *CMsgGaussianBlur) GetBase() *CMsgGaussianValues {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *CMsgGaussianBlur) GetTransition() *CMsgGaussianValues {
	if x != nil {
		return x.Transition
	}
	return nil
}

func (x *CMsgGaussianBlur) GetTransitionData() *CMsgTransitionData {
	if x != nil {
		return x.TransitionData
	}
	return nil
}

func (x *CMsgGaussianBlur) GetStyleSymbol() uint32 {
	if x != nil && x.StyleSymbol != nil {
		return *x.StyleSymbol
	}
	return 0
}

func (x *CMsgGaussianBlur) GetAnimations() []*CMsgAnimationData {
	if x != nil {
		return x.Animations
	}
	return nil
}

type CMsgMotionBlurValues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Velocity *float64 `protobuf:"fixed64,1,opt,name=velocity" json:"velocity,omitempty"`
	Dirx     *float64 `protobuf:"fixed64,2,opt,name=dirx" json:"dirx,omitempty"`
	Diry     *float64 `protobuf:"fixed64,3,opt,name=diry" json:"diry,omitempty"`
}

func (x *CMsgMotionBlurValues) Reset() {
	*x = CMsgMotionBlurValues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgMotionBlurValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgMotionBlurValues) ProtoMessage() {}

func (x *CMsgMotionBlurValues) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgMotionBlurValues.ProtoReflect.Descriptor instead.
func (*CMsgMotionBlurValues) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{41}
}

func (x *CMsgMotionBlurValues) GetVelocity() float64 {
	if x != nil && x.Velocity != nil {
		return *x.Velocity
	}
	return 0
}

func (x *CMsgMotionBlurValues) GetDirx() float64 {
	if x != nil && x.Dirx != nil {
		return *x.Dirx
	}
	return 0
}

func (x *CMsgMotionBlurValues) GetDiry() float64 {
	if x != nil && x.Diry != nil {
		return *x.Diry
	}
	return 0
}

type CMsgMotionBlur struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base           *CMsgMotionBlurValues `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	Transition     *CMsgMotionBlurValues `protobuf:"bytes,2,opt,name=transition" json:"transition,omitempty"`
	TransitionData *CMsgTransitionData   `protobuf:"bytes,3,opt,name=transition_data,json=transitionData" json:"transition_data,omitempty"`
	Animations     []*CMsgAnimationData  `protobuf:"bytes,4,rep,name=animations" json:"animations,omitempty"`
	StyleSymbol    *uint32               `protobuf:"varint,5,opt,name=style_symbol,json=styleSymbol" json:"style_symbol,omitempty"`
}

func (x *CMsgMotionBlur) Reset() {
	*x = CMsgMotionBlur{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgMotionBlur) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgMotionBlur) ProtoMessage() {}

func (x *CMsgMotionBlur) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgMotionBlur.ProtoReflect.Descriptor instead.
func (*CMsgMotionBlur) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{42}
}

func (x *CMsgMotionBlur) GetBase() *CMsgMotionBlurValues {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *CMsgMotionBlur) GetTransition() *CMsgMotionBlurValues {
	if x != nil {
		return x.Transition
	}
	return nil
}

func (x *CMsgMotionBlur) GetTransitionData() *CMsgTransitionData {
	if x != nil {
		return x.TransitionData
	}
	return nil
}

func (x *CMsgMotionBlur) GetAnimations() []*CMsgAnimationData {
	if x != nil {
		return x.Animations
	}
	return nil
}

func (x *CMsgMotionBlur) GetStyleSymbol() uint32 {
	if x != nil && x.StyleSymbol != nil {
		return *x.StyleSymbol
	}
	return 0
}

type CMsg3DTransformPerspective struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base           *float64             `protobuf:"fixed64,1,opt,name=base" json:"base,omitempty"`
	Transition     *float64             `protobuf:"fixed64,2,opt,name=transition" json:"transition,omitempty"`
	TransitionData *CMsgTransitionData  `protobuf:"bytes,3,opt,name=transition_data,json=transitionData" json:"transition_data,omitempty"`
	StyleSymbol    *uint32              `protobuf:"varint,4,opt,name=style_symbol,json=styleSymbol" json:"style_symbol,omitempty"`
	Animations     []*CMsgAnimationData `protobuf:"bytes,5,rep,name=animations" json:"animations,omitempty"`
}

func (x *CMsg3DTransformPerspective) Reset() {
	*x = CMsg3DTransformPerspective{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsg3DTransformPerspective) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsg3DTransformPerspective) ProtoMessage() {}

func (x *CMsg3DTransformPerspective) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsg3DTransformPerspective.ProtoReflect.Descriptor instead.
func (*CMsg3DTransformPerspective) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{43}
}

func (x *CMsg3DTransformPerspective) GetBase() float64 {
	if x != nil && x.Base != nil {
		return *x.Base
	}
	return 0
}

func (x *CMsg3DTransformPerspective) GetTransition() float64 {
	if x != nil && x.Transition != nil {
		return *x.Transition
	}
	return 0
}

func (x *CMsg3DTransformPerspective) GetTransitionData() *CMsgTransitionData {
	if x != nil {
		return x.TransitionData
	}
	return nil
}

func (x *CMsg3DTransformPerspective) GetStyleSymbol() uint32 {
	if x != nil && x.StyleSymbol != nil {
		return *x.StyleSymbol
	}
	return 0
}

func (x *CMsg3DTransformPerspective) GetAnimations() []*CMsgAnimationData {
	if x != nil {
		return x.Animations
	}
	return nil
}

type CMsg3DTransformPerspectiveOrigin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base           *CMsgPoint           `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	Transition     *CMsgPoint           `protobuf:"bytes,2,opt,name=transition" json:"transition,omitempty"`
	TransitionData *CMsgTransitionData  `protobuf:"bytes,3,opt,name=transition_data,json=transitionData" json:"transition_data,omitempty"`
	StyleSymbol    *uint32              `protobuf:"varint,4,opt,name=style_symbol,json=styleSymbol" json:"style_symbol,omitempty"`
	Animations     []*CMsgAnimationData `protobuf:"bytes,5,rep,name=animations" json:"animations,omitempty"`
}

func (x *CMsg3DTransformPerspectiveOrigin) Reset() {
	*x = CMsg3DTransformPerspectiveOrigin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsg3DTransformPerspectiveOrigin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsg3DTransformPerspectiveOrigin) ProtoMessage() {}

func (x *CMsg3DTransformPerspectiveOrigin) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsg3DTransformPerspectiveOrigin.ProtoReflect.Descriptor instead.
func (*CMsg3DTransformPerspectiveOrigin) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{44}
}

func (x *CMsg3DTransformPerspectiveOrigin) GetBase() *CMsgPoint {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *CMsg3DTransformPerspectiveOrigin) GetTransition() *CMsgPoint {
	if x != nil {
		return x.Transition
	}
	return nil
}

func (x *CMsg3DTransformPerspectiveOrigin) GetTransitionData() *CMsgTransitionData {
	if x != nil {
		return x.TransitionData
	}
	return nil
}

func (x *CMsg3DTransformPerspectiveOrigin) GetStyleSymbol() uint32 {
	if x != nil && x.StyleSymbol != nil {
		return *x.StyleSymbol
	}
	return 0
}

func (x *CMsg3DTransformPerspectiveOrigin) GetAnimations() []*CMsgAnimationData {
	if x != nil {
		return x.Animations
	}
	return nil
}

type CMsgTransformOriginData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X                *float64 `protobuf:"fixed64,1,opt,name=x" json:"x,omitempty"`
	Y                *float64 `protobuf:"fixed64,2,opt,name=y" json:"y,omitempty"`
	XIsPercent       *bool    `protobuf:"varint,3,opt,name=x_is_percent,json=xIsPercent" json:"x_is_percent,omitempty"`
	YIsPercent       *bool    `protobuf:"varint,4,opt,name=y_is_percent,json=yIsPercent" json:"y_is_percent,omitempty"`
	IsParentRelative *bool    `protobuf:"varint,5,opt,name=is_parent_relative,json=isParentRelative" json:"is_parent_relative,omitempty"`
}

func (x *CMsgTransformOriginData) Reset() {
	*x = CMsgTransformOriginData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgTransformOriginData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgTransformOriginData) ProtoMessage() {}

func (x *CMsgTransformOriginData) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgTransformOriginData.ProtoReflect.Descriptor instead.
func (*CMsgTransformOriginData) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{45}
}

func (x *CMsgTransformOriginData) GetX() float64 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *CMsgTransformOriginData) GetY() float64 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

func (x *CMsgTransformOriginData) GetXIsPercent() bool {
	if x != nil && x.XIsPercent != nil {
		return *x.XIsPercent
	}
	return false
}

func (x *CMsgTransformOriginData) GetYIsPercent() bool {
	if x != nil && x.YIsPercent != nil {
		return *x.YIsPercent
	}
	return false
}

func (x *CMsgTransformOriginData) GetIsParentRelative() bool {
	if x != nil && x.IsParentRelative != nil {
		return *x.IsParentRelative
	}
	return false
}

type CMsg3DTransformOrigin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base           *CMsgTransformOriginData `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	Transition     *CMsgTransformOriginData `protobuf:"bytes,2,opt,name=transition" json:"transition,omitempty"`
	TransitionData *CMsgTransitionData      `protobuf:"bytes,3,opt,name=transition_data,json=transitionData" json:"transition_data,omitempty"`
	StyleSymbol    *uint32                  `protobuf:"varint,4,opt,name=style_symbol,json=styleSymbol" json:"style_symbol,omitempty"`
	Animations     []*CMsgAnimationData     `protobuf:"bytes,5,rep,name=animations" json:"animations,omitempty"`
}

func (x *CMsg3DTransformOrigin) Reset() {
	*x = CMsg3DTransformOrigin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsg3DTransformOrigin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsg3DTransformOrigin) ProtoMessage() {}

func (x *CMsg3DTransformOrigin) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsg3DTransformOrigin.ProtoReflect.Descriptor instead.
func (*CMsg3DTransformOrigin) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{46}
}

func (x *CMsg3DTransformOrigin) GetBase() *CMsgTransformOriginData {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *CMsg3DTransformOrigin) GetTransition() *CMsgTransformOriginData {
	if x != nil {
		return x.Transition
	}
	return nil
}

func (x *CMsg3DTransformOrigin) GetTransitionData() *CMsgTransitionData {
	if x != nil {
		return x.TransitionData
	}
	return nil
}

func (x *CMsg3DTransformOrigin) GetStyleSymbol() uint32 {
	if x != nil && x.StyleSymbol != nil {
		return *x.StyleSymbol
	}
	return 0
}

func (x *CMsg3DTransformOrigin) GetAnimations() []*CMsgAnimationData {
	if x != nil {
		return x.Animations
	}
	return nil
}

type CMsg3DTransformMatrix struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base           *CMsgMatrix4X4       `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	TransitionData *CMsgTransitionData  `protobuf:"bytes,2,opt,name=transition_data,json=transitionData" json:"transition_data,omitempty"`
	Transition     *CMsgMatrix4X4       `protobuf:"bytes,3,opt,name=transition" json:"transition,omitempty"`
	StyleSymbol    *uint32              `protobuf:"varint,4,opt,name=style_symbol,json=styleSymbol" json:"style_symbol,omitempty"`
	Animations     []*CMsgAnimationData `protobuf:"bytes,5,rep,name=animations" json:"animations,omitempty"`
}

func (x *CMsg3DTransformMatrix) Reset() {
	*x = CMsg3DTransformMatrix{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsg3DTransformMatrix) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsg3DTransformMatrix) ProtoMessage() {}

func (x *CMsg3DTransformMatrix) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsg3DTransformMatrix.ProtoReflect.Descriptor instead.
func (*CMsg3DTransformMatrix) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{47}
}

func (x *CMsg3DTransformMatrix) GetBase() *CMsgMatrix4X4 {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *CMsg3DTransformMatrix) GetTransitionData() *CMsgTransitionData {
	if x != nil {
		return x.TransitionData
	}
	return nil
}

func (x *CMsg3DTransformMatrix) GetTransition() *CMsgMatrix4X4 {
	if x != nil {
		return x.Transition
	}
	return nil
}

func (x *CMsg3DTransformMatrix) GetStyleSymbol() uint32 {
	if x != nil && x.StyleSymbol != nil {
		return *x.StyleSymbol
	}
	return 0
}

func (x *CMsg3DTransformMatrix) GetAnimations() []*CMsgAnimationData {
	if x != nil {
		return x.Animations
	}
	return nil
}

type CMsgBorderRadius struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base           *CRadiusData         `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	TransitionData *CMsgTransitionData  `protobuf:"bytes,2,opt,name=transition_data,json=transitionData" json:"transition_data,omitempty"`
	Transition     *CRadiusData         `protobuf:"bytes,3,opt,name=transition" json:"transition,omitempty"`
	StyleSymbol    *uint32              `protobuf:"varint,4,opt,name=style_symbol,json=styleSymbol" json:"style_symbol,omitempty"`
	Animations     []*CMsgAnimationData `protobuf:"bytes,5,rep,name=animations" json:"animations,omitempty"`
}

func (x *CMsgBorderRadius) Reset() {
	*x = CMsgBorderRadius{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgBorderRadius) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBorderRadius) ProtoMessage() {}

func (x *CMsgBorderRadius) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBorderRadius.ProtoReflect.Descriptor instead.
func (*CMsgBorderRadius) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{48}
}

func (x *CMsgBorderRadius) GetBase() *CRadiusData {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *CMsgBorderRadius) GetTransitionData() *CMsgTransitionData {
	if x != nil {
		return x.TransitionData
	}
	return nil
}

func (x *CMsgBorderRadius) GetTransition() *CRadiusData {
	if x != nil {
		return x.Transition
	}
	return nil
}

func (x *CMsgBorderRadius) GetStyleSymbol() uint32 {
	if x != nil && x.StyleSymbol != nil {
		return *x.StyleSymbol
	}
	return 0
}

func (x *CMsgBorderRadius) GetAnimations() []*CMsgAnimationData {
	if x != nil {
		return x.Animations
	}
	return nil
}

type CMsgBorder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base           *CBorderData         `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	TransitionData *CMsgTransitionData  `protobuf:"bytes,2,opt,name=transition_data,json=transitionData" json:"transition_data,omitempty"`
	Transition     *CBorderData         `protobuf:"bytes,3,opt,name=transition" json:"transition,omitempty"`
	StyleSymbol    *uint32              `protobuf:"varint,4,opt,name=style_symbol,json=styleSymbol" json:"style_symbol,omitempty"`
	Animations     []*CMsgAnimationData `protobuf:"bytes,5,rep,name=animations" json:"animations,omitempty"`
}

func (x *CMsgBorder) Reset() {
	*x = CMsgBorder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgBorder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBorder) ProtoMessage() {}

func (x *CMsgBorder) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBorder.ProtoReflect.Descriptor instead.
func (*CMsgBorder) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{49}
}

func (x *CMsgBorder) GetBase() *CBorderData {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *CMsgBorder) GetTransitionData() *CMsgTransitionData {
	if x != nil {
		return x.TransitionData
	}
	return nil
}

func (x *CMsgBorder) GetTransition() *CBorderData {
	if x != nil {
		return x.Transition
	}
	return nil
}

func (x *CMsgBorder) GetStyleSymbol() uint32 {
	if x != nil && x.StyleSymbol != nil {
		return *x.StyleSymbol
	}
	return 0
}

func (x *CMsgBorder) GetAnimations() []*CMsgAnimationData {
	if x != nil {
		return x.Animations
	}
	return nil
}

type CMsgBoxShadow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base           *CBoxShadowData      `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	TransitionData *CMsgTransitionData  `protobuf:"bytes,2,opt,name=transition_data,json=transitionData" json:"transition_data,omitempty"`
	Transition     *CBoxShadowData      `protobuf:"bytes,3,opt,name=transition" json:"transition,omitempty"`
	StyleSymbol    *uint32              `protobuf:"varint,4,opt,name=style_symbol,json=styleSymbol" json:"style_symbol,omitempty"`
	Animations     []*CMsgAnimationData `protobuf:"bytes,5,rep,name=animations" json:"animations,omitempty"`
}

func (x *CMsgBoxShadow) Reset() {
	*x = CMsgBoxShadow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgBoxShadow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBoxShadow) ProtoMessage() {}

func (x *CMsgBoxShadow) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBoxShadow.ProtoReflect.Descriptor instead.
func (*CMsgBoxShadow) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{50}
}

func (x *CMsgBoxShadow) GetBase() *CBoxShadowData {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *CMsgBoxShadow) GetTransitionData() *CMsgTransitionData {
	if x != nil {
		return x.TransitionData
	}
	return nil
}

func (x *CMsgBoxShadow) GetTransition() *CBoxShadowData {
	if x != nil {
		return x.Transition
	}
	return nil
}

func (x *CMsgBoxShadow) GetStyleSymbol() uint32 {
	if x != nil && x.StyleSymbol != nil {
		return *x.StyleSymbol
	}
	return 0
}

func (x *CMsgBoxShadow) GetAnimations() []*CMsgAnimationData {
	if x != nil {
		return x.Animations
	}
	return nil
}

type CMsgTextShadow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base           *CTextShadowData     `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	TransitionData *CMsgTransitionData  `protobuf:"bytes,2,opt,name=transition_data,json=transitionData" json:"transition_data,omitempty"`
	Transition     *CTextShadowData     `protobuf:"bytes,3,opt,name=transition" json:"transition,omitempty"`
	StyleSymbol    *uint32              `protobuf:"varint,4,opt,name=style_symbol,json=styleSymbol" json:"style_symbol,omitempty"`
	Animations     []*CMsgAnimationData `protobuf:"bytes,5,rep,name=animations" json:"animations,omitempty"`
}

func (x *CMsgTextShadow) Reset() {
	*x = CMsgTextShadow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgTextShadow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgTextShadow) ProtoMessage() {}

func (x *CMsgTextShadow) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgTextShadow.ProtoReflect.Descriptor instead.
func (*CMsgTextShadow) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{51}
}

func (x *CMsgTextShadow) GetBase() *CTextShadowData {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *CMsgTextShadow) GetTransitionData() *CMsgTransitionData {
	if x != nil {
		return x.TransitionData
	}
	return nil
}

func (x *CMsgTextShadow) GetTransition() *CTextShadowData {
	if x != nil {
		return x.Transition
	}
	return nil
}

func (x *CMsgTextShadow) GetStyleSymbol() uint32 {
	if x != nil && x.StyleSymbol != nil {
		return *x.StyleSymbol
	}
	return 0
}

func (x *CMsgTextShadow) GetAnimations() []*CMsgAnimationData {
	if x != nil {
		return x.Animations
	}
	return nil
}

type CMsgClip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base           *CMsgClipData        `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	TransitionData *CMsgTransitionData  `protobuf:"bytes,2,opt,name=transition_data,json=transitionData" json:"transition_data,omitempty"`
	Transition     *CMsgClipData        `protobuf:"bytes,3,opt,name=transition" json:"transition,omitempty"`
	StyleSymbol    *uint32              `protobuf:"varint,4,opt,name=style_symbol,json=styleSymbol" json:"style_symbol,omitempty"`
	Animations     []*CMsgAnimationData `protobuf:"bytes,5,rep,name=animations" json:"animations,omitempty"`
}

func (x *CMsgClip) Reset() {
	*x = CMsgClip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClip) ProtoMessage() {}

func (x *CMsgClip) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClip.ProtoReflect.Descriptor instead.
func (*CMsgClip) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{52}
}

func (x *CMsgClip) GetBase() *CMsgClipData {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *CMsgClip) GetTransitionData() *CMsgTransitionData {
	if x != nil {
		return x.TransitionData
	}
	return nil
}

func (x *CMsgClip) GetTransition() *CMsgClipData {
	if x != nil {
		return x.Transition
	}
	return nil
}

func (x *CMsgClip) GetStyleSymbol() uint32 {
	if x != nil && x.StyleSymbol != nil {
		return *x.StyleSymbol
	}
	return 0
}

func (x *CMsgClip) GetAnimations() []*CMsgAnimationData {
	if x != nil {
		return x.Animations
	}
	return nil
}

type CMsgPushClipLayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopLeft      *CMsgPoint   `protobuf:"bytes,1,opt,name=top_left,json=topLeft" json:"top_left,omitempty"`
	BottomRight  *CMsgPoint   `protobuf:"bytes,2,opt,name=bottom_right,json=bottomRight" json:"bottom_right,omitempty"`
	BorderRadius *CRadiusData `protobuf:"bytes,3,opt,name=border_radius,json=borderRadius" json:"border_radius,omitempty"`
}

func (x *CMsgPushClipLayer) Reset() {
	*x = CMsgPushClipLayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgPushClipLayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgPushClipLayer) ProtoMessage() {}

func (x *CMsgPushClipLayer) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgPushClipLayer.ProtoReflect.Descriptor instead.
func (*CMsgPushClipLayer) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{53}
}

func (x *CMsgPushClipLayer) GetTopLeft() *CMsgPoint {
	if x != nil {
		return x.TopLeft
	}
	return nil
}

func (x *CMsgPushClipLayer) GetBottomRight() *CMsgPoint {
	if x != nil {
		return x.BottomRight
	}
	return nil
}

func (x *CMsgPushClipLayer) GetBorderRadius() *CRadiusData {
	if x != nil {
		return x.BorderRadius
	}
	return nil
}

type CMsgPopClipLayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CMsgPopClipLayer) Reset() {
	*x = CMsgPopClipLayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgPopClipLayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgPopClipLayer) ProtoMessage() {}

func (x *CMsgPopClipLayer) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgPopClipLayer.ProtoReflect.Descriptor instead.
func (*CMsgPopClipLayer) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{54}
}

type CMsgPushPanelContextInLayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransformM00 *float64        `protobuf:"fixed64,1,opt,name=transform_m00,json=transformM00" json:"transform_m00,omitempty"`
	TransformM01 *float64        `protobuf:"fixed64,2,opt,name=transform_m01,json=transformM01" json:"transform_m01,omitempty"`
	TransformM02 *float64        `protobuf:"fixed64,3,opt,name=transform_m02,json=transformM02" json:"transform_m02,omitempty"`
	TransformM03 *float64        `protobuf:"fixed64,4,opt,name=transform_m03,json=transformM03" json:"transform_m03,omitempty"`
	TransformM10 *float64        `protobuf:"fixed64,5,opt,name=transform_m10,json=transformM10" json:"transform_m10,omitempty"`
	TransformM11 *float64        `protobuf:"fixed64,6,opt,name=transform_m11,json=transformM11" json:"transform_m11,omitempty"`
	TransformM12 *float64        `protobuf:"fixed64,7,opt,name=transform_m12,json=transformM12" json:"transform_m12,omitempty"`
	TransformM13 *float64        `protobuf:"fixed64,8,opt,name=transform_m13,json=transformM13" json:"transform_m13,omitempty"`
	TransformM20 *float64        `protobuf:"fixed64,9,opt,name=transform_m20,json=transformM20" json:"transform_m20,omitempty"`
	TransformM21 *float64        `protobuf:"fixed64,10,opt,name=transform_m21,json=transformM21" json:"transform_m21,omitempty"`
	TransformM22 *float64        `protobuf:"fixed64,11,opt,name=transform_m22,json=transformM22" json:"transform_m22,omitempty"`
	TransformM23 *float64        `protobuf:"fixed64,12,opt,name=transform_m23,json=transformM23" json:"transform_m23,omitempty"`
	TransformM30 *float64        `protobuf:"fixed64,13,opt,name=transform_m30,json=transformM30" json:"transform_m30,omitempty"`
	TransformM31 *float64        `protobuf:"fixed64,14,opt,name=transform_m31,json=transformM31" json:"transform_m31,omitempty"`
	TransformM32 *float64        `protobuf:"fixed64,15,opt,name=transform_m32,json=transformM32" json:"transform_m32,omitempty"`
	TransformM33 *float64        `protobuf:"fixed64,16,opt,name=transform_m33,json=transformM33" json:"transform_m33,omitempty"`
	BoxShadow    *CBoxShadowData `protobuf:"bytes,17,opt,name=box_shadow,json=boxShadow" json:"box_shadow,omitempty"`
	Width        *float64        `protobuf:"fixed64,18,opt,name=width" json:"width,omitempty"`
	Height       *float64        `protobuf:"fixed64,19,opt,name=height" json:"height,omitempty"`
	PositionX    *float64        `protobuf:"fixed64,20,opt,name=position_x,json=positionX" json:"position_x,omitempty"`
	PositionY    *float64        `protobuf:"fixed64,21,opt,name=position_y,json=positionY" json:"position_y,omitempty"`
	PositionZ    *float64        `protobuf:"fixed64,22,opt,name=position_z,json=positionZ" json:"position_z,omitempty"`
	Border       *CBorderData    `protobuf:"bytes,23,opt,name=border" json:"border,omitempty"`
	ScrollX      *float64        `protobuf:"fixed64,24,opt,name=scroll_x,json=scrollX" json:"scroll_x,omitempty"`
	ScrollY      *float64        `protobuf:"fixed64,25,opt,name=scroll_y,json=scrollY" json:"scroll_y,omitempty"`
}

func (x *CMsgPushPanelContextInLayer) Reset() {
	*x = CMsgPushPanelContextInLayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgPushPanelContextInLayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgPushPanelContextInLayer) ProtoMessage() {}

func (x *CMsgPushPanelContextInLayer) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgPushPanelContextInLayer.ProtoReflect.Descriptor instead.
func (*CMsgPushPanelContextInLayer) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{55}
}

func (x *CMsgPushPanelContextInLayer) GetTransformM00() float64 {
	if x != nil && x.TransformM00 != nil {
		return *x.TransformM00
	}
	return 0
}

func (x *CMsgPushPanelContextInLayer) GetTransformM01() float64 {
	if x != nil && x.TransformM01 != nil {
		return *x.TransformM01
	}
	return 0
}

func (x *CMsgPushPanelContextInLayer) GetTransformM02() float64 {
	if x != nil && x.TransformM02 != nil {
		return *x.TransformM02
	}
	return 0
}

func (x *CMsgPushPanelContextInLayer) GetTransformM03() float64 {
	if x != nil && x.TransformM03 != nil {
		return *x.TransformM03
	}
	return 0
}

func (x *CMsgPushPanelContextInLayer) GetTransformM10() float64 {
	if x != nil && x.TransformM10 != nil {
		return *x.TransformM10
	}
	return 0
}

func (x *CMsgPushPanelContextInLayer) GetTransformM11() float64 {
	if x != nil && x.TransformM11 != nil {
		return *x.TransformM11
	}
	return 0
}

func (x *CMsgPushPanelContextInLayer) GetTransformM12() float64 {
	if x != nil && x.TransformM12 != nil {
		return *x.TransformM12
	}
	return 0
}

func (x *CMsgPushPanelContextInLayer) GetTransformM13() float64 {
	if x != nil && x.TransformM13 != nil {
		return *x.TransformM13
	}
	return 0
}

func (x *CMsgPushPanelContextInLayer) GetTransformM20() float64 {
	if x != nil && x.TransformM20 != nil {
		return *x.TransformM20
	}
	return 0
}

func (x *CMsgPushPanelContextInLayer) GetTransformM21() float64 {
	if x != nil && x.TransformM21 != nil {
		return *x.TransformM21
	}
	return 0
}

func (x *CMsgPushPanelContextInLayer) GetTransformM22() float64 {
	if x != nil && x.TransformM22 != nil {
		return *x.TransformM22
	}
	return 0
}

func (x *CMsgPushPanelContextInLayer) GetTransformM23() float64 {
	if x != nil && x.TransformM23 != nil {
		return *x.TransformM23
	}
	return 0
}

func (x *CMsgPushPanelContextInLayer) GetTransformM30() float64 {
	if x != nil && x.TransformM30 != nil {
		return *x.TransformM30
	}
	return 0
}

func (x *CMsgPushPanelContextInLayer) GetTransformM31() float64 {
	if x != nil && x.TransformM31 != nil {
		return *x.TransformM31
	}
	return 0
}

func (x *CMsgPushPanelContextInLayer) GetTransformM32() float64 {
	if x != nil && x.TransformM32 != nil {
		return *x.TransformM32
	}
	return 0
}

func (x *CMsgPushPanelContextInLayer) GetTransformM33() float64 {
	if x != nil && x.TransformM33 != nil {
		return *x.TransformM33
	}
	return 0
}

func (x *CMsgPushPanelContextInLayer) GetBoxShadow() *CBoxShadowData {
	if x != nil {
		return x.BoxShadow
	}
	return nil
}

func (x *CMsgPushPanelContextInLayer) GetWidth() float64 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *CMsgPushPanelContextInLayer) GetHeight() float64 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

func (x *CMsgPushPanelContextInLayer) GetPositionX() float64 {
	if x != nil && x.PositionX != nil {
		return *x.PositionX
	}
	return 0
}

func (x *CMsgPushPanelContextInLayer) GetPositionY() float64 {
	if x != nil && x.PositionY != nil {
		return *x.PositionY
	}
	return 0
}

func (x *CMsgPushPanelContextInLayer) GetPositionZ() float64 {
	if x != nil && x.PositionZ != nil {
		return *x.PositionZ
	}
	return 0
}

func (x *CMsgPushPanelContextInLayer) GetBorder() *CBorderData {
	if x != nil {
		return x.Border
	}
	return nil
}

func (x *CMsgPushPanelContextInLayer) GetScrollX() float64 {
	if x != nil && x.ScrollX != nil {
		return *x.ScrollX
	}
	return 0
}

func (x *CMsgPushPanelContextInLayer) GetScrollY() float64 {
	if x != nil && x.ScrollY != nil {
		return *x.ScrollY
	}
	return 0
}

type CMsgPopPanelContextInLayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CMsgPopPanelContextInLayer) Reset() {
	*x = CMsgPopPanelContextInLayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgPopPanelContextInLayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgPopPanelContextInLayer) ProtoMessage() {}

func (x *CMsgPopPanelContextInLayer) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgPopPanelContextInLayer.ProtoReflect.Descriptor instead.
func (*CMsgPopPanelContextInLayer) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{56}
}

type CMsgPushAAndTContext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContextId                   *uint64                           `protobuf:"varint,1,opt,name=context_id,json=contextId" json:"context_id,omitempty"`
	Width                       *float64                          `protobuf:"fixed64,3,opt,name=width" json:"width,omitempty"`
	Height                      *float64                          `protobuf:"fixed64,4,opt,name=height" json:"height,omitempty"`
	ChilrenHave_3Dtransforms    *bool                             `protobuf:"varint,5,opt,name=chilren_have_3dtransforms,json=chilrenHave3dtransforms" json:"chilren_have_3dtransforms,omitempty"`
	Zindex                      *float32                          `protobuf:"fixed32,6,opt,name=zindex" json:"zindex,omitempty"`
	PanelPosition               *CMsgPanelPosition                `protobuf:"bytes,7,opt,name=panel_position,json=panelPosition" json:"panel_position,omitempty"`
	TransformMatrix             *CMsg3DTransformMatrix            `protobuf:"bytes,8,opt,name=transform_matrix,json=transformMatrix" json:"transform_matrix,omitempty"`
	TransformOrigin             *CMsg3DTransformOrigin            `protobuf:"bytes,9,opt,name=transform_origin,json=transformOrigin" json:"transform_origin,omitempty"`
	TransformPerspective        *CMsg3DTransformPerspective       `protobuf:"bytes,10,opt,name=transform_perspective,json=transformPerspective" json:"transform_perspective,omitempty"`
	TransformPerspectiveOrigin  *CMsg3DTransformPerspectiveOrigin `protobuf:"bytes,11,opt,name=transform_perspective_origin,json=transformPerspectiveOrigin" json:"transform_perspective_origin,omitempty"`
	Opacity                     *CMsgOpacity                      `protobuf:"bytes,12,opt,name=opacity" json:"opacity,omitempty"`
	WashColor                   *CMsgColor                        `protobuf:"bytes,13,opt,name=wash_color,json=washColor" json:"wash_color,omitempty"`
	HueShift                    *CMsgHueShift                     `protobuf:"bytes,14,opt,name=hue_shift,json=hueShift" json:"hue_shift,omitempty"`
	Saturation                  *CMsgSaturation                   `protobuf:"bytes,15,opt,name=saturation" json:"saturation,omitempty"`
	Brightness                  *CMsgBrightness                   `protobuf:"bytes,16,opt,name=brightness" json:"brightness,omitempty"`
	Contrast                    *CMsgContrast                     `protobuf:"bytes,17,opt,name=contrast" json:"contrast,omitempty"`
	OpacityMask                 *CMsgOpacityMask                  `protobuf:"bytes,18,opt,name=opacity_mask,json=opacityMask" json:"opacity_mask,omitempty"`
	BorderRadius                *CMsgBorderRadius                 `protobuf:"bytes,19,opt,name=border_radius,json=borderRadius" json:"border_radius,omitempty"`
	GaussianBlur                *CMsgGaussianBlur                 `protobuf:"bytes,20,opt,name=gaussian_blur,json=gaussianBlur" json:"gaussian_blur,omitempty"`
	Border                      *CMsgBorder                       `protobuf:"bytes,21,opt,name=border" json:"border,omitempty"`
	BoxShadow                   *CMsgBoxShadow                    `protobuf:"bytes,22,opt,name=box_shadow,json=boxShadow" json:"box_shadow,omitempty"`
	Scale_2DCentered            *CMsgPointWithTransition          `protobuf:"bytes,23,opt,name=scale_2d_centered,json=scale2dCentered" json:"scale_2d_centered,omitempty"`
	Rotate_2DCentered           *CMsgRotate2D                     `protobuf:"bytes,24,opt,name=rotate_2d_centered,json=rotate2dCentered" json:"rotate_2d_centered,omitempty"`
	TextShadow                  *CMsgTextShadow                   `protobuf:"bytes,25,opt,name=text_shadow,json=textShadow" json:"text_shadow,omitempty"`
	Clip                        *CMsgClip                         `protobuf:"bytes,26,opt,name=clip" json:"clip,omitempty"`
	SuppressClipToBounds        *bool                             `protobuf:"varint,27,opt,name=suppress_clip_to_bounds,json=suppressClipToBounds" json:"suppress_clip_to_bounds,omitempty"`
	NeedsFullRepaint            *int32                            `protobuf:"varint,28,opt,name=needs_full_repaint,json=needsFullRepaint" json:"needs_full_repaint,omitempty"`
	NeedsIntermediateTexture    *bool                             `protobuf:"varint,29,opt,name=needs_intermediate_texture,json=needsIntermediateTexture" json:"needs_intermediate_texture,omitempty"`
	ClipAfterTransform          *bool                             `protobuf:"varint,30,opt,name=clip_after_transform,json=clipAfterTransform" json:"clip_after_transform,omitempty"`
	WantsHitTest                *bool                             `protobuf:"varint,31,opt,name=wants_hit_test,json=wantsHitTest" json:"wants_hit_test,omitempty"`
	WantsHitTestChildren        *bool                             `protobuf:"varint,32,opt,name=wants_hit_test_children,json=wantsHitTestChildren" json:"wants_hit_test_children,omitempty"`
	MixBlendMode                *uint32                           `protobuf:"varint,33,opt,name=mix_blend_mode,json=mixBlendMode" json:"mix_blend_mode,omitempty"`
	OpaqueBackground            *bool                             `protobuf:"varint,34,opt,name=opaque_background,json=opaqueBackground" json:"opaque_background,omitempty"`
	ChildPanelCount             *uint32                           `protobuf:"varint,35,opt,name=child_panel_count,json=childPanelCount" json:"child_panel_count,omitempty"`
	WantsScreenspaceQuadOutput  *bool                             `protobuf:"varint,36,opt,name=wants_screenspace_quad_output,json=wantsScreenspaceQuadOutput" json:"wants_screenspace_quad_output,omitempty"`
	MotionBlur                  *CMsgMotionBlur                   `protobuf:"bytes,37,opt,name=motion_blur,json=motionBlur" json:"motion_blur,omitempty"`
	CompositionLayerTextureName *string                           `protobuf:"bytes,38,opt,name=composition_layer_texture_name,json=compositionLayerTextureName" json:"composition_layer_texture_name,omitempty"`
}

func (x *CMsgPushAAndTContext) Reset() {
	*x = CMsgPushAAndTContext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgPushAAndTContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgPushAAndTContext) ProtoMessage() {}

func (x *CMsgPushAAndTContext) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgPushAAndTContext.ProtoReflect.Descriptor instead.
func (*CMsgPushAAndTContext) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{57}
}

func (x *CMsgPushAAndTContext) GetContextId() uint64 {
	if x != nil && x.ContextId != nil {
		return *x.ContextId
	}
	return 0
}

func (x *CMsgPushAAndTContext) GetWidth() float64 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *CMsgPushAAndTContext) GetHeight() float64 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

func (x *CMsgPushAAndTContext) GetChilrenHave_3Dtransforms() bool {
	if x != nil && x.ChilrenHave_3Dtransforms != nil {
		return *x.ChilrenHave_3Dtransforms
	}
	return false
}

func (x *CMsgPushAAndTContext) GetZindex() float32 {
	if x != nil && x.Zindex != nil {
		return *x.Zindex
	}
	return 0
}

func (x *CMsgPushAAndTContext) GetPanelPosition() *CMsgPanelPosition {
	if x != nil {
		return x.PanelPosition
	}
	return nil
}

func (x *CMsgPushAAndTContext) GetTransformMatrix() *CMsg3DTransformMatrix {
	if x != nil {
		return x.TransformMatrix
	}
	return nil
}

func (x *CMsgPushAAndTContext) GetTransformOrigin() *CMsg3DTransformOrigin {
	if x != nil {
		return x.TransformOrigin
	}
	return nil
}

func (x *CMsgPushAAndTContext) GetTransformPerspective() *CMsg3DTransformPerspective {
	if x != nil {
		return x.TransformPerspective
	}
	return nil
}

func (x *CMsgPushAAndTContext) GetTransformPerspectiveOrigin() *CMsg3DTransformPerspectiveOrigin {
	if x != nil {
		return x.TransformPerspectiveOrigin
	}
	return nil
}

func (x *CMsgPushAAndTContext) GetOpacity() *CMsgOpacity {
	if x != nil {
		return x.Opacity
	}
	return nil
}

func (x *CMsgPushAAndTContext) GetWashColor() *CMsgColor {
	if x != nil {
		return x.WashColor
	}
	return nil
}

func (x *CMsgPushAAndTContext) GetHueShift() *CMsgHueShift {
	if x != nil {
		return x.HueShift
	}
	return nil
}

func (x *CMsgPushAAndTContext) GetSaturation() *CMsgSaturation {
	if x != nil {
		return x.Saturation
	}
	return nil
}

func (x *CMsgPushAAndTContext) GetBrightness() *CMsgBrightness {
	if x != nil {
		return x.Brightness
	}
	return nil
}

func (x *CMsgPushAAndTContext) GetContrast() *CMsgContrast {
	if x != nil {
		return x.Contrast
	}
	return nil
}

func (x *CMsgPushAAndTContext) GetOpacityMask() *CMsgOpacityMask {
	if x != nil {
		return x.OpacityMask
	}
	return nil
}

func (x *CMsgPushAAndTContext) GetBorderRadius() *CMsgBorderRadius {
	if x != nil {
		return x.BorderRadius
	}
	return nil
}

func (x *CMsgPushAAndTContext) GetGaussianBlur() *CMsgGaussianBlur {
	if x != nil {
		return x.GaussianBlur
	}
	return nil
}

func (x *CMsgPushAAndTContext) GetBorder() *CMsgBorder {
	if x != nil {
		return x.Border
	}
	return nil
}

func (x *CMsgPushAAndTContext) GetBoxShadow() *CMsgBoxShadow {
	if x != nil {
		return x.BoxShadow
	}
	return nil
}

func (x *CMsgPushAAndTContext) GetScale_2DCentered() *CMsgPointWithTransition {
	if x != nil {
		return x.Scale_2DCentered
	}
	return nil
}

func (x *CMsgPushAAndTContext) GetRotate_2DCentered() *CMsgRotate2D {
	if x != nil {
		return x.Rotate_2DCentered
	}
	return nil
}

func (x *CMsgPushAAndTContext) GetTextShadow() *CMsgTextShadow {
	if x != nil {
		return x.TextShadow
	}
	return nil
}

func (x *CMsgPushAAndTContext) GetClip() *CMsgClip {
	if x != nil {
		return x.Clip
	}
	return nil
}

func (x *CMsgPushAAndTContext) GetSuppressClipToBounds() bool {
	if x != nil && x.SuppressClipToBounds != nil {
		return *x.SuppressClipToBounds
	}
	return false
}

func (x *CMsgPushAAndTContext) GetNeedsFullRepaint() int32 {
	if x != nil && x.NeedsFullRepaint != nil {
		return *x.NeedsFullRepaint
	}
	return 0
}

func (x *CMsgPushAAndTContext) GetNeedsIntermediateTexture() bool {
	if x != nil && x.NeedsIntermediateTexture != nil {
		return *x.NeedsIntermediateTexture
	}
	return false
}

func (x *CMsgPushAAndTContext) GetClipAfterTransform() bool {
	if x != nil && x.ClipAfterTransform != nil {
		return *x.ClipAfterTransform
	}
	return false
}

func (x *CMsgPushAAndTContext) GetWantsHitTest() bool {
	if x != nil && x.WantsHitTest != nil {
		return *x.WantsHitTest
	}
	return false
}

func (x *CMsgPushAAndTContext) GetWantsHitTestChildren() bool {
	if x != nil && x.WantsHitTestChildren != nil {
		return *x.WantsHitTestChildren
	}
	return false
}

func (x *CMsgPushAAndTContext) GetMixBlendMode() uint32 {
	if x != nil && x.MixBlendMode != nil {
		return *x.MixBlendMode
	}
	return 0
}

func (x *CMsgPushAAndTContext) GetOpaqueBackground() bool {
	if x != nil && x.OpaqueBackground != nil {
		return *x.OpaqueBackground
	}
	return false
}

func (x *CMsgPushAAndTContext) GetChildPanelCount() uint32 {
	if x != nil && x.ChildPanelCount != nil {
		return *x.ChildPanelCount
	}
	return 0
}

func (x *CMsgPushAAndTContext) GetWantsScreenspaceQuadOutput() bool {
	if x != nil && x.WantsScreenspaceQuadOutput != nil {
		return *x.WantsScreenspaceQuadOutput
	}
	return false
}

func (x *CMsgPushAAndTContext) GetMotionBlur() *CMsgMotionBlur {
	if x != nil {
		return x.MotionBlur
	}
	return nil
}

func (x *CMsgPushAAndTContext) GetCompositionLayerTextureName() string {
	if x != nil && x.CompositionLayerTextureName != nil {
		return *x.CompositionLayerTextureName
	}
	return ""
}

type CMsgPopAAndTContext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContextId *uint64 `protobuf:"varint,1,opt,name=context_id,json=contextId" json:"context_id,omitempty"`
}

func (x *CMsgPopAAndTContext) Reset() {
	*x = CMsgPopAAndTContext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgPopAAndTContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgPopAAndTContext) ProtoMessage() {}

func (x *CMsgPopAAndTContext) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgPopAAndTContext.ProtoReflect.Descriptor instead.
func (*CMsgPopAAndTContext) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{58}
}

func (x *CMsgPopAAndTContext) GetContextId() uint64 {
	if x != nil && x.ContextId != nil {
		return *x.ContextId
	}
	return 0
}

type CMsgBeginPaintBackground struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CMsgBeginPaintBackground) Reset() {
	*x = CMsgBeginPaintBackground{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgBeginPaintBackground) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBeginPaintBackground) ProtoMessage() {}

func (x *CMsgBeginPaintBackground) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBeginPaintBackground.ProtoReflect.Descriptor instead.
func (*CMsgBeginPaintBackground) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{59}
}

type CMsgEndPaintBackground struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CMsgEndPaintBackground) Reset() {
	*x = CMsgEndPaintBackground{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgEndPaintBackground) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgEndPaintBackground) ProtoMessage() {}

func (x *CMsgEndPaintBackground) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgEndPaintBackground.ProtoReflect.Descriptor instead.
func (*CMsgEndPaintBackground) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{60}
}

type CMsgBeginPaintLast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CMsgBeginPaintLast) Reset() {
	*x = CMsgBeginPaintLast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgBeginPaintLast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBeginPaintLast) ProtoMessage() {}

func (x *CMsgBeginPaintLast) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBeginPaintLast.ProtoReflect.Descriptor instead.
func (*CMsgBeginPaintLast) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{61}
}

type CMsgEndPaintLast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CMsgEndPaintLast) Reset() {
	*x = CMsgEndPaintLast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgEndPaintLast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgEndPaintLast) ProtoMessage() {}

func (x *CMsgEndPaintLast) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgEndPaintLast.ProtoReflect.Descriptor instead.
func (*CMsgEndPaintLast) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{62}
}

type CMsgDrawFilledRect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopLeft             *CMsgPoint               `protobuf:"bytes,1,opt,name=top_left,json=topLeft" json:"top_left,omitempty"`
	BottomRight         *CMsgPoint               `protobuf:"bytes,2,opt,name=bottom_right,json=bottomRight" json:"bottom_right,omitempty"`
	FillBrushCollection *CMsgFillBrushCollection `protobuf:"bytes,3,opt,name=fill_brush_collection,json=fillBrushCollection" json:"fill_brush_collection,omitempty"`
	Antialiasing        *uint32                  `protobuf:"varint,4,opt,name=antialiasing" json:"antialiasing,omitempty"`
}

func (x *CMsgDrawFilledRect) Reset() {
	*x = CMsgDrawFilledRect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgDrawFilledRect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgDrawFilledRect) ProtoMessage() {}

func (x *CMsgDrawFilledRect) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgDrawFilledRect.ProtoReflect.Descriptor instead.
func (*CMsgDrawFilledRect) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{63}
}

func (x *CMsgDrawFilledRect) GetTopLeft() *CMsgPoint {
	if x != nil {
		return x.TopLeft
	}
	return nil
}

func (x *CMsgDrawFilledRect) GetBottomRight() *CMsgPoint {
	if x != nil {
		return x.BottomRight
	}
	return nil
}

func (x *CMsgDrawFilledRect) GetFillBrushCollection() *CMsgFillBrushCollection {
	if x != nil {
		return x.FillBrushCollection
	}
	return nil
}

func (x *CMsgDrawFilledRect) GetAntialiasing() uint32 {
	if x != nil && x.Antialiasing != nil {
		return *x.Antialiasing
	}
	return 0
}

type CMsgRenderFilledRect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopLeft             *CMsgPoint                     `protobuf:"bytes,1,opt,name=top_left,json=topLeft" json:"top_left,omitempty"`
	BottomRight         *CMsgPoint                     `protobuf:"bytes,2,opt,name=bottom_right,json=bottomRight" json:"bottom_right,omitempty"`
	FillBrushCollection *CMsgRenderFillBrushCollection `protobuf:"bytes,3,opt,name=fill_brush_collection,json=fillBrushCollection" json:"fill_brush_collection,omitempty"`
	Antialiasing        *uint32                        `protobuf:"varint,4,opt,name=antialiasing" json:"antialiasing,omitempty"`
}

func (x *CMsgRenderFilledRect) Reset() {
	*x = CMsgRenderFilledRect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgRenderFilledRect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRenderFilledRect) ProtoMessage() {}

func (x *CMsgRenderFilledRect) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRenderFilledRect.ProtoReflect.Descriptor instead.
func (*CMsgRenderFilledRect) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{64}
}

func (x *CMsgRenderFilledRect) GetTopLeft() *CMsgPoint {
	if x != nil {
		return x.TopLeft
	}
	return nil
}

func (x *CMsgRenderFilledRect) GetBottomRight() *CMsgPoint {
	if x != nil {
		return x.BottomRight
	}
	return nil
}

func (x *CMsgRenderFilledRect) GetFillBrushCollection() *CMsgRenderFillBrushCollection {
	if x != nil {
		return x.FillBrushCollection
	}
	return nil
}

func (x *CMsgRenderFilledRect) GetAntialiasing() uint32 {
	if x != nil && x.Antialiasing != nil {
		return *x.Antialiasing
	}
	return 0
}

type CMsgDrawTexturedRect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopLeft            *CMsgPoint   `protobuf:"bytes,1,opt,name=top_left,json=topLeft" json:"top_left,omitempty"`
	BottomRight        *CMsgPoint   `protobuf:"bytes,2,opt,name=bottom_right,json=bottomRight" json:"bottom_right,omitempty"`
	TextureId          *uint32      `protobuf:"varint,3,opt,name=texture_id,json=textureId" json:"texture_id,omitempty"`
	TextureTopLeft     *CMsgPoint   `protobuf:"bytes,4,opt,name=texture_top_left,json=textureTopLeft" json:"texture_top_left,omitempty"`
	TextureBottomRight *CMsgPoint   `protobuf:"bytes,5,opt,name=texture_bottom_right,json=textureBottomRight" json:"texture_bottom_right,omitempty"`
	TextureSerial      *int32       `protobuf:"varint,6,opt,name=texture_serial,json=textureSerial,def=0" json:"texture_serial,omitempty"`
	TextureSampleMode  *uint32      `protobuf:"varint,7,opt,name=texture_sample_mode,json=textureSampleMode,def=0" json:"texture_sample_mode,omitempty"`
	TextureOpacity     *CMsgOpacity `protobuf:"bytes,8,opt,name=texture_opacity,json=textureOpacity" json:"texture_opacity,omitempty"`
}

// Default values for CMsgDrawTexturedRect fields.
const (
	Default_CMsgDrawTexturedRect_TextureSerial     = int32(0)
	Default_CMsgDrawTexturedRect_TextureSampleMode = uint32(0)
)

func (x *CMsgDrawTexturedRect) Reset() {
	*x = CMsgDrawTexturedRect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgDrawTexturedRect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgDrawTexturedRect) ProtoMessage() {}

func (x *CMsgDrawTexturedRect) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgDrawTexturedRect.ProtoReflect.Descriptor instead.
func (*CMsgDrawTexturedRect) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{65}
}

func (x *CMsgDrawTexturedRect) GetTopLeft() *CMsgPoint {
	if x != nil {
		return x.TopLeft
	}
	return nil
}

func (x *CMsgDrawTexturedRect) GetBottomRight() *CMsgPoint {
	if x != nil {
		return x.BottomRight
	}
	return nil
}

func (x *CMsgDrawTexturedRect) GetTextureId() uint32 {
	if x != nil && x.TextureId != nil {
		return *x.TextureId
	}
	return 0
}

func (x *CMsgDrawTexturedRect) GetTextureTopLeft() *CMsgPoint {
	if x != nil {
		return x.TextureTopLeft
	}
	return nil
}

func (x *CMsgDrawTexturedRect) GetTextureBottomRight() *CMsgPoint {
	if x != nil {
		return x.TextureBottomRight
	}
	return nil
}

func (x *CMsgDrawTexturedRect) GetTextureSerial() int32 {
	if x != nil && x.TextureSerial != nil {
		return *x.TextureSerial
	}
	return Default_CMsgDrawTexturedRect_TextureSerial
}

func (x *CMsgDrawTexturedRect) GetTextureSampleMode() uint32 {
	if x != nil && x.TextureSampleMode != nil {
		return *x.TextureSampleMode
	}
	return Default_CMsgDrawTexturedRect_TextureSampleMode
}

func (x *CMsgDrawTexturedRect) GetTextureOpacity() *CMsgOpacity {
	if x != nil {
		return x.TextureOpacity
	}
	return nil
}

type CMsgRenderTexturedRect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopLeft            *CMsgPoint `protobuf:"bytes,1,opt,name=top_left,json=topLeft" json:"top_left,omitempty"`
	BottomRight        *CMsgPoint `protobuf:"bytes,2,opt,name=bottom_right,json=bottomRight" json:"bottom_right,omitempty"`
	TextureId          *uint32    `protobuf:"varint,3,opt,name=texture_id,json=textureId" json:"texture_id,omitempty"`
	TextureTopLeft     *CMsgPoint `protobuf:"bytes,4,opt,name=texture_top_left,json=textureTopLeft" json:"texture_top_left,omitempty"`
	TextureBottomRight *CMsgPoint `protobuf:"bytes,5,opt,name=texture_bottom_right,json=textureBottomRight" json:"texture_bottom_right,omitempty"`
	TextureSerial      *int32     `protobuf:"varint,6,opt,name=texture_serial,json=textureSerial,def=0" json:"texture_serial,omitempty"`
	TextureSampleMode  *uint32    `protobuf:"varint,7,opt,name=texture_sample_mode,json=textureSampleMode,def=0" json:"texture_sample_mode,omitempty"`
	TextureOpacity     *float32   `protobuf:"fixed32,8,opt,name=texture_opacity,json=textureOpacity,def=1" json:"texture_opacity,omitempty"`
}

// Default values for CMsgRenderTexturedRect fields.
const (
	Default_CMsgRenderTexturedRect_TextureSerial     = int32(0)
	Default_CMsgRenderTexturedRect_TextureSampleMode = uint32(0)
	Default_CMsgRenderTexturedRect_TextureOpacity    = float32(1)
)

func (x *CMsgRenderTexturedRect) Reset() {
	*x = CMsgRenderTexturedRect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgRenderTexturedRect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRenderTexturedRect) ProtoMessage() {}

func (x *CMsgRenderTexturedRect) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRenderTexturedRect.ProtoReflect.Descriptor instead.
func (*CMsgRenderTexturedRect) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{66}
}

func (x *CMsgRenderTexturedRect) GetTopLeft() *CMsgPoint {
	if x != nil {
		return x.TopLeft
	}
	return nil
}

func (x *CMsgRenderTexturedRect) GetBottomRight() *CMsgPoint {
	if x != nil {
		return x.BottomRight
	}
	return nil
}

func (x *CMsgRenderTexturedRect) GetTextureId() uint32 {
	if x != nil && x.TextureId != nil {
		return *x.TextureId
	}
	return 0
}

func (x *CMsgRenderTexturedRect) GetTextureTopLeft() *CMsgPoint {
	if x != nil {
		return x.TextureTopLeft
	}
	return nil
}

func (x *CMsgRenderTexturedRect) GetTextureBottomRight() *CMsgPoint {
	if x != nil {
		return x.TextureBottomRight
	}
	return nil
}

func (x *CMsgRenderTexturedRect) GetTextureSerial() int32 {
	if x != nil && x.TextureSerial != nil {
		return *x.TextureSerial
	}
	return Default_CMsgRenderTexturedRect_TextureSerial
}

func (x *CMsgRenderTexturedRect) GetTextureSampleMode() uint32 {
	if x != nil && x.TextureSampleMode != nil {
		return *x.TextureSampleMode
	}
	return Default_CMsgRenderTexturedRect_TextureSampleMode
}

func (x *CMsgRenderTexturedRect) GetTextureOpacity() float32 {
	if x != nil && x.TextureOpacity != nil {
		return *x.TextureOpacity
	}
	return Default_CMsgRenderTexturedRect_TextureOpacity
}

type CMsgLockTexture struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TextureId     *uint32 `protobuf:"varint,1,opt,name=texture_id,json=textureId" json:"texture_id,omitempty"`
	TextureSerial *int32  `protobuf:"varint,2,opt,name=texture_serial,json=textureSerial,def=0" json:"texture_serial,omitempty"`
}

// Default values for CMsgLockTexture fields.
const (
	Default_CMsgLockTexture_TextureSerial = int32(0)
)

func (x *CMsgLockTexture) Reset() {
	*x = CMsgLockTexture{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgLockTexture) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgLockTexture) ProtoMessage() {}

func (x *CMsgLockTexture) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgLockTexture.ProtoReflect.Descriptor instead.
func (*CMsgLockTexture) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{67}
}

func (x *CMsgLockTexture) GetTextureId() uint32 {
	if x != nil && x.TextureId != nil {
		return *x.TextureId
	}
	return 0
}

func (x *CMsgLockTexture) GetTextureSerial() int32 {
	if x != nil && x.TextureSerial != nil {
		return *x.TextureSerial
	}
	return Default_CMsgLockTexture_TextureSerial
}

type CMsgTextInlineObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width  *float32 `protobuf:"fixed32,1,opt,name=width" json:"width,omitempty"`
	Height *float32 `protobuf:"fixed32,2,opt,name=height" json:"height,omitempty"`
}

func (x *CMsgTextInlineObject) Reset() {
	*x = CMsgTextInlineObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgTextInlineObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgTextInlineObject) ProtoMessage() {}

func (x *CMsgTextInlineObject) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgTextInlineObject.ProtoReflect.Descriptor instead.
func (*CMsgTextInlineObject) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{68}
}

func (x *CMsgTextInlineObject) GetWidth() float32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *CMsgTextInlineObject) GetHeight() float32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

type CMsgTextFormat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FontName            *string                  `protobuf:"bytes,1,opt,name=font_name,json=fontName" json:"font_name,omitempty"`
	FontSize            *float64                 `protobuf:"fixed64,2,opt,name=font_size,json=fontSize" json:"font_size,omitempty"`
	FontWeight          *int32                   `protobuf:"varint,3,opt,name=font_weight,json=fontWeight,def=-1" json:"font_weight,omitempty"`
	FontStyle           *int32                   `protobuf:"varint,4,opt,name=font_style,json=fontStyle,def=-1" json:"font_style,omitempty"`
	Underline           *bool                    `protobuf:"varint,5,opt,name=underline" json:"underline,omitempty"`
	Strikethrough       *bool                    `protobuf:"varint,6,opt,name=strikethrough" json:"strikethrough,omitempty"`
	FillBrushCollection *CMsgFillBrushCollection `protobuf:"bytes,7,opt,name=fill_brush_collection,json=fillBrushCollection" json:"fill_brush_collection,omitempty"`
	LetterSpacing       *int32                   `protobuf:"varint,8,opt,name=letter_spacing,json=letterSpacing,def=0" json:"letter_spacing,omitempty"`
	InlineObject        *CMsgTextInlineObject    `protobuf:"bytes,9,opt,name=inline_object,json=inlineObject" json:"inline_object,omitempty"`
}

// Default values for CMsgTextFormat fields.
const (
	Default_CMsgTextFormat_FontWeight    = int32(-1)
	Default_CMsgTextFormat_FontStyle     = int32(-1)
	Default_CMsgTextFormat_LetterSpacing = int32(0)
)

func (x *CMsgTextFormat) Reset() {
	*x = CMsgTextFormat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgTextFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgTextFormat) ProtoMessage() {}

func (x *CMsgTextFormat) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgTextFormat.ProtoReflect.Descriptor instead.
func (*CMsgTextFormat) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{69}
}

func (x *CMsgTextFormat) GetFontName() string {
	if x != nil && x.FontName != nil {
		return *x.FontName
	}
	return ""
}

func (x *CMsgTextFormat) GetFontSize() float64 {
	if x != nil && x.FontSize != nil {
		return *x.FontSize
	}
	return 0
}

func (x *CMsgTextFormat) GetFontWeight() int32 {
	if x != nil && x.FontWeight != nil {
		return *x.FontWeight
	}
	return Default_CMsgTextFormat_FontWeight
}

func (x *CMsgTextFormat) GetFontStyle() int32 {
	if x != nil && x.FontStyle != nil {
		return *x.FontStyle
	}
	return Default_CMsgTextFormat_FontStyle
}

func (x *CMsgTextFormat) GetUnderline() bool {
	if x != nil && x.Underline != nil {
		return *x.Underline
	}
	return false
}

func (x *CMsgTextFormat) GetStrikethrough() bool {
	if x != nil && x.Strikethrough != nil {
		return *x.Strikethrough
	}
	return false
}

func (x *CMsgTextFormat) GetFillBrushCollection() *CMsgFillBrushCollection {
	if x != nil {
		return x.FillBrushCollection
	}
	return nil
}

func (x *CMsgTextFormat) GetLetterSpacing() int32 {
	if x != nil && x.LetterSpacing != nil {
		return *x.LetterSpacing
	}
	return Default_CMsgTextFormat_LetterSpacing
}

func (x *CMsgTextFormat) GetInlineObject() *CMsgTextInlineObject {
	if x != nil {
		return x.InlineObject
	}
	return nil
}

type CMsgTextRangeFormat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartIndex *uint32         `protobuf:"varint,1,opt,name=start_index,json=startIndex" json:"start_index,omitempty"`
	EndIndex   *uint32         `protobuf:"varint,2,opt,name=end_index,json=endIndex" json:"end_index,omitempty"`
	Format     *CMsgTextFormat `protobuf:"bytes,3,opt,name=format" json:"format,omitempty"`
}

func (x *CMsgTextRangeFormat) Reset() {
	*x = CMsgTextRangeFormat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgTextRangeFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgTextRangeFormat) ProtoMessage() {}

func (x *CMsgTextRangeFormat) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgTextRangeFormat.ProtoReflect.Descriptor instead.
func (*CMsgTextRangeFormat) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{70}
}

func (x *CMsgTextRangeFormat) GetStartIndex() uint32 {
	if x != nil && x.StartIndex != nil {
		return *x.StartIndex
	}
	return 0
}

func (x *CMsgTextRangeFormat) GetEndIndex() uint32 {
	if x != nil && x.EndIndex != nil {
		return *x.EndIndex
	}
	return 0
}

func (x *CMsgTextRangeFormat) GetFormat() *CMsgTextFormat {
	if x != nil {
		return x.Format
	}
	return nil
}

type CMsgRenderTextFormat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FontName            *string                        `protobuf:"bytes,1,opt,name=font_name,json=fontName" json:"font_name,omitempty"`
	FontSize            *float64                       `protobuf:"fixed64,2,opt,name=font_size,json=fontSize" json:"font_size,omitempty"`
	FontWeight          *int32                         `protobuf:"varint,3,opt,name=font_weight,json=fontWeight,def=-1" json:"font_weight,omitempty"`
	FontStyle           *int32                         `protobuf:"varint,4,opt,name=font_style,json=fontStyle,def=-1" json:"font_style,omitempty"`
	Underline           *bool                          `protobuf:"varint,5,opt,name=underline" json:"underline,omitempty"`
	Strikethrough       *bool                          `protobuf:"varint,6,opt,name=strikethrough" json:"strikethrough,omitempty"`
	FillBrushCollection *CMsgRenderFillBrushCollection `protobuf:"bytes,7,opt,name=fill_brush_collection,json=fillBrushCollection" json:"fill_brush_collection,omitempty"`
	LetterSpacing       *int32                         `protobuf:"varint,8,opt,name=letter_spacing,json=letterSpacing,def=0" json:"letter_spacing,omitempty"`
	InlineObject        *CMsgTextInlineObject          `protobuf:"bytes,9,opt,name=inline_object,json=inlineObject" json:"inline_object,omitempty"`
}

// Default values for CMsgRenderTextFormat fields.
const (
	Default_CMsgRenderTextFormat_FontWeight    = int32(-1)
	Default_CMsgRenderTextFormat_FontStyle     = int32(-1)
	Default_CMsgRenderTextFormat_LetterSpacing = int32(0)
)

func (x *CMsgRenderTextFormat) Reset() {
	*x = CMsgRenderTextFormat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgRenderTextFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRenderTextFormat) ProtoMessage() {}

func (x *CMsgRenderTextFormat) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRenderTextFormat.ProtoReflect.Descriptor instead.
func (*CMsgRenderTextFormat) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{71}
}

func (x *CMsgRenderTextFormat) GetFontName() string {
	if x != nil && x.FontName != nil {
		return *x.FontName
	}
	return ""
}

func (x *CMsgRenderTextFormat) GetFontSize() float64 {
	if x != nil && x.FontSize != nil {
		return *x.FontSize
	}
	return 0
}

func (x *CMsgRenderTextFormat) GetFontWeight() int32 {
	if x != nil && x.FontWeight != nil {
		return *x.FontWeight
	}
	return Default_CMsgRenderTextFormat_FontWeight
}

func (x *CMsgRenderTextFormat) GetFontStyle() int32 {
	if x != nil && x.FontStyle != nil {
		return *x.FontStyle
	}
	return Default_CMsgRenderTextFormat_FontStyle
}

func (x *CMsgRenderTextFormat) GetUnderline() bool {
	if x != nil && x.Underline != nil {
		return *x.Underline
	}
	return false
}

func (x *CMsgRenderTextFormat) GetStrikethrough() bool {
	if x != nil && x.Strikethrough != nil {
		return *x.Strikethrough
	}
	return false
}

func (x *CMsgRenderTextFormat) GetFillBrushCollection() *CMsgRenderFillBrushCollection {
	if x != nil {
		return x.FillBrushCollection
	}
	return nil
}

func (x *CMsgRenderTextFormat) GetLetterSpacing() int32 {
	if x != nil && x.LetterSpacing != nil {
		return *x.LetterSpacing
	}
	return Default_CMsgRenderTextFormat_LetterSpacing
}

func (x *CMsgRenderTextFormat) GetInlineObject() *CMsgTextInlineObject {
	if x != nil {
		return x.InlineObject
	}
	return nil
}

type CMsgRenderTextRangeFormat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartIndex *uint32               `protobuf:"varint,1,opt,name=start_index,json=startIndex" json:"start_index,omitempty"`
	EndIndex   *uint32               `protobuf:"varint,2,opt,name=end_index,json=endIndex" json:"end_index,omitempty"`
	Format     *CMsgRenderTextFormat `protobuf:"bytes,3,opt,name=format" json:"format,omitempty"`
}

func (x *CMsgRenderTextRangeFormat) Reset() {
	*x = CMsgRenderTextRangeFormat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgRenderTextRangeFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRenderTextRangeFormat) ProtoMessage() {}

func (x *CMsgRenderTextRangeFormat) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRenderTextRangeFormat.ProtoReflect.Descriptor instead.
func (*CMsgRenderTextRangeFormat) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{72}
}

func (x *CMsgRenderTextRangeFormat) GetStartIndex() uint32 {
	if x != nil && x.StartIndex != nil {
		return *x.StartIndex
	}
	return 0
}

func (x *CMsgRenderTextRangeFormat) GetEndIndex() uint32 {
	if x != nil && x.EndIndex != nil {
		return *x.EndIndex
	}
	return 0
}

func (x *CMsgRenderTextRangeFormat) GetFormat() *CMsgRenderTextFormat {
	if x != nil {
		return x.Format
	}
	return nil
}

type CMsgDrawTextRegion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RawText       []byte                 `protobuf:"bytes,11,opt,name=raw_text,json=rawText" json:"raw_text,omitempty"`
	TextChars     *int32                 `protobuf:"varint,12,opt,name=text_chars,json=textChars" json:"text_chars,omitempty"`
	TextEncoding  *int32                 `protobuf:"varint,13,opt,name=text_encoding,json=textEncoding" json:"text_encoding,omitempty"`
	DefaultFormat *CMsgTextFormat        `protobuf:"bytes,3,opt,name=default_format,json=defaultFormat" json:"default_format,omitempty"`
	TextAlign     *uint32                `protobuf:"varint,4,opt,name=text_align,json=textAlign" json:"text_align,omitempty"`
	LineHeight    *uint32                `protobuf:"varint,5,opt,name=line_height,json=lineHeight" json:"line_height,omitempty"`
	TopLeft       *CMsgPoint             `protobuf:"bytes,6,opt,name=top_left,json=topLeft" json:"top_left,omitempty"`
	BottomRight   *CMsgPoint             `protobuf:"bytes,7,opt,name=bottom_right,json=bottomRight" json:"bottom_right,omitempty"`
	Wrapping      *bool                  `protobuf:"varint,8,opt,name=wrapping" json:"wrapping,omitempty"`
	Ellipsis      *bool                  `protobuf:"varint,9,opt,name=ellipsis" json:"ellipsis,omitempty"`
	RangeFormats  []*CMsgTextRangeFormat `protobuf:"bytes,10,rep,name=range_formats,json=rangeFormats" json:"range_formats,omitempty"`
}

func (x *CMsgDrawTextRegion) Reset() {
	*x = CMsgDrawTextRegion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgDrawTextRegion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgDrawTextRegion) ProtoMessage() {}

func (x *CMsgDrawTextRegion) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgDrawTextRegion.ProtoReflect.Descriptor instead.
func (*CMsgDrawTextRegion) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{73}
}

func (x *CMsgDrawTextRegion) GetRawText() []byte {
	if x != nil {
		return x.RawText
	}
	return nil
}

func (x *CMsgDrawTextRegion) GetTextChars() int32 {
	if x != nil && x.TextChars != nil {
		return *x.TextChars
	}
	return 0
}

func (x *CMsgDrawTextRegion) GetTextEncoding() int32 {
	if x != nil && x.TextEncoding != nil {
		return *x.TextEncoding
	}
	return 0
}

func (x *CMsgDrawTextRegion) GetDefaultFormat() *CMsgTextFormat {
	if x != nil {
		return x.DefaultFormat
	}
	return nil
}

func (x *CMsgDrawTextRegion) GetTextAlign() uint32 {
	if x != nil && x.TextAlign != nil {
		return *x.TextAlign
	}
	return 0
}

func (x *CMsgDrawTextRegion) GetLineHeight() uint32 {
	if x != nil && x.LineHeight != nil {
		return *x.LineHeight
	}
	return 0
}

func (x *CMsgDrawTextRegion) GetTopLeft() *CMsgPoint {
	if x != nil {
		return x.TopLeft
	}
	return nil
}

func (x *CMsgDrawTextRegion) GetBottomRight() *CMsgPoint {
	if x != nil {
		return x.BottomRight
	}
	return nil
}

func (x *CMsgDrawTextRegion) GetWrapping() bool {
	if x != nil && x.Wrapping != nil {
		return *x.Wrapping
	}
	return false
}

func (x *CMsgDrawTextRegion) GetEllipsis() bool {
	if x != nil && x.Ellipsis != nil {
		return *x.Ellipsis
	}
	return false
}

func (x *CMsgDrawTextRegion) GetRangeFormats() []*CMsgTextRangeFormat {
	if x != nil {
		return x.RangeFormats
	}
	return nil
}

type CMsgRenderTextRegion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RawText       []byte                       `protobuf:"bytes,12,opt,name=raw_text,json=rawText" json:"raw_text,omitempty"`
	TextChars     *int32                       `protobuf:"varint,13,opt,name=text_chars,json=textChars" json:"text_chars,omitempty"`
	TextEncoding  *int32                       `protobuf:"varint,14,opt,name=text_encoding,json=textEncoding" json:"text_encoding,omitempty"`
	DefaultFormat *CMsgRenderTextFormat        `protobuf:"bytes,3,opt,name=default_format,json=defaultFormat" json:"default_format,omitempty"`
	TextAlign     *uint32                      `protobuf:"varint,4,opt,name=text_align,json=textAlign" json:"text_align,omitempty"`
	LineHeight    *uint32                      `protobuf:"varint,5,opt,name=line_height,json=lineHeight" json:"line_height,omitempty"`
	TopLeft       *CMsgPoint                   `protobuf:"bytes,6,opt,name=top_left,json=topLeft" json:"top_left,omitempty"`
	BottomRight   *CMsgPoint                   `protobuf:"bytes,7,opt,name=bottom_right,json=bottomRight" json:"bottom_right,omitempty"`
	Wrapping      *bool                        `protobuf:"varint,8,opt,name=wrapping" json:"wrapping,omitempty"`
	Ellipsis      *bool                        `protobuf:"varint,9,opt,name=ellipsis" json:"ellipsis,omitempty"`
	RangeFormats  []*CMsgRenderTextRangeFormat `protobuf:"bytes,10,rep,name=range_formats,json=rangeFormats" json:"range_formats,omitempty"`
	TextShadow    *CTextShadowData             `protobuf:"bytes,11,opt,name=text_shadow,json=textShadow" json:"text_shadow,omitempty"`
}

func (x *CMsgRenderTextRegion) Reset() {
	*x = CMsgRenderTextRegion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgRenderTextRegion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRenderTextRegion) ProtoMessage() {}

func (x *CMsgRenderTextRegion) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRenderTextRegion.ProtoReflect.Descriptor instead.
func (*CMsgRenderTextRegion) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{74}
}

func (x *CMsgRenderTextRegion) GetRawText() []byte {
	if x != nil {
		return x.RawText
	}
	return nil
}

func (x *CMsgRenderTextRegion) GetTextChars() int32 {
	if x != nil && x.TextChars != nil {
		return *x.TextChars
	}
	return 0
}

func (x *CMsgRenderTextRegion) GetTextEncoding() int32 {
	if x != nil && x.TextEncoding != nil {
		return *x.TextEncoding
	}
	return 0
}

func (x *CMsgRenderTextRegion) GetDefaultFormat() *CMsgRenderTextFormat {
	if x != nil {
		return x.DefaultFormat
	}
	return nil
}

func (x *CMsgRenderTextRegion) GetTextAlign() uint32 {
	if x != nil && x.TextAlign != nil {
		return *x.TextAlign
	}
	return 0
}

func (x *CMsgRenderTextRegion) GetLineHeight() uint32 {
	if x != nil && x.LineHeight != nil {
		return *x.LineHeight
	}
	return 0
}

func (x *CMsgRenderTextRegion) GetTopLeft() *CMsgPoint {
	if x != nil {
		return x.TopLeft
	}
	return nil
}

func (x *CMsgRenderTextRegion) GetBottomRight() *CMsgPoint {
	if x != nil {
		return x.BottomRight
	}
	return nil
}

func (x *CMsgRenderTextRegion) GetWrapping() bool {
	if x != nil && x.Wrapping != nil {
		return *x.Wrapping
	}
	return false
}

func (x *CMsgRenderTextRegion) GetEllipsis() bool {
	if x != nil && x.Ellipsis != nil {
		return *x.Ellipsis
	}
	return false
}

func (x *CMsgRenderTextRegion) GetRangeFormats() []*CMsgRenderTextRangeFormat {
	if x != nil {
		return x.RangeFormats
	}
	return nil
}

func (x *CMsgRenderTextRegion) GetTextShadow() *CTextShadowData {
	if x != nil {
		return x.TextShadow
	}
	return nil
}

type CMsgRequestRenderCallback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallbackObj           []byte     `protobuf:"bytes,1,opt,name=callback_obj,json=callbackObj" json:"callback_obj,omitempty"`
	TopLeft               *CMsgPoint `protobuf:"bytes,2,opt,name=top_left,json=topLeft" json:"top_left,omitempty"`
	BottomRight           *CMsgPoint `protobuf:"bytes,3,opt,name=bottom_right,json=bottomRight" json:"bottom_right,omitempty"`
	TopLeftPadding        *CMsgPoint `protobuf:"bytes,4,opt,name=top_left_padding,json=topLeftPadding" json:"top_left_padding,omitempty"`
	BottomRightPadding    *CMsgPoint `protobuf:"bytes,5,opt,name=bottom_right_padding,json=bottomRightPadding" json:"bottom_right_padding,omitempty"`
	NeedsRedrawEveryFrame *bool      `protobuf:"varint,6,opt,name=needs_redraw_every_frame,json=needsRedrawEveryFrame" json:"needs_redraw_every_frame,omitempty"`
}

func (x *CMsgRequestRenderCallback) Reset() {
	*x = CMsgRequestRenderCallback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgRequestRenderCallback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRequestRenderCallback) ProtoMessage() {}

func (x *CMsgRequestRenderCallback) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRequestRenderCallback.ProtoReflect.Descriptor instead.
func (*CMsgRequestRenderCallback) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{75}
}

func (x *CMsgRequestRenderCallback) GetCallbackObj() []byte {
	if x != nil {
		return x.CallbackObj
	}
	return nil
}

func (x *CMsgRequestRenderCallback) GetTopLeft() *CMsgPoint {
	if x != nil {
		return x.TopLeft
	}
	return nil
}

func (x *CMsgRequestRenderCallback) GetBottomRight() *CMsgPoint {
	if x != nil {
		return x.BottomRight
	}
	return nil
}

func (x *CMsgRequestRenderCallback) GetTopLeftPadding() *CMsgPoint {
	if x != nil {
		return x.TopLeftPadding
	}
	return nil
}

func (x *CMsgRequestRenderCallback) GetBottomRightPadding() *CMsgPoint {
	if x != nil {
		return x.BottomRightPadding
	}
	return nil
}

func (x *CMsgRequestRenderCallback) GetNeedsRedrawEveryFrame() bool {
	if x != nil && x.NeedsRedrawEveryFrame != nil {
		return *x.NeedsRedrawEveryFrame
	}
	return false
}

type CRadiusData_CCornerRadius struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Horizontal *float64 `protobuf:"fixed64,1,opt,name=horizontal" json:"horizontal,omitempty"`
	Vertical   *float64 `protobuf:"fixed64,2,opt,name=vertical" json:"vertical,omitempty"`
}

func (x *CRadiusData_CCornerRadius) Reset() {
	*x = CRadiusData_CCornerRadius{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CRadiusData_CCornerRadius) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CRadiusData_CCornerRadius) ProtoMessage() {}

func (x *CRadiusData_CCornerRadius) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CRadiusData_CCornerRadius.ProtoReflect.Descriptor instead.
func (*CRadiusData_CCornerRadius) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{8, 0}
}

func (x *CRadiusData_CCornerRadius) GetHorizontal() float64 {
	if x != nil && x.Horizontal != nil {
		return *x.Horizontal
	}
	return 0
}

func (x *CRadiusData_CCornerRadius) GetVertical() float64 {
	if x != nil && x.Vertical != nil {
		return *x.Vertical
	}
	return 0
}

type CBorderData_CBorderSide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Style *uint32  `protobuf:"varint,1,opt,name=style" json:"style,omitempty"`
	Width *float64 `protobuf:"fixed64,2,opt,name=width" json:"width,omitempty"`
	Color *uint32  `protobuf:"varint,3,opt,name=color" json:"color,omitempty"`
}

func (x *CBorderData_CBorderSide) Reset() {
	*x = CBorderData_CBorderSide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CBorderData_CBorderSide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CBorderData_CBorderSide) ProtoMessage() {}

func (x *CBorderData_CBorderSide) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CBorderData_CBorderSide.ProtoReflect.Descriptor instead.
func (*CBorderData_CBorderSide) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{9, 0}
}

func (x *CBorderData_CBorderSide) GetStyle() uint32 {
	if x != nil && x.Style != nil {
		return *x.Style
	}
	return 0
}

func (x *CBorderData_CBorderSide) GetWidth() float64 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *CBorderData_CBorderSide) GetColor() uint32 {
	if x != nil && x.Color != nil {
		return *x.Color
	}
	return 0
}

type CMsgPointWithTransition_AnimationFrameData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *CMsgPoint `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (x *CMsgPointWithTransition_AnimationFrameData) Reset() {
	*x = CMsgPointWithTransition_AnimationFrameData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgPointWithTransition_AnimationFrameData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgPointWithTransition_AnimationFrameData) ProtoMessage() {}

func (x *CMsgPointWithTransition_AnimationFrameData) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgPointWithTransition_AnimationFrameData.ProtoReflect.Descriptor instead.
func (*CMsgPointWithTransition_AnimationFrameData) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{20, 0}
}

func (x *CMsgPointWithTransition_AnimationFrameData) GetData() *CMsgPoint {
	if x != nil {
		return x.Data
	}
	return nil
}

type CMsgColor_AnimationFrameData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *uint32 `protobuf:"varint,1,opt,name=data" json:"data,omitempty"`
}

func (x *CMsgColor_AnimationFrameData) Reset() {
	*x = CMsgColor_AnimationFrameData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgColor_AnimationFrameData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgColor_AnimationFrameData) ProtoMessage() {}

func (x *CMsgColor_AnimationFrameData) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgColor_AnimationFrameData.ProtoReflect.Descriptor instead.
func (*CMsgColor_AnimationFrameData) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{21, 0}
}

func (x *CMsgColor_AnimationFrameData) GetData() uint32 {
	if x != nil && x.Data != nil {
		return *x.Data
	}
	return 0
}

type CMsgFillBrushCollection_AnimationFrameData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*CMsgFillBrush `protobuf:"bytes,1,rep,name=data" json:"data,omitempty"`
}

func (x *CMsgFillBrushCollection_AnimationFrameData) Reset() {
	*x = CMsgFillBrushCollection_AnimationFrameData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgFillBrushCollection_AnimationFrameData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgFillBrushCollection_AnimationFrameData) ProtoMessage() {}

func (x *CMsgFillBrushCollection_AnimationFrameData) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgFillBrushCollection_AnimationFrameData.ProtoReflect.Descriptor instead.
func (*CMsgFillBrushCollection_AnimationFrameData) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{28, 0}
}

func (x *CMsgFillBrushCollection_AnimationFrameData) GetData() []*CMsgFillBrush {
	if x != nil {
		return x.Data
	}
	return nil
}

type CMsgPanelPosition_AnimationFrameData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *CMsgPoint `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (x *CMsgPanelPosition_AnimationFrameData) Reset() {
	*x = CMsgPanelPosition_AnimationFrameData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgPanelPosition_AnimationFrameData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgPanelPosition_AnimationFrameData) ProtoMessage() {}

func (x *CMsgPanelPosition_AnimationFrameData) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgPanelPosition_AnimationFrameData.ProtoReflect.Descriptor instead.
func (*CMsgPanelPosition_AnimationFrameData) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{30, 0}
}

func (x *CMsgPanelPosition_AnimationFrameData) GetData() *CMsgPoint {
	if x != nil {
		return x.Data
	}
	return nil
}

type CMsgOpacity_AnimationFrameData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *float64 `protobuf:"fixed64,1,opt,name=data" json:"data,omitempty"`
}

func (x *CMsgOpacity_AnimationFrameData) Reset() {
	*x = CMsgOpacity_AnimationFrameData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgOpacity_AnimationFrameData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgOpacity_AnimationFrameData) ProtoMessage() {}

func (x *CMsgOpacity_AnimationFrameData) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgOpacity_AnimationFrameData.ProtoReflect.Descriptor instead.
func (*CMsgOpacity_AnimationFrameData) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{31, 0}
}

func (x *CMsgOpacity_AnimationFrameData) GetData() float64 {
	if x != nil && x.Data != nil {
		return *x.Data
	}
	return 0
}

type CMsgRotate2D_AnimationFrameData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *float64 `protobuf:"fixed64,1,opt,name=data" json:"data,omitempty"`
}

func (x *CMsgRotate2D_AnimationFrameData) Reset() {
	*x = CMsgRotate2D_AnimationFrameData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgRotate2D_AnimationFrameData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRotate2D_AnimationFrameData) ProtoMessage() {}

func (x *CMsgRotate2D_AnimationFrameData) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRotate2D_AnimationFrameData.ProtoReflect.Descriptor instead.
func (*CMsgRotate2D_AnimationFrameData) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{32, 0}
}

func (x *CMsgRotate2D_AnimationFrameData) GetData() float64 {
	if x != nil && x.Data != nil {
		return *x.Data
	}
	return 0
}

type CMsgOpacityMask_AnimationFrameData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *CMsgOpacityMaskData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (x *CMsgOpacityMask_AnimationFrameData) Reset() {
	*x = CMsgOpacityMask_AnimationFrameData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgOpacityMask_AnimationFrameData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgOpacityMask_AnimationFrameData) ProtoMessage() {}

func (x *CMsgOpacityMask_AnimationFrameData) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgOpacityMask_AnimationFrameData.ProtoReflect.Descriptor instead.
func (*CMsgOpacityMask_AnimationFrameData) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{34, 0}
}

func (x *CMsgOpacityMask_AnimationFrameData) GetData() *CMsgOpacityMaskData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CMsgHueShift_AnimationFrameData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *float64 `protobuf:"fixed64,1,opt,name=data" json:"data,omitempty"`
}

func (x *CMsgHueShift_AnimationFrameData) Reset() {
	*x = CMsgHueShift_AnimationFrameData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgHueShift_AnimationFrameData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgHueShift_AnimationFrameData) ProtoMessage() {}

func (x *CMsgHueShift_AnimationFrameData) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgHueShift_AnimationFrameData.ProtoReflect.Descriptor instead.
func (*CMsgHueShift_AnimationFrameData) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{35, 0}
}

func (x *CMsgHueShift_AnimationFrameData) GetData() float64 {
	if x != nil && x.Data != nil {
		return *x.Data
	}
	return 0
}

type CMsgSaturation_AnimationFrameData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *float64 `protobuf:"fixed64,1,opt,name=data" json:"data,omitempty"`
}

func (x *CMsgSaturation_AnimationFrameData) Reset() {
	*x = CMsgSaturation_AnimationFrameData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgSaturation_AnimationFrameData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSaturation_AnimationFrameData) ProtoMessage() {}

func (x *CMsgSaturation_AnimationFrameData) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSaturation_AnimationFrameData.ProtoReflect.Descriptor instead.
func (*CMsgSaturation_AnimationFrameData) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{36, 0}
}

func (x *CMsgSaturation_AnimationFrameData) GetData() float64 {
	if x != nil && x.Data != nil {
		return *x.Data
	}
	return 0
}

type CMsgBrightness_AnimationFrameData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *float64 `protobuf:"fixed64,1,opt,name=data" json:"data,omitempty"`
}

func (x *CMsgBrightness_AnimationFrameData) Reset() {
	*x = CMsgBrightness_AnimationFrameData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgBrightness_AnimationFrameData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBrightness_AnimationFrameData) ProtoMessage() {}

func (x *CMsgBrightness_AnimationFrameData) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBrightness_AnimationFrameData.ProtoReflect.Descriptor instead.
func (*CMsgBrightness_AnimationFrameData) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{37, 0}
}

func (x *CMsgBrightness_AnimationFrameData) GetData() float64 {
	if x != nil && x.Data != nil {
		return *x.Data
	}
	return 0
}

type CMsgContrast_AnimationFrameData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *float64 `protobuf:"fixed64,1,opt,name=data" json:"data,omitempty"`
}

func (x *CMsgContrast_AnimationFrameData) Reset() {
	*x = CMsgContrast_AnimationFrameData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgContrast_AnimationFrameData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgContrast_AnimationFrameData) ProtoMessage() {}

func (x *CMsgContrast_AnimationFrameData) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgContrast_AnimationFrameData.ProtoReflect.Descriptor instead.
func (*CMsgContrast_AnimationFrameData) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{38, 0}
}

func (x *CMsgContrast_AnimationFrameData) GetData() float64 {
	if x != nil && x.Data != nil {
		return *x.Data
	}
	return 0
}

type CMsgGaussianBlur_AnimationFrameData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *CMsgGaussianValues `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (x *CMsgGaussianBlur_AnimationFrameData) Reset() {
	*x = CMsgGaussianBlur_AnimationFrameData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgGaussianBlur_AnimationFrameData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGaussianBlur_AnimationFrameData) ProtoMessage() {}

func (x *CMsgGaussianBlur_AnimationFrameData) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGaussianBlur_AnimationFrameData.ProtoReflect.Descriptor instead.
func (*CMsgGaussianBlur_AnimationFrameData) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{40, 0}
}

func (x *CMsgGaussianBlur_AnimationFrameData) GetData() *CMsgGaussianValues {
	if x != nil {
		return x.Data
	}
	return nil
}

type CMsgMotionBlur_AnimationFrameData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *CMsgMotionBlurValues `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (x *CMsgMotionBlur_AnimationFrameData) Reset() {
	*x = CMsgMotionBlur_AnimationFrameData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgMotionBlur_AnimationFrameData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgMotionBlur_AnimationFrameData) ProtoMessage() {}

func (x *CMsgMotionBlur_AnimationFrameData) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgMotionBlur_AnimationFrameData.ProtoReflect.Descriptor instead.
func (*CMsgMotionBlur_AnimationFrameData) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{42, 0}
}

func (x *CMsgMotionBlur_AnimationFrameData) GetData() *CMsgMotionBlurValues {
	if x != nil {
		return x.Data
	}
	return nil
}

type CMsg3DTransformPerspective_AnimationFrameData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *float64 `protobuf:"fixed64,1,opt,name=data" json:"data,omitempty"`
}

func (x *CMsg3DTransformPerspective_AnimationFrameData) Reset() {
	*x = CMsg3DTransformPerspective_AnimationFrameData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsg3DTransformPerspective_AnimationFrameData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsg3DTransformPerspective_AnimationFrameData) ProtoMessage() {}

func (x *CMsg3DTransformPerspective_AnimationFrameData) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsg3DTransformPerspective_AnimationFrameData.ProtoReflect.Descriptor instead.
func (*CMsg3DTransformPerspective_AnimationFrameData) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{43, 0}
}

func (x *CMsg3DTransformPerspective_AnimationFrameData) GetData() float64 {
	if x != nil && x.Data != nil {
		return *x.Data
	}
	return 0
}

type CMsg3DTransformPerspectiveOrigin_AnimationFrameData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *CMsgPoint `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (x *CMsg3DTransformPerspectiveOrigin_AnimationFrameData) Reset() {
	*x = CMsg3DTransformPerspectiveOrigin_AnimationFrameData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsg3DTransformPerspectiveOrigin_AnimationFrameData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsg3DTransformPerspectiveOrigin_AnimationFrameData) ProtoMessage() {}

func (x *CMsg3DTransformPerspectiveOrigin_AnimationFrameData) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsg3DTransformPerspectiveOrigin_AnimationFrameData.ProtoReflect.Descriptor instead.
func (*CMsg3DTransformPerspectiveOrigin_AnimationFrameData) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{44, 0}
}

func (x *CMsg3DTransformPerspectiveOrigin_AnimationFrameData) GetData() *CMsgPoint {
	if x != nil {
		return x.Data
	}
	return nil
}

type CMsg3DTransformOrigin_AnimationFrameData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *CMsgTransformOriginData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (x *CMsg3DTransformOrigin_AnimationFrameData) Reset() {
	*x = CMsg3DTransformOrigin_AnimationFrameData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsg3DTransformOrigin_AnimationFrameData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsg3DTransformOrigin_AnimationFrameData) ProtoMessage() {}

func (x *CMsg3DTransformOrigin_AnimationFrameData) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsg3DTransformOrigin_AnimationFrameData.ProtoReflect.Descriptor instead.
func (*CMsg3DTransformOrigin_AnimationFrameData) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{46, 0}
}

func (x *CMsg3DTransformOrigin_AnimationFrameData) GetData() *CMsgTransformOriginData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CMsg3DTransformMatrix_AnimationFrameData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *CMsgMatrix4X4 `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (x *CMsg3DTransformMatrix_AnimationFrameData) Reset() {
	*x = CMsg3DTransformMatrix_AnimationFrameData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsg3DTransformMatrix_AnimationFrameData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsg3DTransformMatrix_AnimationFrameData) ProtoMessage() {}

func (x *CMsg3DTransformMatrix_AnimationFrameData) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsg3DTransformMatrix_AnimationFrameData.ProtoReflect.Descriptor instead.
func (*CMsg3DTransformMatrix_AnimationFrameData) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{47, 0}
}

func (x *CMsg3DTransformMatrix_AnimationFrameData) GetData() *CMsgMatrix4X4 {
	if x != nil {
		return x.Data
	}
	return nil
}

type CMsgBorderRadius_AnimationFrameData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *CRadiusData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (x *CMsgBorderRadius_AnimationFrameData) Reset() {
	*x = CMsgBorderRadius_AnimationFrameData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgBorderRadius_AnimationFrameData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBorderRadius_AnimationFrameData) ProtoMessage() {}

func (x *CMsgBorderRadius_AnimationFrameData) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBorderRadius_AnimationFrameData.ProtoReflect.Descriptor instead.
func (*CMsgBorderRadius_AnimationFrameData) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{48, 0}
}

func (x *CMsgBorderRadius_AnimationFrameData) GetData() *CRadiusData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CMsgBorder_AnimationFrameData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *CBorderData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (x *CMsgBorder_AnimationFrameData) Reset() {
	*x = CMsgBorder_AnimationFrameData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgBorder_AnimationFrameData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBorder_AnimationFrameData) ProtoMessage() {}

func (x *CMsgBorder_AnimationFrameData) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBorder_AnimationFrameData.ProtoReflect.Descriptor instead.
func (*CMsgBorder_AnimationFrameData) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{49, 0}
}

func (x *CMsgBorder_AnimationFrameData) GetData() *CBorderData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CMsgBoxShadow_AnimationFrameData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *CBoxShadowData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (x *CMsgBoxShadow_AnimationFrameData) Reset() {
	*x = CMsgBoxShadow_AnimationFrameData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgBoxShadow_AnimationFrameData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBoxShadow_AnimationFrameData) ProtoMessage() {}

func (x *CMsgBoxShadow_AnimationFrameData) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBoxShadow_AnimationFrameData.ProtoReflect.Descriptor instead.
func (*CMsgBoxShadow_AnimationFrameData) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{50, 0}
}

func (x *CMsgBoxShadow_AnimationFrameData) GetData() *CBoxShadowData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CMsgTextShadow_AnimationFrameData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *CTextShadowData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (x *CMsgTextShadow_AnimationFrameData) Reset() {
	*x = CMsgTextShadow_AnimationFrameData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgTextShadow_AnimationFrameData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgTextShadow_AnimationFrameData) ProtoMessage() {}

func (x *CMsgTextShadow_AnimationFrameData) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgTextShadow_AnimationFrameData.ProtoReflect.Descriptor instead.
func (*CMsgTextShadow_AnimationFrameData) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{51, 0}
}

func (x *CMsgTextShadow_AnimationFrameData) GetData() *CTextShadowData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CMsgClip_AnimationFrameData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *CMsgClipData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (x *CMsgClip_AnimationFrameData) Reset() {
	*x = CMsgClip_AnimationFrameData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_renderer_rendermessages_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CMsgClip_AnimationFrameData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClip_AnimationFrameData) ProtoMessage() {}

func (x *CMsgClip_AnimationFrameData) ProtoReflect() protoreflect.Message {
	mi := &file_renderer_rendermessages_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClip_AnimationFrameData.ProtoReflect.Descriptor instead.
func (*CMsgClip_AnimationFrameData) Descriptor() ([]byte, []int) {
	return file_renderer_rendermessages_proto_rawDescGZIP(), []int{52, 0}
}

func (x *CMsgClip_AnimationFrameData) GetData() *CMsgClipData {
	if x != nil {
		return x.Data
	}
	return nil
}

var file_renderer_rendermessages_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*CMsgAnimationFrameData)(nil),
		ExtensionType: (*CMsgPointWithTransition_AnimationFrameData)(nil),
		Field:         1012,
		Name:          "CMsgPointWithTransition.animation_frame_data",
		Tag:           "bytes,1012,opt,name=animation_frame_data",
		Filename:      "renderer/rendermessages.proto",
	},
	{
		ExtendedType:  (*CMsgAnimationFrameData)(nil),
		ExtensionType: (*CMsgColor_AnimationFrameData)(nil),
		Field:         1001,
		Name:          "CMsgColor.animation_frame_data",
		Tag:           "bytes,1001,opt,name=animation_frame_data",
		Filename:      "renderer/rendermessages.proto",
	},
	{
		ExtendedType:  (*CMsgAnimationFrameData)(nil),
		ExtensionType: (*CMsgFillBrushCollection_AnimationFrameData)(nil),
		Field:         1007,
		Name:          "CMsgFillBrushCollection.animation_frame_data",
		Tag:           "bytes,1007,opt,name=animation_frame_data",
		Filename:      "renderer/rendermessages.proto",
	},
	{
		ExtendedType:  (*CMsgAnimationFrameData)(nil),
		ExtensionType: (*CMsgPanelPosition_AnimationFrameData)(nil),
		Field:         1011,
		Name:          "CMsgPanelPosition.animation_frame_data",
		Tag:           "bytes,1011,opt,name=animation_frame_data",
		Filename:      "renderer/rendermessages.proto",
	},
	{
		ExtendedType:  (*CMsgAnimationFrameData)(nil),
		ExtensionType: (*CMsgOpacity_AnimationFrameData)(nil),
		Field:         1004,
		Name:          "CMsgOpacity.animation_frame_data",
		Tag:           "bytes,1004,opt,name=animation_frame_data",
		Filename:      "renderer/rendermessages.proto",
	},
	{
		ExtendedType:  (*CMsgAnimationFrameData)(nil),
		ExtensionType: (*CMsgRotate2D_AnimationFrameData)(nil),
		Field:         1014,
		Name:          "CMsgRotate2D.animation_frame_data",
		Tag:           "bytes,1014,opt,name=animation_frame_data",
		Filename:      "renderer/rendermessages.proto",
	},
	{
		ExtendedType:  (*CMsgAnimationFrameData)(nil),
		ExtensionType: (*CMsgOpacityMask_AnimationFrameData)(nil),
		Field:         1013,
		Name:          "CMsgOpacityMask.animation_frame_data",
		Tag:           "bytes,1013,opt,name=animation_frame_data",
		Filename:      "renderer/rendermessages.proto",
	},
	{
		ExtendedType:  (*CMsgAnimationFrameData)(nil),
		ExtensionType: (*CMsgHueShift_AnimationFrameData)(nil),
		Field:         1019,
		Name:          "CMsgHueShift.animation_frame_data",
		Tag:           "bytes,1019,opt,name=animation_frame_data",
		Filename:      "renderer/rendermessages.proto",
	},
	{
		ExtendedType:  (*CMsgAnimationFrameData)(nil),
		ExtensionType: (*CMsgSaturation_AnimationFrameData)(nil),
		Field:         1005,
		Name:          "CMsgSaturation.animation_frame_data",
		Tag:           "bytes,1005,opt,name=animation_frame_data",
		Filename:      "renderer/rendermessages.proto",
	},
	{
		ExtendedType:  (*CMsgAnimationFrameData)(nil),
		ExtensionType: (*CMsgBrightness_AnimationFrameData)(nil),
		Field:         1020,
		Name:          "CMsgBrightness.animation_frame_data",
		Tag:           "bytes,1020,opt,name=animation_frame_data",
		Filename:      "renderer/rendermessages.proto",
	},
	{
		ExtendedType:  (*CMsgAnimationFrameData)(nil),
		ExtensionType: (*CMsgContrast_AnimationFrameData)(nil),
		Field:         1021,
		Name:          "CMsgContrast.animation_frame_data",
		Tag:           "bytes,1021,opt,name=animation_frame_data",
		Filename:      "renderer/rendermessages.proto",
	},
	{
		ExtendedType:  (*CMsgAnimationFrameData)(nil),
		ExtensionType: (*CMsgGaussianBlur_AnimationFrameData)(nil),
		Field:         1008,
		Name:          "CMsgGaussianBlur.animation_frame_data",
		Tag:           "bytes,1008,opt,name=animation_frame_data",
		Filename:      "renderer/rendermessages.proto",
	},
	{
		ExtendedType:  (*CMsgAnimationFrameData)(nil),
		ExtensionType: (*CMsgMotionBlur_AnimationFrameData)(nil),
		Field:         1022,
		Name:          "CMsgMotionBlur.animation_frame_data",
		Tag:           "bytes,1022,opt,name=animation_frame_data",
		Filename:      "renderer/rendermessages.proto",
	},
	{
		ExtendedType:  (*CMsgAnimationFrameData)(nil),
		ExtensionType: (*CMsg3DTransformPerspective_AnimationFrameData)(nil),
		Field:         1003,
		Name:          "CMsg3DTransformPerspective.animation_frame_data",
		Tag:           "bytes,1003,opt,name=animation_frame_data",
		Filename:      "renderer/rendermessages.proto",
	},
	{
		ExtendedType:  (*CMsgAnimationFrameData)(nil),
		ExtensionType: (*CMsg3DTransformPerspectiveOrigin_AnimationFrameData)(nil),
		Field:         1002,
		Name:          "CMsg3DTransformPerspectiveOrigin.animation_frame_data",
		Tag:           "bytes,1002,opt,name=animation_frame_data",
		Filename:      "renderer/rendermessages.proto",
	},
	{
		ExtendedType:  (*CMsgAnimationFrameData)(nil),
		ExtensionType: (*CMsg3DTransformOrigin_AnimationFrameData)(nil),
		Field:         1015,
		Name:          "CMsg3DTransformOrigin.animation_frame_data",
		Tag:           "bytes,1015,opt,name=animation_frame_data",
		Filename:      "renderer/rendermessages.proto",
	},
	{
		ExtendedType:  (*CMsgAnimationFrameData)(nil),
		ExtensionType: (*CMsg3DTransformMatrix_AnimationFrameData)(nil),
		Field:         1000,
		Name:          "CMsg3DTransformMatrix.animation_frame_data",
		Tag:           "bytes,1000,opt,name=animation_frame_data",
		Filename:      "renderer/rendermessages.proto",
	},
	{
		ExtendedType:  (*CMsgAnimationFrameData)(nil),
		ExtensionType: (*CMsgBorderRadius_AnimationFrameData)(nil),
		Field:         1006,
		Name:          "CMsgBorderRadius.animation_frame_data",
		Tag:           "bytes,1006,opt,name=animation_frame_data",
		Filename:      "renderer/rendermessages.proto",
	},
	{
		ExtendedType:  (*CMsgAnimationFrameData)(nil),
		ExtensionType: (*CMsgBorder_AnimationFrameData)(nil),
		Field:         1009,
		Name:          "CMsgBorder.animation_frame_data",
		Tag:           "bytes,1009,opt,name=animation_frame_data",
		Filename:      "renderer/rendermessages.proto",
	},
	{
		ExtendedType:  (*CMsgAnimationFrameData)(nil),
		ExtensionType: (*CMsgBoxShadow_AnimationFrameData)(nil),
		Field:         1010,
		Name:          "CMsgBoxShadow.animation_frame_data",
		Tag:           "bytes,1010,opt,name=animation_frame_data",
		Filename:      "renderer/rendermessages.proto",
	},
	{
		ExtendedType:  (*CMsgAnimationFrameData)(nil),
		ExtensionType: (*CMsgTextShadow_AnimationFrameData)(nil),
		Field:         1017,
		Name:          "CMsgTextShadow.animation_frame_data",
		Tag:           "bytes,1017,opt,name=animation_frame_data",
		Filename:      "renderer/rendermessages.proto",
	},
	{
		ExtendedType:  (*CMsgAnimationFrameData)(nil),
		ExtensionType: (*CMsgClip_AnimationFrameData)(nil),
		Field:         1018,
		Name:          "CMsgClip.animation_frame_data",
		Tag:           "bytes,1018,opt,name=animation_frame_data",
		Filename:      "renderer/rendermessages.proto",
	},
}

// Extension fields to CMsgAnimationFrameData.
var (
	// optional CMsgPointWithTransition.AnimationFrameData animation_frame_data = 1012;
	E_CMsgPointWithTransition_AnimationFrameData = &file_renderer_rendermessages_proto_extTypes[0]
	// optional CMsgColor.AnimationFrameData animation_frame_data = 1001;
	E_CMsgColor_AnimationFrameData = &file_renderer_rendermessages_proto_extTypes[1]
	// optional CMsgFillBrushCollection.AnimationFrameData animation_frame_data = 1007;
	E_CMsgFillBrushCollection_AnimationFrameData = &file_renderer_rendermessages_proto_extTypes[2]
	// optional CMsgPanelPosition.AnimationFrameData animation_frame_data = 1011;
	E_CMsgPanelPosition_AnimationFrameData = &file_renderer_rendermessages_proto_extTypes[3]
	// optional CMsgOpacity.AnimationFrameData animation_frame_data = 1004;
	E_CMsgOpacity_AnimationFrameData = &file_renderer_rendermessages_proto_extTypes[4]
	// optional CMsgRotate2D.AnimationFrameData animation_frame_data = 1014;
	E_CMsgRotate2D_AnimationFrameData = &file_renderer_rendermessages_proto_extTypes[5]
	// optional CMsgOpacityMask.AnimationFrameData animation_frame_data = 1013;
	E_CMsgOpacityMask_AnimationFrameData = &file_renderer_rendermessages_proto_extTypes[6]
	// optional CMsgHueShift.AnimationFrameData animation_frame_data = 1019;
	E_CMsgHueShift_AnimationFrameData = &file_renderer_rendermessages_proto_extTypes[7]
	// optional CMsgSaturation.AnimationFrameData animation_frame_data = 1005;
	E_CMsgSaturation_AnimationFrameData = &file_renderer_rendermessages_proto_extTypes[8]
	// optional CMsgBrightness.AnimationFrameData animation_frame_data = 1020;
	E_CMsgBrightness_AnimationFrameData = &file_renderer_rendermessages_proto_extTypes[9]
	// optional CMsgContrast.AnimationFrameData animation_frame_data = 1021;
	E_CMsgContrast_AnimationFrameData = &file_renderer_rendermessages_proto_extTypes[10]
	// optional CMsgGaussianBlur.AnimationFrameData animation_frame_data = 1008;
	E_CMsgGaussianBlur_AnimationFrameData = &file_renderer_rendermessages_proto_extTypes[11]
	// optional CMsgMotionBlur.AnimationFrameData animation_frame_data = 1022;
	E_CMsgMotionBlur_AnimationFrameData = &file_renderer_rendermessages_proto_extTypes[12]
	// optional CMsg3DTransformPerspective.AnimationFrameData animation_frame_data = 1003;
	E_CMsg3DTransformPerspective_AnimationFrameData = &file_renderer_rendermessages_proto_extTypes[13]
	// optional CMsg3DTransformPerspectiveOrigin.AnimationFrameData animation_frame_data = 1002;
	E_CMsg3DTransformPerspectiveOrigin_AnimationFrameData = &file_renderer_rendermessages_proto_extTypes[14]
	// optional CMsg3DTransformOrigin.AnimationFrameData animation_frame_data = 1015;
	E_CMsg3DTransformOrigin_AnimationFrameData = &file_renderer_rendermessages_proto_extTypes[15]
	// optional CMsg3DTransformMatrix.AnimationFrameData animation_frame_data = 1000;
	E_CMsg3DTransformMatrix_AnimationFrameData = &file_renderer_rendermessages_proto_extTypes[16]
	// optional CMsgBorderRadius.AnimationFrameData animation_frame_data = 1006;
	E_CMsgBorderRadius_AnimationFrameData = &file_renderer_rendermessages_proto_extTypes[17]
	// optional CMsgBorder.AnimationFrameData animation_frame_data = 1009;
	E_CMsgBorder_AnimationFrameData = &file_renderer_rendermessages_proto_extTypes[18]
	// optional CMsgBoxShadow.AnimationFrameData animation_frame_data = 1010;
	E_CMsgBoxShadow_AnimationFrameData = &file_renderer_rendermessages_proto_extTypes[19]
	// optional CMsgTextShadow.AnimationFrameData animation_frame_data = 1017;
	E_CMsgTextShadow_AnimationFrameData = &file_renderer_rendermessages_proto_extTypes[20]
	// optional CMsgClip.AnimationFrameData animation_frame_data = 1018;
	E_CMsgClip_AnimationFrameData = &file_renderer_rendermessages_proto_extTypes[21]
)

var File_renderer_rendermessages_proto protoreflect.FileDescriptor

var file_renderer_rendermessages_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x72, 0x2f, 0x72, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xbc, 0x02, 0x0a, 0x0e, 0x43, 0x4d, 0x73, 0x67, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x70, 0x61, 0x69, 0x6e,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x50, 0x61, 0x69, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x73, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x57, 0x69, 0x64, 0x74,
	0x68, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x73, 0x75, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x26, 0x0a,
	0x0f, 0x75, 0x69, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x75, 0x69, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x46,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x5f, 0x66,
	0x72, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x46, 0x0a, 0x20, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x5f,
	0x67, 0x70, 0x75, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x5f, 0x62, 0x65,
	0x66, 0x6f, 0x72, 0x65, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x1c, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x47, 0x70, 0x75, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x22, 0xaf,
	0x01, 0x0a, 0x0c, 0x43, 0x4d, 0x73, 0x67, 0x45, 0x6e, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12,
	0x35, 0x0a, 0x17, 0x6d, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x5f,
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x14, 0x6d, 0x6f, 0x75, 0x73, 0x65, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x54, 0x65, 0x78,
	0x74, 0x75, 0x72, 0x65, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x16, 0x6d, 0x6f, 0x75, 0x73, 0x65, 0x5f,
	0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x5f, 0x68, 0x6f, 0x74, 0x73, 0x70, 0x6f, 0x74, 0x5f, 0x78,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x13, 0x6d, 0x6f, 0x75, 0x73, 0x65, 0x43, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x48, 0x6f, 0x74, 0x73, 0x70, 0x6f, 0x74, 0x58, 0x12, 0x33, 0x0a, 0x16, 0x6d,
	0x6f, 0x75, 0x73, 0x65, 0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x5f, 0x68, 0x6f, 0x74, 0x73,
	0x70, 0x6f, 0x74, 0x5f, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x13, 0x6d, 0x6f, 0x75,
	0x73, 0x65, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x48, 0x6f, 0x74, 0x73, 0x70, 0x6f, 0x74, 0x59,
	0x22, 0x3f, 0x0a, 0x13, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x42, 0x61, 0x63,
	0x6b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6c, 0x65, 0x61, 0x72,
	0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0e, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x67, 0x62,
	0x61, 0x22, 0x3c, 0x0a, 0x11, 0x43, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72,
	0x65, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0e, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x22,
	0x30, 0x0a, 0x0f, 0x43, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x6e,
	0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49,
	0x64, 0x22, 0x5e, 0x0a, 0x18, 0x43, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x21, 0x0a,
	0x0c, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x72, 0x75, 0x73, 0x68, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x62, 0x72, 0x75, 0x73, 0x68, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x22, 0x35, 0x0a, 0x09, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x0c,
	0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x79, 0x12, 0x0c, 0x0a, 0x01, 0x7a, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x7a, 0x22, 0xaf, 0x02, 0x0a, 0x0d, 0x43, 0x4d, 0x73,
	0x67, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x34, 0x78, 0x34, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x30,
	0x30, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6d, 0x30, 0x30, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x30, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6d, 0x30, 0x31, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x30, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6d, 0x30, 0x32,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x30, 0x33, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6d,
	0x30, 0x33, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x31, 0x30, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x03, 0x6d, 0x31, 0x30, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x31, 0x31, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x03, 0x6d, 0x31, 0x31, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x31, 0x32, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x03, 0x6d, 0x31, 0x32, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x31, 0x33, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6d, 0x31, 0x33, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x32,
	0x30, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6d, 0x32, 0x30, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x32, 0x31, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6d, 0x32, 0x31, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x32, 0x32, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6d, 0x32, 0x32,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x32, 0x33, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6d,
	0x32, 0x33, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x33, 0x30, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x03, 0x6d, 0x33, 0x30, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x33, 0x31, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x03, 0x6d, 0x33, 0x31, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x33, 0x32, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x03, 0x6d, 0x33, 0x32, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x33, 0x33, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6d, 0x33, 0x33, 0x22, 0xc6, 0x02, 0x0a, 0x0b, 0x43,
	0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x35, 0x0a, 0x08, 0x74, 0x6f,
	0x70, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x43,
	0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x43, 0x6f, 0x72, 0x6e,
	0x65, 0x72, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x4c, 0x65, 0x66,
	0x74, 0x12, 0x37, 0x0a, 0x09, 0x74, 0x6f, 0x70, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x43, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x44, 0x61,
	0x74, 0x61, 0x2e, 0x43, 0x43, 0x6f, 0x72, 0x6e, 0x65, 0x72, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73,
	0x52, 0x08, 0x74, 0x6f, 0x70, 0x52, 0x69, 0x67, 0x68, 0x74, 0x12, 0x3d, 0x0a, 0x0c, 0x62, 0x6f,
	0x74, 0x74, 0x6f, 0x6d, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x43, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x43,
	0x43, 0x6f, 0x72, 0x6e, 0x65, 0x72, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x52, 0x0b, 0x62, 0x6f,
	0x74, 0x74, 0x6f, 0x6d, 0x52, 0x69, 0x67, 0x68, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x62, 0x6f, 0x74,
	0x74, 0x6f, 0x6d, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x43, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x43, 0x6f,
	0x72, 0x6e, 0x65, 0x72, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x52, 0x0a, 0x62, 0x6f, 0x74, 0x74,
	0x6f, 0x6d, 0x4c, 0x65, 0x66, 0x74, 0x1a, 0x4b, 0x0a, 0x0d, 0x43, 0x43, 0x6f, 0x72, 0x6e, 0x65,
	0x72, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x74, 0x69,
	0x63, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x76, 0x65, 0x72, 0x74, 0x69,
	0x63, 0x61, 0x6c, 0x22, 0x9a, 0x02, 0x0a, 0x0b, 0x43, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x03, 0x74, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x43, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x43,
	0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x52, 0x03, 0x74, 0x6f, 0x70, 0x12,
	0x2e, 0x0a, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x43, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x42, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x52, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x30, 0x0a, 0x06, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x43, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x42,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x52, 0x06, 0x62, 0x6f, 0x74, 0x74, 0x6f,
	0x6d, 0x12, 0x2c, 0x0a, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x43, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x42,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x52, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x1a,
	0x4f, 0x0a, 0x0b, 0x43, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73,
	0x74, 0x79, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x22, 0x8e, 0x02, 0x0a, 0x0e, 0x43, 0x42, 0x6f, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x69, 0x6e, 0x73, 0x65, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c,
	0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63,
	0x61, 0x6c, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0e, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x62, 0x6c, 0x75, 0x72, 0x5f, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x62, 0x6c, 0x75, 0x72, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73,
	0x12, 0x27, 0x0a, 0x0f, 0x73, 0x70, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x73, 0x70, 0x72, 0x65, 0x61,
	0x64, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x66,
	0x69, 0x6c, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x22, 0xd8, 0x01, 0x0a, 0x0f, 0x43, 0x54, 0x65, 0x78, 0x74, 0x53, 0x68, 0x61, 0x64, 0x6f,
	0x77, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x11, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e,
	0x74, 0x61, 0x6c, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x10, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x76, 0x65, 0x72,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62,
	0x6c, 0x75, 0x72, 0x5f, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0a, 0x62, 0x6c, 0x75, 0x72, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x8b, 0x01, 0x0a,
	0x0f, 0x43, 0x52, 0x61, 0x64, 0x69, 0x61, 0x6c, 0x43, 0x6c, 0x69, 0x70, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x19, 0x0a, 0x08, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x07, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x58, 0x12, 0x19, 0x0a, 0x08, 0x63,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x63,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x59, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x61, 0x6e, 0x67, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x5f, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x73,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x22, 0xb2, 0x01, 0x0a, 0x0c, 0x43,
	0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x72,
	0x65, 0x63, 0x74, 0x5f, 0x63, 0x6c, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x72, 0x65, 0x63, 0x74, 0x43, 0x6c, 0x69, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x65, 0x66, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x74, 0x6f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x74, 0x6f, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x72,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x12, 0x31, 0x0a, 0x0b,
	0x72, 0x61, 0x64, 0x69, 0x61, 0x6c, 0x5f, 0x63, 0x6c, 0x69, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x43, 0x52, 0x61, 0x64, 0x69, 0x61, 0x6c, 0x43, 0x6c, 0x69, 0x70, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x0a, 0x72, 0x61, 0x64, 0x69, 0x61, 0x6c, 0x43, 0x6c, 0x69, 0x70, 0x22,
	0xf9, 0x15, 0x0a, 0x18, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x75, 0x73, 0x68, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a,
	0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x30, 0x0a, 0x15, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x71,
	0x75, 0x61, 0x64, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x78, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x51, 0x75, 0x61, 0x64, 0x54,
	0x6f, 0x70, 0x4c, 0x65, 0x66, 0x74, 0x58, 0x12, 0x30, 0x0a, 0x15, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x71, 0x75, 0x61, 0x64, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x51, 0x75, 0x61,
	0x64, 0x54, 0x6f, 0x70, 0x4c, 0x65, 0x66, 0x74, 0x59, 0x12, 0x30, 0x0a, 0x15, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x71, 0x75, 0x61, 0x64, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x6c, 0x65, 0x66, 0x74,
	0x5f, 0x7a, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x51,
	0x75, 0x61, 0x64, 0x54, 0x6f, 0x70, 0x4c, 0x65, 0x66, 0x74, 0x5a, 0x12, 0x32, 0x0a, 0x16, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x71, 0x75, 0x61, 0x64, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x72, 0x69,
	0x67, 0x68, 0x74, 0x5f, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x51, 0x75, 0x61, 0x64, 0x54, 0x6f, 0x70, 0x52, 0x69, 0x67, 0x68, 0x74, 0x58, 0x12,
	0x32, 0x0a, 0x16, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x71, 0x75, 0x61, 0x64, 0x5f, 0x74, 0x6f,
	0x70, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x12, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x51, 0x75, 0x61, 0x64, 0x54, 0x6f, 0x70, 0x52, 0x69, 0x67,
	0x68, 0x74, 0x59, 0x12, 0x32, 0x0a, 0x16, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x71, 0x75, 0x61,
	0x64, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x7a, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x12, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x51, 0x75, 0x61, 0x64, 0x54, 0x6f,
	0x70, 0x52, 0x69, 0x67, 0x68, 0x74, 0x5a, 0x12, 0x36, 0x0a, 0x18, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x71, 0x75, 0x61, 0x64, 0x5f, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x5f, 0x6c, 0x65, 0x66,
	0x74, 0x5f, 0x78, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x51, 0x75, 0x61, 0x64, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x4c, 0x65, 0x66, 0x74, 0x58, 0x12,
	0x36, 0x0a, 0x18, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x71, 0x75, 0x61, 0x64, 0x5f, 0x62, 0x6f,
	0x74, 0x74, 0x6f, 0x6d, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x14, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x51, 0x75, 0x61, 0x64, 0x42, 0x6f, 0x74, 0x74,
	0x6f, 0x6d, 0x4c, 0x65, 0x66, 0x74, 0x59, 0x12, 0x36, 0x0a, 0x18, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x71, 0x75, 0x61, 0x64, 0x5f, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x5f, 0x6c, 0x65, 0x66,
	0x74, 0x5f, 0x7a, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x51, 0x75, 0x61, 0x64, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x4c, 0x65, 0x66, 0x74, 0x5a, 0x12,
	0x38, 0x0a, 0x19, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x71, 0x75, 0x61, 0x64, 0x5f, 0x62, 0x6f,
	0x74, 0x74, 0x6f, 0x6d, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x78, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x15, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x51, 0x75, 0x61, 0x64, 0x42, 0x6f, 0x74,
	0x74, 0x6f, 0x6d, 0x52, 0x69, 0x67, 0x68, 0x74, 0x58, 0x12, 0x38, 0x0a, 0x19, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x71, 0x75, 0x61, 0x64, 0x5f, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x5f, 0x72,
	0x69, 0x67, 0x68, 0x74, 0x5f, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x01, 0x52, 0x15, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x51, 0x75, 0x61, 0x64, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x52, 0x69, 0x67,
	0x68, 0x74, 0x59, 0x12, 0x38, 0x0a, 0x19, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x71, 0x75, 0x61,
	0x64, 0x5f, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x7a,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x15, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x51, 0x75, 0x61,
	0x64, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x52, 0x69, 0x67, 0x68, 0x74, 0x5a, 0x12, 0x23, 0x0a,
	0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6d, 0x30, 0x30, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x4d,
	0x30, 0x30, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5f,
	0x6d, 0x30, 0x31, 0x18, 0x11, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x6f, 0x72, 0x6d, 0x4d, 0x30, 0x31, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6d, 0x30, 0x32, 0x18, 0x12, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x4d, 0x30, 0x32, 0x12, 0x23, 0x0a, 0x0d,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6d, 0x30, 0x33, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x4d, 0x30,
	0x33, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6d,
	0x31, 0x30, 0x18, 0x14, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x6f, 0x72, 0x6d, 0x4d, 0x31, 0x30, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x6f, 0x72, 0x6d, 0x5f, 0x6d, 0x31, 0x31, 0x18, 0x15, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x4d, 0x31, 0x31, 0x12, 0x23, 0x0a, 0x0d, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6d, 0x31, 0x32, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x4d, 0x31, 0x32,
	0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6d, 0x31,
	0x33, 0x18, 0x17, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f,
	0x72, 0x6d, 0x4d, 0x31, 0x33, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f,
	0x72, 0x6d, 0x5f, 0x6d, 0x32, 0x30, 0x18, 0x18, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x4d, 0x32, 0x30, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6d, 0x32, 0x31, 0x18, 0x19, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x4d, 0x32, 0x31, 0x12,
	0x23, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6d, 0x32, 0x32,
	0x18, 0x1a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72,
	0x6d, 0x4d, 0x32, 0x32, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72,
	0x6d, 0x5f, 0x6d, 0x32, 0x33, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x4d, 0x32, 0x33, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6d, 0x33, 0x30, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x4d, 0x33, 0x30, 0x12, 0x23,
	0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6d, 0x33, 0x31, 0x18,
	0x1d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d,
	0x4d, 0x33, 0x31, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d,
	0x5f, 0x6d, 0x33, 0x32, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x6f, 0x72, 0x6d, 0x4d, 0x33, 0x32, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6d, 0x33, 0x33, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x4d, 0x33, 0x33, 0x12, 0x2b, 0x0a,
	0x11, 0x70, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x64, 0x65, 0x70,
	0x74, 0x68, 0x18, 0x20, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x70, 0x65, 0x72, 0x73, 0x70, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65, 0x70, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x21, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x6f, 0x70, 0x61,
	0x63, 0x69, 0x74, 0x79, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x10, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x61, 0x74, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x23, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x73, 0x61, 0x74, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x75, 0x65, 0x5f, 0x73, 0x68, 0x69, 0x66, 0x74, 0x18, 0x24,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x68, 0x75, 0x65, 0x53, 0x68, 0x69, 0x66, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x25, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0a, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x73, 0x74, 0x18, 0x26, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x17, 0x6f, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75,
	0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x27, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x6f, 0x70, 0x61,
	0x63, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x49,
	0x64, 0x12, 0x30, 0x0a, 0x14, 0x6f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x6d, 0x61, 0x73,
	0x6b, 0x5f, 0x6f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x28, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x12, 0x6f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x73, 0x6b, 0x4f, 0x70, 0x61, 0x63,
	0x69, 0x74, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x29, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x06, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x0d, 0x62, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x43, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c,
	0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x12, 0x2e, 0x0a, 0x0a,
	0x62, 0x6f, 0x78, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x43, 0x42, 0x6f, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x09, 0x62, 0x6f, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x12, 0x2f, 0x0a, 0x13,
	0x67, 0x61, 0x75, 0x73, 0x73, 0x69, 0x61, 0x6e, 0x62, 0x6c, 0x75, 0x72, 0x5f, 0x70, 0x61, 0x73,
	0x73, 0x65, 0x73, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x67, 0x61, 0x75, 0x73, 0x73,
	0x69, 0x61, 0x6e, 0x62, 0x6c, 0x75, 0x72, 0x50, 0x61, 0x73, 0x73, 0x65, 0x73, 0x12, 0x35, 0x0a,
	0x16, 0x67, 0x61, 0x75, 0x73, 0x73, 0x69, 0x61, 0x6e, 0x62, 0x6c, 0x75, 0x72, 0x5f, 0x73, 0x74,
	0x64, 0x64, 0x65, 0x76, 0x68, 0x6f, 0x72, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x15, 0x67,
	0x61, 0x75, 0x73, 0x73, 0x69, 0x61, 0x6e, 0x62, 0x6c, 0x75, 0x72, 0x53, 0x74, 0x64, 0x64, 0x65,
	0x76, 0x68, 0x6f, 0x72, 0x12, 0x35, 0x0a, 0x16, 0x67, 0x61, 0x75, 0x73, 0x73, 0x69, 0x61, 0x6e,
	0x62, 0x6c, 0x75, 0x72, 0x5f, 0x73, 0x74, 0x64, 0x64, 0x65, 0x76, 0x76, 0x65, 0x72, 0x18, 0x2e,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x15, 0x67, 0x61, 0x75, 0x73, 0x73, 0x69, 0x61, 0x6e, 0x62, 0x6c,
	0x75, 0x72, 0x53, 0x74, 0x64, 0x64, 0x65, 0x76, 0x76, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x12, 0x73,
	0x63, 0x61, 0x6c, 0x65, 0x5f, 0x32, 0x64, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x5f,
	0x78, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x32, 0x64,
	0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x58, 0x12, 0x2b, 0x0a, 0x12, 0x73, 0x63, 0x61, 0x6c,
	0x65, 0x5f, 0x32, 0x64, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x5f, 0x79, 0x18, 0x30,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x32, 0x64, 0x46, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x73, 0x59, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x5f,
	0x32, 0x64, 0x18, 0x31, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65,
	0x32, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x65, 0x64, 0x73, 0x5f, 0x63, 0x6c, 0x65, 0x61,
	0x72, 0x18, 0x32, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6e, 0x65, 0x65, 0x64, 0x73, 0x43, 0x6c,
	0x65, 0x61, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x65, 0x64, 0x73, 0x5f, 0x64, 0x65, 0x70,
	0x74, 0x68, 0x18, 0x33, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6e, 0x65, 0x65, 0x64, 0x73, 0x44,
	0x65, 0x70, 0x74, 0x68, 0x12, 0x3c, 0x0a, 0x1a, 0x6e, 0x65, 0x65, 0x64, 0x73, 0x5f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x34, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x6e, 0x65, 0x65, 0x64, 0x73, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x37, 0x0a, 0x18, 0x6e, 0x65, 0x65, 0x64, 0x73, 0x5f, 0x72, 0x65, 0x64, 0x72,
	0x61, 0x77, 0x5f, 0x65, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x35,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x6e, 0x65, 0x65, 0x64, 0x73, 0x52, 0x65, 0x64, 0x72, 0x61,
	0x77, 0x45, 0x76, 0x65, 0x72, 0x79, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x0b, 0x74,
	0x65, 0x78, 0x74, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x18, 0x36, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x43, 0x54, 0x65, 0x78, 0x74, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x12, 0x24,
	0x0a, 0x0e, 0x6d, 0x69, 0x78, 0x5f, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x37, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6d, 0x69, 0x78, 0x42, 0x6c, 0x65, 0x6e, 0x64,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x6f, 0x63, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64,
	0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x65, 0x64, 0x67, 0x65, 0x18, 0x38, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x10, 0x6f, 0x63, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x4c, 0x65, 0x66, 0x74, 0x45, 0x64,
	0x67, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x6f, 0x63, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x5f, 0x74,
	0x6f, 0x70, 0x5f, 0x65, 0x64, 0x67, 0x65, 0x18, 0x39, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x6f,
	0x63, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x54, 0x6f, 0x70, 0x45, 0x64, 0x67, 0x65, 0x12, 0x2e,
	0x0a, 0x13, 0x6f, 0x63, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74,
	0x5f, 0x65, 0x64, 0x67, 0x65, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x6f, 0x63, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x64, 0x52, 0x69, 0x67, 0x68, 0x74, 0x45, 0x64, 0x67, 0x65, 0x12, 0x30,
	0x0a, 0x14, 0x6f, 0x63, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x5f, 0x62, 0x6f, 0x74, 0x74, 0x6f,
	0x6d, 0x5f, 0x65, 0x64, 0x67, 0x65, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x6f, 0x63,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x45, 0x64, 0x67, 0x65,
	0x12, 0x31, 0x0a, 0x0b, 0x72, 0x61, 0x64, 0x69, 0x61, 0x6c, 0x5f, 0x63, 0x6c, 0x69, 0x70, 0x18,
	0x3c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x43, 0x52, 0x61, 0x64, 0x69, 0x61, 0x6c, 0x43,
	0x6c, 0x69, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x72, 0x61, 0x64, 0x69, 0x61, 0x6c, 0x43,
	0x6c, 0x69, 0x70, 0x12, 0x2f, 0x0a, 0x13, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x6c, 0x75,
	0x72, 0x5f, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x12, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x6c, 0x75, 0x72, 0x56, 0x65, 0x6c, 0x6f,
	0x63, 0x69, 0x74, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x6c,
	0x75, 0x72, 0x5f, 0x64, 0x69, 0x72, 0x78, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x6c, 0x75, 0x72, 0x44, 0x69, 0x72, 0x78, 0x12, 0x27, 0x0a,
	0x0f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x6c, 0x75, 0x72, 0x5f, 0x64, 0x69, 0x72, 0x79,
	0x18, 0x3f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x6c,
	0x75, 0x72, 0x44, 0x69, 0x72, 0x79, 0x12, 0x43, 0x0a, 0x1e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x78, 0x74,
	0x75, 0x72, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x40, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x79, 0x65, 0x72,
	0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x19, 0x0a, 0x17, 0x43,
	0x4d, 0x73, 0x67, 0x50, 0x6f, 0x70, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6e,
	0x67, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x35, 0x0a, 0x18, 0x43, 0x4d, 0x73, 0x67, 0x46, 0x72,
	0x65, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x4c, 0x61, 0x79,
	0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0xbf, 0x02,
	0x0a, 0x12, 0x43, 0x4d, 0x73, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x73, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x61,
	0x79, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x12, 0x22, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x75,
	0x6e, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x0a, 0x74, 0x69, 0x6d,
	0x69, 0x6e, 0x67, 0x46, 0x75, 0x6e, 0x63, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x75, 0x62, 0x69, 0x63,
	0x5f, 0x62, 0x65, 0x7a, 0x69, 0x65, 0x72, 0x5f, 0x30, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0c, 0x63, 0x75, 0x62, 0x69, 0x63, 0x42, 0x65, 0x7a, 0x69, 0x65, 0x72, 0x30, 0x12, 0x24, 0x0a,
	0x0e, 0x63, 0x75, 0x62, 0x69, 0x63, 0x5f, 0x62, 0x65, 0x7a, 0x69, 0x65, 0x72, 0x5f, 0x31, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x63, 0x75, 0x62, 0x69, 0x63, 0x42, 0x65, 0x7a, 0x69,
	0x65, 0x72, 0x31, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x75, 0x62, 0x69, 0x63, 0x5f, 0x62, 0x65, 0x7a,
	0x69, 0x65, 0x72, 0x5f, 0x32, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x63, 0x75, 0x62,
	0x69, 0x63, 0x42, 0x65, 0x7a, 0x69, 0x65, 0x72, 0x32, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x75, 0x62,
	0x69, 0x63, 0x5f, 0x62, 0x65, 0x7a, 0x69, 0x65, 0x72, 0x5f, 0x33, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0c, 0x63, 0x75, 0x62, 0x69, 0x63, 0x42, 0x65, 0x7a, 0x69, 0x65, 0x72, 0x33, 0x22,
	0xa8, 0x03, 0x0a, 0x11, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x64, 0x65, 0x6c,
	0x61, 0x79, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x66,
	0x75, 0x6e, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x69, 0x6e,
	0x67, 0x46, 0x75, 0x6e, 0x63, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x75, 0x62, 0x69, 0x63, 0x5f, 0x62,
	0x65, 0x7a, 0x69, 0x65, 0x72, 0x5f, 0x30, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x63,
	0x75, 0x62, 0x69, 0x63, 0x42, 0x65, 0x7a, 0x69, 0x65, 0x72, 0x30, 0x12, 0x24, 0x0a, 0x0e, 0x63,
	0x75, 0x62, 0x69, 0x63, 0x5f, 0x62, 0x65, 0x7a, 0x69, 0x65, 0x72, 0x5f, 0x31, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0c, 0x63, 0x75, 0x62, 0x69, 0x63, 0x42, 0x65, 0x7a, 0x69, 0x65, 0x72,
	0x31, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x75, 0x62, 0x69, 0x63, 0x5f, 0x62, 0x65, 0x7a, 0x69, 0x65,
	0x72, 0x5f, 0x32, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x63, 0x75, 0x62, 0x69, 0x63,
	0x42, 0x65, 0x7a, 0x69, 0x65, 0x72, 0x32, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x75, 0x62, 0x69, 0x63,
	0x5f, 0x62, 0x65, 0x7a, 0x69, 0x65, 0x72, 0x5f, 0x33, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0c, 0x63, 0x75, 0x62, 0x69, 0x63, 0x42, 0x65, 0x7a, 0x69, 0x65, 0x72, 0x33, 0x12, 0x1c, 0x0a,
	0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x69,
	0x74, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09,
	0x69, 0x74, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x06, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x06, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x22, 0xf9, 0x01, 0x0a, 0x16, 0x43,
	0x4d, 0x73, 0x67, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12,
	0x22, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x46,
	0x75, 0x6e, 0x63, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x75, 0x62, 0x69, 0x63, 0x5f, 0x62, 0x65, 0x7a,
	0x69, 0x65, 0x72, 0x5f, 0x30, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x63, 0x75, 0x62,
	0x69, 0x63, 0x42, 0x65, 0x7a, 0x69, 0x65, 0x72, 0x30, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x75, 0x62,
	0x69, 0x63, 0x5f, 0x62, 0x65, 0x7a, 0x69, 0x65, 0x72, 0x5f, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0c, 0x63, 0x75, 0x62, 0x69, 0x63, 0x42, 0x65, 0x7a, 0x69, 0x65, 0x72, 0x31, 0x12,
	0x24, 0x0a, 0x0e, 0x63, 0x75, 0x62, 0x69, 0x63, 0x5f, 0x62, 0x65, 0x7a, 0x69, 0x65, 0x72, 0x5f,
	0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x63, 0x75, 0x62, 0x69, 0x63, 0x42, 0x65,
	0x7a, 0x69, 0x65, 0x72, 0x32, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x75, 0x62, 0x69, 0x63, 0x5f, 0x62,
	0x65, 0x7a, 0x69, 0x65, 0x72, 0x5f, 0x33, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x63,
	0x75, 0x62, 0x69, 0x63, 0x42, 0x65, 0x7a, 0x69, 0x65, 0x72, 0x33, 0x2a, 0x09, 0x08, 0xe8, 0x07,
	0x10, 0x80, 0x80, 0x80, 0x80, 0x02, 0x22, 0xa9, 0x03, 0x0a, 0x17, 0x43, 0x4d, 0x73, 0x67, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x04, 0x62, 0x61,
	0x73, 0x65, 0x12, 0x2a, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c,
	0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c,
	0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12,
	0x32, 0x0a, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x1a, 0x34, 0x0a, 0x12, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0x77, 0x0a, 0x14, 0x61, 0x6e, 0x69,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x17, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0xf4, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x57, 0x69, 0x74,
	0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x6e, 0x69, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12,
	0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x22, 0xe9, 0x02, 0x0a, 0x09, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x62, 0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x43, 0x4d, 0x73, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x53,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x32, 0x0a, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x61,
	0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x28, 0x0a, 0x12, 0x41, 0x6e, 0x69,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x32, 0x69, 0x0a, 0x14, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x12, 0x17, 0x2e, 0x43, 0x4d,
	0x73, 0x67, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x18, 0xe9, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x43, 0x4d,
	0x73, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12, 0x61, 0x6e, 0x69, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x4a,
	0x0a, 0x0d, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x74, 0x6f, 0x70, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x67, 0x62, 0x61, 0x22, 0xa5, 0x01, 0x0a, 0x12, 0x43,
	0x4d, 0x73, 0x67, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x47, 0x72, 0x61, 0x64, 0x69, 0x65, 0x6e,
	0x74, 0x12, 0x31, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x0c, 0x65, 0x6e, 0x64, 0x5f, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x4d, 0x73,
	0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0b, 0x65, 0x6e, 0x64, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x6f,
	0x70, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x09, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x74,
	0x6f, 0x70, 0x22, 0xcf, 0x01, 0x0a, 0x12, 0x43, 0x4d, 0x73, 0x67, 0x52, 0x61, 0x64, 0x69, 0x61,
	0x6c, 0x47, 0x72, 0x61, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x0f, 0x63, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0e,
	0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33,
	0x0a, 0x0f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x0e, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x44, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x72, 0x61, 0x64, 0x69, 0x69, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x05,
	0x72, 0x61, 0x64, 0x69, 0x69, 0x12, 0x2d, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x73,
	0x74, 0x6f, 0x70, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x09, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x53, 0x74, 0x6f, 0x70, 0x22, 0xba, 0x01, 0x0a, 0x0c, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x37, 0x0a, 0x11, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x10, 0x70, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23,
	0x0a, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f,
	0x73, 0x68, 0x61, 0x72, 0x70, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x11, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x68, 0x61, 0x72, 0x70, 0x6e, 0x65,
	0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x72, 0x67, 0x62, 0x61,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x67, 0x62,
	0x61, 0x22, 0xc4, 0x0b, 0x0a, 0x12, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x2f, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x65,
	0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0c, 0x62, 0x61, 0x73,
	0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x16, 0x62, 0x61, 0x73,
	0x65, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x14, 0x62, 0x61, 0x73, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x34, 0x0a, 0x16, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x14, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x56, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x50,
	0x65, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x12, 0x41, 0x0a, 0x1d, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x1a, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x50, 0x65, 0x72, 0x53, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x19, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x73, 0x70, 0x61, 0x6e,
	0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x17,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x66, 0x65, 0x73, 0x70, 0x61, 0x6e,
	0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x4b, 0x0a, 0x22, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x73, 0x70, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x73, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x1f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x66,
	0x65, 0x73, 0x70, 0x61, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x56, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x46, 0x0a, 0x19, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x5f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74,
	0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x17, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x6c, 0x56, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x12, 0x57, 0x0a, 0x22,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c,
	0x5f, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x1f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x6c, 0x56, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x56, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x14, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79,
	0x5f, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52,
	0x13, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5f, 0x0a, 0x26, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x5f,
	0x61, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x23, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x56, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0e, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x67, 0x62, 0x61, 0x12,
	0x39, 0x0a, 0x19, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x72,
	0x67, 0x62, 0x61, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x16, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x67,
	0x62, 0x61, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x72, 0x67, 0x62, 0x61, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x45, 0x6e, 0x64, 0x52, 0x67, 0x62, 0x61,
	0x12, 0x35, 0x0a, 0x17, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x72, 0x67,
	0x62, 0x61, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x14, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x45, 0x6e, 0x64, 0x52, 0x67, 0x62, 0x61, 0x56,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x6e, 0x65,
	0x6c, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x62, 0x72, 0x75, 0x73, 0x68, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x72, 0x75, 0x73, 0x68,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x2d, 0x0a, 0x12, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x70, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x11, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x68, 0x61, 0x72, 0x70,
	0x6e, 0x65, 0x73, 0x73, 0x12, 0x3e, 0x0a, 0x1b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x5f, 0x73, 0x68, 0x61, 0x72, 0x70, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x02, 0x52, 0x19, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x53, 0x68, 0x61, 0x72, 0x70, 0x6e, 0x65, 0x73, 0x73, 0x56, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x5f, 0x66, 0x6c, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x46, 0x6c, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x12,
	0x3a, 0x0a, 0x19, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x66, 0x6c, 0x69, 0x63,
	0x6b, 0x65, 0x72, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x17, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x46, 0x6c, 0x69, 0x63,
	0x6b, 0x65, 0x72, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x3e, 0x0a, 0x15, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79,
	0x5f, 0x6d, 0x69, 0x6e, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x4d, 0x73,
	0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x13, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x56, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x4d, 0x69, 0x6e, 0x12, 0x3e, 0x0a, 0x15, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79,
	0x5f, 0x6d, 0x61, 0x78, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x4d, 0x73,
	0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x13, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x56, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x78, 0x12, 0x2b, 0x0a, 0x09, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x32, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x09, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x22, 0x82, 0x02, 0x0a, 0x0d, 0x43, 0x4d, 0x73,
	0x67, 0x46, 0x69, 0x6c, 0x6c, 0x42, 0x72, 0x75, 0x73, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x6f, 0x70, 0x61,
	0x63, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x72, 0x67,
	0x62, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x52,
	0x67, 0x62, 0x61, 0x12, 0x3c, 0x0a, 0x0f, 0x6c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x5f, 0x67, 0x72,
	0x61, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43,
	0x4d, 0x73, 0x67, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x47, 0x72, 0x61, 0x64, 0x69, 0x65, 0x6e,
	0x74, 0x52, 0x0e, 0x6c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x47, 0x72, 0x61, 0x64, 0x69, 0x65, 0x6e,
	0x74, 0x12, 0x3c, 0x0a, 0x0f, 0x72, 0x61, 0x64, 0x69, 0x61, 0x6c, 0x5f, 0x67, 0x72, 0x61, 0x64,
	0x69, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x4d, 0x73,
	0x67, 0x52, 0x61, 0x64, 0x69, 0x61, 0x6c, 0x47, 0x72, 0x61, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52,
	0x0e, 0x72, 0x61, 0x64, 0x69, 0x61, 0x6c, 0x47, 0x72, 0x61, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x12,
	0x3c, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x0e, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x22, 0xb5, 0x03,
	0x0a, 0x17, 0x43, 0x4d, 0x73, 0x67, 0x46, 0x69, 0x6c, 0x6c, 0x42, 0x72, 0x75, 0x73, 0x68, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x46, 0x69,
	0x6c, 0x6c, 0x42, 0x72, 0x75, 0x73, 0x68, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x2e, 0x0a,
	0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x46, 0x69, 0x6c, 0x6c, 0x42, 0x72, 0x75, 0x73,
	0x68, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a,
	0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x74, 0x79, 0x6c, 0x65, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x32,
	0x0a, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x1a, 0x38, 0x0a, 0x12, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x46, 0x69, 0x6c,
	0x6c, 0x42, 0x72, 0x75, 0x73, 0x68, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0x77, 0x0a, 0x14,
	0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x17, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x6e, 0x69, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0xef, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x46, 0x69, 0x6c, 0x6c, 0x42,
	0x72, 0x75, 0x73, 0x68, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41,
	0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x12, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x4e, 0x0a, 0x1d, 0x43, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x6c, 0x42, 0x72, 0x75, 0x73, 0x68, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x62,
	0x72, 0x75, 0x73, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x4d, 0x73,
	0x67, 0x46, 0x69, 0x6c, 0x6c, 0x42, 0x72, 0x75, 0x73, 0x68, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x6c,
	0x42, 0x72, 0x75, 0x73, 0x68, 0x22, 0x96, 0x05, 0x0a, 0x11, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x61,
	0x6e, 0x65, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x04, 0x62,
	0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x0a, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0a, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x74, 0x79,
	0x6c, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x32, 0x0a, 0x0a, 0x61, 0x6e, 0x69, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43,
	0x4d, 0x73, 0x67, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2f, 0x0a, 0x0d,
	0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52,
	0x0c, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x3c, 0x0a,
	0x14, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x4d,
	0x73, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x12, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x43, 0x0a, 0x13, 0x73,
	0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x11, 0x73,
	0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x58,
	0x12, 0x43, 0x0a, 0x13, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x43, 0x4d, 0x73, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x11, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x59, 0x1a, 0x34, 0x0a, 0x12, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0x71, 0x0a, 0x14, 0x61,
	0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x17, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0xf3, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12, 0x61, 0x6e, 0x69, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0xed,
	0x02, 0x0a, 0x0b, 0x43, 0x4d, 0x73, 0x67, 0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x62, 0x61,
	0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x4d,
	0x73, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x53, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x12, 0x32, 0x0a, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x6e,
	0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x61, 0x6e, 0x69,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x28, 0x0a, 0x12, 0x41, 0x6e, 0x69, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x32, 0x6b, 0x0a, 0x14, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66,
	0x72, 0x61, 0x6d, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x12, 0x17, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x18, 0xec, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x2e, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12, 0x61, 0x6e, 0x69, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0xef,
	0x02, 0x0a, 0x0c, 0x43, 0x4d, 0x73, 0x67, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x32, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x62,
	0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43,
	0x4d, 0x73, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x53, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x32, 0x0a, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x41,
	0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x61, 0x6e,
	0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x28, 0x0a, 0x12, 0x41, 0x6e, 0x69, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x32, 0x6c, 0x0a, 0x14, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x12, 0x17, 0x2e, 0x43, 0x4d, 0x73,
	0x67, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x18, 0xf6, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x43, 0x4d, 0x73,
	0x67, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x32, 0x44, 0x2e, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12, 0x61, 0x6e,
	0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x22, 0x7e, 0x0a, 0x13, 0x43, 0x4d, 0x73, 0x67, 0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x4d,
	0x61, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x35, 0x0a, 0x17, 0x6f, 0x70, 0x61, 0x63, 0x69,
	0x74, 0x79, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x6f, 0x70, 0x61, 0x63, 0x69, 0x74,
	0x79, 0x4d, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x49, 0x64, 0x12, 0x30,
	0x0a, 0x14, 0x6f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x5f, 0x6f,
	0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x6f, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x73, 0x6b, 0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79,
	0x22, 0xb7, 0x03, 0x0a, 0x0f, 0x43, 0x4d, 0x73, 0x67, 0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79,
	0x4d, 0x61, 0x73, 0x6b, 0x12, 0x28, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79,
	0x4d, 0x61, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x34,
	0x0a, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79,
	0x4d, 0x61, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x43, 0x4d, 0x73, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x53,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x32, 0x0a, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x61,
	0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x3e, 0x0a, 0x12, 0x41, 0x6e, 0x69,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x43, 0x4d, 0x73, 0x67, 0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x73, 0x6b, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0x6f, 0x0a, 0x14, 0x61, 0x6e, 0x69,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x17, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0xf5, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x4d,
	0x61, 0x73, 0x6b, 0x2e, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0xef, 0x02, 0x0a, 0x0c, 0x43,
	0x4d, 0x73, 0x67, 0x48, 0x75, 0x65, 0x53, 0x68, 0x69, 0x66, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x62,
	0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x3c, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x12, 0x32, 0x0a, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x6e, 0x69, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x28, 0x0a, 0x12, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0x6c,
	0x0a, 0x14, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x72, 0x61, 0x6d,
	0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x12, 0x17, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x6e, 0x69,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18,
	0xfb, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x48, 0x75, 0x65,
	0x53, 0x68, 0x69, 0x66, 0x74, 0x2e, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0xf3, 0x02, 0x0a,
	0x0e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x61, 0x74, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x62,
	0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43,
	0x4d, 0x73, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x53, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x32, 0x0a, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x41,
	0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x61, 0x6e,
	0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x28, 0x0a, 0x12, 0x41, 0x6e, 0x69, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x32, 0x6e, 0x0a, 0x14, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x12, 0x17, 0x2e, 0x43, 0x4d, 0x73,
	0x67, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x18, 0xed, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x43, 0x4d, 0x73,
	0x67, 0x53, 0x61, 0x74, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x6e, 0x69, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12,
	0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x22, 0xf3, 0x02, 0x0a, 0x0e, 0x43, 0x4d, 0x73, 0x67, 0x42, 0x72, 0x69, 0x67, 0x68,
	0x74, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x0f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x79, 0x6c, 0x65,
	0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73,
	0x74, 0x79, 0x6c, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x32, 0x0a, 0x0a, 0x61, 0x6e,
	0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x28,
	0x0a, 0x12, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0x6e, 0x0a, 0x14, 0x61, 0x6e, 0x69, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x17, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0xfc, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6e, 0x65, 0x73,
	0x73, 0x2e, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x12, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0xef, 0x02, 0x0a, 0x0c, 0x43, 0x4d, 0x73,
	0x67, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a,
	0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x74, 0x79, 0x6c, 0x65, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x32,
	0x0a, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x1a, 0x28, 0x0a, 0x12, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0x6c, 0x0a, 0x14,
	0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x17, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x6e, 0x69, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0xfd, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x73, 0x74, 0x2e, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x6a, 0x0a, 0x12, 0x43, 0x4d,
	0x73, 0x67, 0x47, 0x61, 0x75, 0x73, 0x73, 0x69, 0x61, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x06, 0x70, 0x61, 0x73, 0x73, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x64, 0x64,
	0x65, 0x76, 0x5f, 0x68, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x73, 0x74,
	0x64, 0x64, 0x65, 0x76, 0x48, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x64, 0x64, 0x65,
	0x76, 0x5f, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x73, 0x74, 0x64,
	0x64, 0x65, 0x76, 0x56, 0x65, 0x72, 0x22, 0xb6, 0x03, 0x0a, 0x10, 0x43, 0x4d, 0x73, 0x67, 0x47,
	0x61, 0x75, 0x73, 0x73, 0x69, 0x61, 0x6e, 0x42, 0x6c, 0x75, 0x72, 0x12, 0x27, 0x0a, 0x04, 0x62,
	0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x47, 0x61, 0x75, 0x73, 0x73, 0x69, 0x61, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x04,
	0x62, 0x61, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x47,
	0x61, 0x75, 0x73, 0x73, 0x69, 0x61, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x0a, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x0f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x79, 0x6c, 0x65,
	0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73,
	0x74, 0x79, 0x6c, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x32, 0x0a, 0x0a, 0x61, 0x6e,
	0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x3d,
	0x0a, 0x12, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x61, 0x75, 0x73, 0x73, 0x69, 0x61,
	0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0x70, 0x0a,
	0x14, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x12, 0x17, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x6e, 0x69, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0xf0,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x61, 0x75, 0x73,
	0x73, 0x69, 0x61, 0x6e, 0x42, 0x6c, 0x75, 0x72, 0x2e, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12, 0x61, 0x6e, 0x69,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22,
	0x5a, 0x0a, 0x14, 0x43, 0x4d, 0x73, 0x67, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6c, 0x75,
	0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x6c, 0x6f, 0x63,
	0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x76, 0x65, 0x6c, 0x6f, 0x63,
	0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x69, 0x72, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x04, 0x64, 0x69, 0x72, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x69, 0x72, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x64, 0x69, 0x72, 0x79, 0x22, 0xb8, 0x03, 0x0a, 0x0e,
	0x43, 0x4d, 0x73, 0x67, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6c, 0x75, 0x72, 0x12, 0x29,
	0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x43,
	0x4d, 0x73, 0x67, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6c, 0x75, 0x72, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x43, 0x4d, 0x73, 0x67, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6c, 0x75, 0x72, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x3c, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x32,
	0x0a, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x53,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x1a, 0x3f, 0x0a, 0x12, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6c, 0x75, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0x6e, 0x0a, 0x14, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x12, 0x17,
	0x2e, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0xfe, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x43, 0x4d, 0x73, 0x67, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6c, 0x75, 0x72, 0x2e,
	0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x12, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x8b, 0x03, 0x0a, 0x1a, 0x43, 0x4d, 0x73, 0x67, 0x33,
	0x44, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x50, 0x65, 0x72, 0x73, 0x70, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x0f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x79, 0x6c, 0x65,
	0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73,
	0x74, 0x79, 0x6c, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x32, 0x0a, 0x0a, 0x61, 0x6e,
	0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x28,
	0x0a, 0x12, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0x7a, 0x0a, 0x14, 0x61, 0x6e, 0x69, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x17, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0xeb, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x33, 0x44, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f,
	0x72, 0x6d, 0x50, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x2e, 0x41, 0x6e,
	0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x12, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x22, 0xbc, 0x03, 0x0a, 0x20, 0x43, 0x4d, 0x73, 0x67, 0x33, 0x44, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x50, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x1e, 0x0a, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x0a, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x43, 0x4d, 0x73, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x43, 0x4d, 0x73, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x74, 0x79, 0x6c, 0x65,
	0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x32, 0x0a, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43, 0x4d, 0x73,
	0x67, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a,
	0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x34, 0x0a, 0x12, 0x41, 0x6e,
	0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x1e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x32, 0x80, 0x01, 0x0a, 0x14, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66,
	0x72, 0x61, 0x6d, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x12, 0x17, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x18, 0xea, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x33, 0x44, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x50, 0x65, 0x72, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x2e, 0x41, 0x6e, 0x69,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x12, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x22, 0xa7, 0x01, 0x0a, 0x17, 0x43, 0x4d, 0x73, 0x67, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x6f, 0x72, 0x6d, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a,
	0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x79, 0x12, 0x20, 0x0a, 0x0c, 0x78,
	0x5f, 0x69, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x78, 0x49, 0x73, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a,
	0x0c, 0x79, 0x5f, 0x69, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x79, 0x49, 0x73, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12,
	0x2c, 0x0a, 0x12, 0x69, 0x73, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x50,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x22, 0xcf, 0x03,
	0x0a, 0x15, 0x43, 0x4d, 0x73, 0x67, 0x33, 0x44, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72,
	0x6d, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x2c, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x6f, 0x72, 0x6d, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x3c, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x12, 0x32, 0x0a, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x6e, 0x69, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x42, 0x0a, 0x12, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0x75, 0x0a, 0x14, 0x61, 0x6e, 0x69, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x17, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0xf7, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x33, 0x44, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f,
	0x72, 0x6d, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x2e, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12, 0x61, 0x6e, 0x69,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22,
	0xb1, 0x03, 0x0a, 0x15, 0x43, 0x4d, 0x73, 0x67, 0x33, 0x44, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x6f, 0x72, 0x6d, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x12, 0x22, 0x0a, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x4d, 0x61,
	0x74, 0x72, 0x69, 0x78, 0x34, 0x78, 0x34, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x3c, 0x0a,
	0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x0a, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x34, 0x78, 0x34, 0x52,
	0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x74, 0x79, 0x6c, 0x65, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x32,
	0x0a, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x1a, 0x38, 0x0a, 0x12, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x4d, 0x61, 0x74,
	0x72, 0x69, 0x78, 0x34, 0x78, 0x34, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0x75, 0x0a, 0x14,
	0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x17, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x6e, 0x69, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0xe8, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x33, 0x44, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x2e, 0x41, 0x6e, 0x69,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x12, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x22, 0xa1, 0x03, 0x0a, 0x10, 0x43, 0x4d, 0x73, 0x67, 0x42, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43,
	0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x74,
	0x79, 0x6c, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x32, 0x0a, 0x0a, 0x61, 0x6e, 0x69,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x43, 0x4d, 0x73, 0x67, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x36, 0x0a,
	0x12, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0x70, 0x0a, 0x14, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x12, 0x17, 0x2e,
	0x43, 0x4d, 0x73, 0x67, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0xee, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x43, 0x4d, 0x73, 0x67, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73,
	0x2e, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x12, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x95, 0x03, 0x0a, 0x0a, 0x43, 0x4d, 0x73, 0x67,
	0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x42, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x74, 0x79, 0x6c,
	0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x32, 0x0a, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43, 0x4d,
	0x73, 0x67, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x36, 0x0a, 0x12, 0x41,
	0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x20, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x43, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x32, 0x6a, 0x0a, 0x14, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x12, 0x17, 0x2e, 0x43, 0x4d,
	0x73, 0x67, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x18, 0xf1, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x43, 0x4d,
	0x73, 0x67, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12, 0x61, 0x6e, 0x69,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22,
	0xa4, 0x03, 0x0a, 0x0d, 0x43, 0x4d, 0x73, 0x67, 0x42, 0x6f, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f,
	0x77, 0x12, 0x23, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x43, 0x42, 0x6f, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x2f, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x42, 0x6f, 0x78, 0x53,
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x74, 0x79,
	0x6c, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x32, 0x0a, 0x0a, 0x61, 0x6e, 0x69, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43,
	0x4d, 0x73, 0x67, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x39, 0x0a, 0x12,
	0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x43, 0x42, 0x6f, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0x6d, 0x0a, 0x14, 0x61, 0x6e, 0x69, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x17, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0xf2, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x42, 0x6f, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x2e,
	0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x12, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0xa9, 0x03, 0x0a, 0x0e, 0x43, 0x4d, 0x73, 0x67, 0x54,
	0x65, 0x78, 0x74, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x12, 0x24, 0x0a, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x43, 0x54, 0x65, 0x78, 0x74, 0x53,
	0x68, 0x61, 0x64, 0x6f, 0x77, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12,
	0x3c, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a,
	0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x43, 0x54, 0x65, 0x78, 0x74, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x12, 0x32, 0x0a, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x6e, 0x69,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x61, 0x6e, 0x69, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x3a, 0x0a, 0x12, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x43, 0x54, 0x65,
	0x78, 0x74, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x32, 0x6e, 0x0a, 0x14, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x12, 0x17, 0x2e, 0x43, 0x4d, 0x73,
	0x67, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x18, 0xf9, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x43, 0x4d, 0x73,
	0x67, 0x54, 0x65, 0x78, 0x74, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x2e, 0x41, 0x6e, 0x69, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12,
	0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x22, 0x94, 0x03, 0x0a, 0x08, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x70, 0x12,
	0x21, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x62, 0x61,
	0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x4d,
	0x73, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x2d, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x70, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x12, 0x32, 0x0a, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x6e, 0x69,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x61, 0x6e, 0x69, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x37, 0x0a, 0x12, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x4d, 0x73,
	0x67, 0x43, 0x6c, 0x69, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32,
	0x68, 0x0a, 0x14, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x12, 0x17, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x41, 0x6e,
	0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x18, 0xfa, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c,
	0x69, 0x70, 0x2e, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x9c, 0x01, 0x0a, 0x11, 0x43, 0x4d,
	0x73, 0x67, 0x50, 0x75, 0x73, 0x68, 0x43, 0x6c, 0x69, 0x70, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x12,
	0x25, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x07, 0x74,
	0x6f, 0x70, 0x4c, 0x65, 0x66, 0x74, 0x12, 0x2d, 0x0a, 0x0c, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d,
	0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43,
	0x4d, 0x73, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0b, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d,
	0x52, 0x69, 0x67, 0x68, 0x74, 0x12, 0x31, 0x0a, 0x0d, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43,
	0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x62, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x22, 0x12, 0x0a, 0x10, 0x43, 0x4d, 0x73, 0x67,
	0x50, 0x6f, 0x70, 0x43, 0x6c, 0x69, 0x70, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x84, 0x07, 0x0a,
	0x1b, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x75, 0x73, 0x68, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6d, 0x30, 0x30, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x4d, 0x30,
	0x30, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6d,
	0x30, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x6f, 0x72, 0x6d, 0x4d, 0x30, 0x31, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x6f, 0x72, 0x6d, 0x5f, 0x6d, 0x30, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x4d, 0x30, 0x32, 0x12, 0x23, 0x0a, 0x0d, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6d, 0x30, 0x33, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x4d, 0x30, 0x33,
	0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6d, 0x31,
	0x30, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f,
	0x72, 0x6d, 0x4d, 0x31, 0x30, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f,
	0x72, 0x6d, 0x5f, 0x6d, 0x31, 0x31, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x4d, 0x31, 0x31, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6d, 0x31, 0x32, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x4d, 0x31, 0x32, 0x12,
	0x23, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6d, 0x31, 0x33,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72,
	0x6d, 0x4d, 0x31, 0x33, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72,
	0x6d, 0x5f, 0x6d, 0x32, 0x30, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x4d, 0x32, 0x30, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6d, 0x32, 0x31, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x4d, 0x32, 0x31, 0x12, 0x23,
	0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6d, 0x32, 0x32, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d,
	0x4d, 0x32, 0x32, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d,
	0x5f, 0x6d, 0x32, 0x33, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x6f, 0x72, 0x6d, 0x4d, 0x32, 0x33, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6d, 0x33, 0x30, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x4d, 0x33, 0x30, 0x12, 0x23, 0x0a,
	0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6d, 0x33, 0x31, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x4d,
	0x33, 0x31, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5f,
	0x6d, 0x33, 0x32, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x6f, 0x72, 0x6d, 0x4d, 0x33, 0x32, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6d, 0x33, 0x33, 0x18, 0x10, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x4d, 0x33, 0x33, 0x12, 0x2e, 0x0a, 0x0a,
	0x62, 0x6f, 0x78, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x43, 0x42, 0x6f, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x09, 0x62, 0x6f, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x12, 0x14, 0x0a, 0x05,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x12, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x78, 0x18, 0x14, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x58, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x79, 0x18, 0x15, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x7a, 0x18, 0x16, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5a, 0x12, 0x24, 0x0a, 0x06, 0x62, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x42, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x5f, 0x78, 0x18, 0x18, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x07, 0x73, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x58, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x63, 0x72, 0x6f,
	0x6c, 0x6c, 0x5f, 0x79, 0x18, 0x19, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x73, 0x63, 0x72, 0x6f,
	0x6c, 0x6c, 0x59, 0x22, 0x1c, 0x0a, 0x1a, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x6f, 0x70, 0x50, 0x61,
	0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x4c, 0x61, 0x79, 0x65,
	0x72, 0x22, 0xf3, 0x0e, 0x0a, 0x14, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x75, 0x73, 0x68, 0x41, 0x41,
	0x6e, 0x64, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12,
	0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x3a, 0x0a, 0x19, 0x63, 0x68, 0x69, 0x6c, 0x72,
	0x65, 0x6e, 0x5f, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x33, 0x64, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x6f, 0x72, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x63, 0x68, 0x69, 0x6c,
	0x72, 0x65, 0x6e, 0x48, 0x61, 0x76, 0x65, 0x33, 0x64, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f,
	0x72, 0x6d, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x7a, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x06, 0x7a, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x39, 0x0a, 0x0e, 0x70,
	0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x6f, 0x72, 0x6d, 0x5f, 0x6d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x33, 0x44, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f,
	0x72, 0x6d, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x6f, 0x72, 0x6d, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x12, 0x41, 0x0a, 0x10, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x33, 0x44, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x6f, 0x72, 0x6d, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x0f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x50, 0x0a, 0x15,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x70, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x43, 0x4d,
	0x73, 0x67, 0x33, 0x44, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x50, 0x65, 0x72,
	0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x6f, 0x72, 0x6d, 0x50, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x63,
	0x0a, 0x1c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x70, 0x65, 0x72, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x33, 0x44, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x50, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x1a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f,
	0x72, 0x6d, 0x50, 0x65, 0x72, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x12, 0x26, 0x0a, 0x07, 0x6f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x4f, 0x70, 0x61, 0x63, 0x69,
	0x74, 0x79, 0x52, 0x07, 0x6f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x29, 0x0a, 0x0a, 0x77,
	0x61, 0x73, 0x68, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x09, 0x77, 0x61, 0x73,
	0x68, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x09, 0x68, 0x75, 0x65, 0x5f, 0x73, 0x68,
	0x69, 0x66, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x48, 0x75, 0x65, 0x53, 0x68, 0x69, 0x66, 0x74, 0x52, 0x08, 0x68, 0x75, 0x65, 0x53, 0x68, 0x69,
	0x66, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x73, 0x61, 0x74, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x61, 0x74,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x73, 0x61, 0x74, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x0a, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6e, 0x65, 0x73,
	0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x42, 0x72,
	0x69, 0x67, 0x68, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x0a, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74,
	0x6e, 0x65, 0x73, 0x73, 0x12, 0x29, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x73, 0x74,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x73, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x73, 0x74, 0x12,
	0x33, 0x0a, 0x0c, 0x6f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x4f, 0x70, 0x61, 0x63,
	0x69, 0x74, 0x79, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x0b, 0x6f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79,
	0x4d, 0x61, 0x73, 0x6b, 0x12, 0x36, 0x0a, 0x0d, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x72,
	0x61, 0x64, 0x69, 0x75, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x43, 0x4d,
	0x73, 0x67, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x52, 0x0c,
	0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x12, 0x36, 0x0a, 0x0d,
	0x67, 0x61, 0x75, 0x73, 0x73, 0x69, 0x61, 0x6e, 0x5f, 0x62, 0x6c, 0x75, 0x72, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x47, 0x61, 0x75, 0x73, 0x73, 0x69,
	0x61, 0x6e, 0x42, 0x6c, 0x75, 0x72, 0x52, 0x0c, 0x67, 0x61, 0x75, 0x73, 0x73, 0x69, 0x61, 0x6e,
	0x42, 0x6c, 0x75, 0x72, 0x12, 0x23, 0x0a, 0x06, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x42, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x06, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x0a, 0x62, 0x6f, 0x78,
	0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x43, 0x4d, 0x73, 0x67, 0x42, 0x6f, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x52, 0x09, 0x62,
	0x6f, 0x78, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x12, 0x44, 0x0a, 0x11, 0x73, 0x63, 0x61, 0x6c,
	0x65, 0x5f, 0x32, 0x64, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x64, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x57,
	0x69, 0x74, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x73,
	0x63, 0x61, 0x6c, 0x65, 0x32, 0x64, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x64, 0x12, 0x3b,
	0x0a, 0x12, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x32, 0x64, 0x5f, 0x63, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x4d, 0x73,
	0x67, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x32, 0x44, 0x52, 0x10, 0x72, 0x6f, 0x74, 0x61, 0x74,
	0x65, 0x32, 0x64, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x64, 0x12, 0x30, 0x0a, 0x0b, 0x74,
	0x65, 0x78, 0x74, 0x5f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x54, 0x65, 0x78, 0x74, 0x53, 0x68, 0x61, 0x64, 0x6f,
	0x77, 0x52, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x12, 0x1d, 0x0a,
	0x04, 0x63, 0x6c, 0x69, 0x70, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x43, 0x4d,
	0x73, 0x67, 0x43, 0x6c, 0x69, 0x70, 0x52, 0x04, 0x63, 0x6c, 0x69, 0x70, 0x12, 0x35, 0x0a, 0x17,
	0x73, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6c, 0x69, 0x70, 0x5f, 0x74, 0x6f,
	0x5f, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x73,
	0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6c, 0x69, 0x70, 0x54, 0x6f, 0x42, 0x6f, 0x75,
	0x6e, 0x64, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x6e, 0x65, 0x65, 0x64, 0x73, 0x5f, 0x66, 0x75, 0x6c,
	0x6c, 0x5f, 0x72, 0x65, 0x70, 0x61, 0x69, 0x6e, 0x74, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x10, 0x6e, 0x65, 0x65, 0x64, 0x73, 0x46, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x70, 0x61, 0x69, 0x6e,
	0x74, 0x12, 0x3c, 0x0a, 0x1a, 0x6e, 0x65, 0x65, 0x64, 0x73, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x1d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x6e, 0x65, 0x65, 0x64, 0x73, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x30, 0x0a, 0x14, 0x63, 0x6c, 0x69, 0x70, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x63,
	0x6c, 0x69, 0x70, 0x41, 0x66, 0x74, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72,
	0x6d, 0x12, 0x24, 0x0a, 0x0e, 0x77, 0x61, 0x6e, 0x74, 0x73, 0x5f, 0x68, 0x69, 0x74, 0x5f, 0x74,
	0x65, 0x73, 0x74, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x77, 0x61, 0x6e, 0x74, 0x73,
	0x48, 0x69, 0x74, 0x54, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x17, 0x77, 0x61, 0x6e, 0x74, 0x73,
	0x5f, 0x68, 0x69, 0x74, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72,
	0x65, 0x6e, 0x18, 0x20, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x77, 0x61, 0x6e, 0x74, 0x73, 0x48,
	0x69, 0x74, 0x54, 0x65, 0x73, 0x74, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12, 0x24,
	0x0a, 0x0e, 0x6d, 0x69, 0x78, 0x5f, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x21, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6d, 0x69, 0x78, 0x42, 0x6c, 0x65, 0x6e, 0x64,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x5f, 0x62,
	0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x22, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x10, 0x6f, 0x70, 0x61, 0x71, 0x75, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x63, 0x68,
	0x69, 0x6c, 0x64, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x41, 0x0a,
	0x1d, 0x77, 0x61, 0x6e, 0x74, 0x73, 0x5f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x5f, 0x71, 0x75, 0x61, 0x64, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x24,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x1a, 0x77, 0x61, 0x6e, 0x74, 0x73, 0x53, 0x63, 0x72, 0x65, 0x65,
	0x6e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x51, 0x75, 0x61, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x30, 0x0a, 0x0b, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x6c, 0x75, 0x72, 0x18,
	0x25, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x4d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x6c, 0x75, 0x72, 0x52, 0x0a, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6c,
	0x75, 0x72, 0x12, 0x43, 0x0a, 0x1e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74,
	0x75, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x34, 0x0a, 0x13, 0x43, 0x4d, 0x73, 0x67, 0x50,
	0x6f, 0x70, 0x41, 0x41, 0x6e, 0x64, 0x54, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x49, 0x64, 0x22, 0x1a, 0x0a,
	0x18, 0x43, 0x4d, 0x73, 0x67, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x69, 0x6e, 0x74, 0x42,
	0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x43, 0x4d, 0x73,
	0x67, 0x45, 0x6e, 0x64, 0x50, 0x61, 0x69, 0x6e, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x43, 0x4d, 0x73, 0x67, 0x42, 0x65, 0x67, 0x69, 0x6e,
	0x50, 0x61, 0x69, 0x6e, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x43, 0x4d, 0x73,
	0x67, 0x45, 0x6e, 0x64, 0x50, 0x61, 0x69, 0x6e, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x22, 0xdc, 0x01,
	0x0a, 0x12, 0x43, 0x4d, 0x73, 0x67, 0x44, 0x72, 0x61, 0x77, 0x46, 0x69, 0x6c, 0x6c, 0x65, 0x64,
	0x52, 0x65, 0x63, 0x74, 0x12, 0x25, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x5f, 0x6c, 0x65, 0x66, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x4c, 0x65, 0x66, 0x74, 0x12, 0x2d, 0x0a, 0x0c, 0x62,
	0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0b, 0x62,
	0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x52, 0x69, 0x67, 0x68, 0x74, 0x12, 0x4c, 0x0a, 0x15, 0x66, 0x69,
	0x6c, 0x6c, 0x5f, 0x62, 0x72, 0x75, 0x73, 0x68, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x46, 0x69, 0x6c, 0x6c, 0x42, 0x72, 0x75, 0x73, 0x68, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x13, 0x66, 0x69, 0x6c, 0x6c, 0x42, 0x72, 0x75, 0x73, 0x68, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x69, 0x61, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c,
	0x61, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x69, 0x6e, 0x67, 0x22, 0xe4, 0x01, 0x0a,
	0x14, 0x43, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x6c, 0x65,
	0x64, 0x52, 0x65, 0x63, 0x74, 0x12, 0x25, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x5f, 0x6c, 0x65, 0x66,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x4c, 0x65, 0x66, 0x74, 0x12, 0x2d, 0x0a, 0x0c,
	0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0b,
	0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x52, 0x69, 0x67, 0x68, 0x74, 0x12, 0x52, 0x0a, 0x15, 0x66,
	0x69, 0x6c, 0x6c, 0x5f, 0x62, 0x72, 0x75, 0x73, 0x68, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x43, 0x4d, 0x73,
	0x67, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x6c, 0x42, 0x72, 0x75, 0x73, 0x68,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x13, 0x66, 0x69, 0x6c, 0x6c,
	0x42, 0x72, 0x75, 0x73, 0x68, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x22, 0x0a, 0x0c, 0x61, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x69, 0x6e, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x61, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x61, 0x73,
	0x69, 0x6e, 0x67, 0x22, 0x93, 0x03, 0x0a, 0x14, 0x43, 0x4d, 0x73, 0x67, 0x44, 0x72, 0x61, 0x77,
	0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x64, 0x52, 0x65, 0x63, 0x74, 0x12, 0x25, 0x0a, 0x08,
	0x74, 0x6f, 0x70, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x4c,
	0x65, 0x66, 0x74, 0x12, 0x2d, 0x0a, 0x0c, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x5f, 0x72, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0b, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x52, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x49,
	0x64, 0x12, 0x34, 0x0a, 0x10, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x74, 0x6f, 0x70,
	0x5f, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x4d,
	0x73, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0e, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65,
	0x54, 0x6f, 0x70, 0x4c, 0x65, 0x66, 0x74, 0x12, 0x3c, 0x0a, 0x14, 0x74, 0x65, 0x78, 0x74, 0x75,
	0x72, 0x65, 0x5f, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x12, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d,
	0x52, 0x69, 0x67, 0x68, 0x74, 0x12, 0x28, 0x0a, 0x0e, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x30,
	0x52, 0x0d, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12,
	0x31, 0x0a, 0x13, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52,
	0x11, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x35, 0x0a, 0x0f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x6f, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x4d,
	0x73, 0x67, 0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x52, 0x0e, 0x74, 0x65, 0x78, 0x74, 0x75,
	0x72, 0x65, 0x4f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x22, 0x8a, 0x03, 0x0a, 0x16, 0x43, 0x4d,
	0x73, 0x67, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x64,
	0x52, 0x65, 0x63, 0x74, 0x12, 0x25, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x5f, 0x6c, 0x65, 0x66, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x4c, 0x65, 0x66, 0x74, 0x12, 0x2d, 0x0a, 0x0c, 0x62,
	0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0b, 0x62,
	0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x52, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65,
	0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x10, 0x74, 0x65, 0x78,
	0x74, 0x75, 0x72, 0x65, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52,
	0x0e, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x54, 0x6f, 0x70, 0x4c, 0x65, 0x66, 0x74, 0x12,
	0x3c, 0x0a, 0x14, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x62, 0x6f, 0x74, 0x74, 0x6f,
	0x6d, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x43, 0x4d, 0x73, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x12, 0x74, 0x65, 0x78, 0x74, 0x75,
	0x72, 0x65, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x52, 0x69, 0x67, 0x68, 0x74, 0x12, 0x28, 0x0a,
	0x0e, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x30, 0x52, 0x0d, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72,
	0x65, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x31, 0x0a, 0x13, 0x74, 0x65, 0x78, 0x74, 0x75,
	0x72, 0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0d, 0x3a, 0x01, 0x30, 0x52, 0x11, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65,
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x0f, 0x74, 0x65,
	0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x6f, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x02, 0x3a, 0x01, 0x31, 0x52, 0x0e, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x4f,
	0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x22, 0x5a, 0x0a, 0x0f, 0x43, 0x4d, 0x73, 0x67, 0x4c, 0x6f,
	0x63, 0x6b, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x78,
	0x74, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74,
	0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0e, 0x74, 0x65, 0x78, 0x74,
	0x75, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x3a, 0x01, 0x30, 0x52, 0x0d, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x22, 0x44, 0x0a, 0x14, 0x43, 0x4d, 0x73, 0x67, 0x54, 0x65, 0x78, 0x74, 0x49, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x8a, 0x03, 0x0a, 0x0e, 0x43, 0x4d, 0x73,
	0x67, 0x54, 0x65, 0x78, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66,
	0x6f, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x6f, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x6f, 0x6e, 0x74,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x66, 0x6f, 0x6e,
	0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x23, 0x0a, 0x0b, 0x66, 0x6f, 0x6e, 0x74, 0x5f, 0x77, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x0a,
	0x66, 0x6f, 0x6e, 0x74, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x21, 0x0a, 0x0a, 0x66, 0x6f,
	0x6e, 0x74, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x02,
	0x2d, 0x31, 0x52, 0x09, 0x66, 0x6f, 0x6e, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73,
	0x74, 0x72, 0x69, 0x6b, 0x65, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x73, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67,
	0x68, 0x12, 0x4c, 0x0a, 0x15, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x62, 0x72, 0x75, 0x73, 0x68, 0x5f,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x46, 0x69, 0x6c, 0x6c, 0x42, 0x72, 0x75, 0x73, 0x68,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x13, 0x66, 0x69, 0x6c, 0x6c,
	0x42, 0x72, 0x75, 0x73, 0x68, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x28, 0x0a, 0x0e, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x69, 0x6e,
	0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x30, 0x52, 0x0d, 0x6c, 0x65, 0x74, 0x74,
	0x65, 0x72, 0x53, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x12, 0x3a, 0x0a, 0x0d, 0x69, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x54, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0c, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x7c, 0x0a, 0x13, 0x43, 0x4d, 0x73, 0x67, 0x54, 0x65, 0x78,
	0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1b, 0x0a,
	0x09, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x27, 0x0a, 0x06, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x4d, 0x73,
	0x67, 0x54, 0x65, 0x78, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x06, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x22, 0x96, 0x03, 0x0a, 0x14, 0x43, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x66, 0x6f, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x6f, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x6f, 0x6e,
	0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x66, 0x6f,
	0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x23, 0x0a, 0x0b, 0x66, 0x6f, 0x6e, 0x74, 0x5f, 0x77,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x02, 0x2d, 0x31, 0x52,
	0x0a, 0x66, 0x6f, 0x6e, 0x74, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x21, 0x0a, 0x0a, 0x66,
	0x6f, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x3a,
	0x02, 0x2d, 0x31, 0x52, 0x09, 0x66, 0x6f, 0x6e, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x73, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x73, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x74, 0x68, 0x72, 0x6f, 0x75,
	0x67, 0x68, 0x12, 0x52, 0x0a, 0x15, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x62, 0x72, 0x75, 0x73, 0x68,
	0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x46, 0x69,
	0x6c, 0x6c, 0x42, 0x72, 0x75, 0x73, 0x68, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x13, 0x66, 0x69, 0x6c, 0x6c, 0x42, 0x72, 0x75, 0x73, 0x68, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0e, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72,
	0x5f, 0x73, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01,
	0x30, 0x52, 0x0d, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x53, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67,
	0x12, 0x3a, 0x0a, 0x0d, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x54, 0x65,
	0x78, 0x74, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0c,
	0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x88, 0x01, 0x0a,
	0x19, 0x43, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1b, 0x0a, 0x09, 0x65,
	0x6e, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x65, 0x6e, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x2d, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x52,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52,
	0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0xb4, 0x03, 0x0a, 0x12, 0x43, 0x4d, 0x73, 0x67,
	0x44, 0x72, 0x61, 0x77, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x19,
	0x0a, 0x08, 0x72, 0x61, 0x77, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x72, 0x61, 0x77, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x78,
	0x74, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74,
	0x65, 0x78, 0x74, 0x43, 0x68, 0x61, 0x72, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x65, 0x78, 0x74,
	0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x74, 0x65, 0x78, 0x74, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x36, 0x0a,
	0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x54, 0x65, 0x78, 0x74,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x6c,
	0x69, 0x67, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x41,
	0x6c, 0x69, 0x67, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6c, 0x69, 0x6e, 0x65, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x25, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x5f, 0x6c, 0x65, 0x66,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x4c, 0x65, 0x66, 0x74, 0x12, 0x2d, 0x0a, 0x0c,
	0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0b,
	0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x52, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x77,
	0x72, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x77,
	0x72, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6c, 0x6c, 0x69, 0x70,
	0x73, 0x69, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x65, 0x6c, 0x6c, 0x69, 0x70,
	0x73, 0x69, 0x73, 0x12, 0x39, 0x0a, 0x0d, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x43, 0x4d, 0x73,
	0x67, 0x54, 0x65, 0x78, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x52, 0x0c, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x22, 0xf5,
	0x03, 0x0a, 0x14, 0x43, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x54, 0x65, 0x78,
	0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x61, 0x77, 0x5f, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x72, 0x61, 0x77, 0x54, 0x65,
	0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x73,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x43, 0x68, 0x61, 0x72,
	0x73, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69,
	0x6e, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x65, 0x78, 0x74, 0x45, 0x6e,
	0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x3c, 0x0a, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x43, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x6c, 0x69,
	0x67, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x41, 0x6c,
	0x69, 0x67, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6c, 0x69, 0x6e, 0x65, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x25, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x5f, 0x6c, 0x65, 0x66, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x4c, 0x65, 0x66, 0x74, 0x12, 0x2d, 0x0a, 0x0c, 0x62,
	0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0b, 0x62,
	0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x52, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x72,
	0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x77, 0x72,
	0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6c, 0x6c, 0x69, 0x70, 0x73,
	0x69, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x65, 0x6c, 0x6c, 0x69, 0x70, 0x73,
	0x69, 0x73, 0x12, 0x3f, 0x0a, 0x0d, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x0c, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x73, 0x12, 0x31, 0x0a, 0x0b, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x73, 0x68, 0x61, 0x64,
	0x6f, 0x77, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x43, 0x54, 0x65, 0x78, 0x74,
	0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x74, 0x65, 0x78, 0x74,
	0x53, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x22, 0xc1, 0x02, 0x0a, 0x19, 0x43, 0x4d, 0x73, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x43, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x5f, 0x6f, 0x62, 0x6a, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x63, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x4f, 0x62, 0x6a, 0x12, 0x25, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x5f, 0x6c,
	0x65, 0x66, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x4d, 0x73, 0x67,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x4c, 0x65, 0x66, 0x74, 0x12, 0x2d,
	0x0a, 0x0c, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x0b, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x52, 0x69, 0x67, 0x68, 0x74, 0x12, 0x34, 0x0a,
	0x10, 0x74, 0x6f, 0x70, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e,
	0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x0e, 0x74, 0x6f, 0x70, 0x4c, 0x65, 0x66, 0x74, 0x50, 0x61, 0x64, 0x64,
	0x69, 0x6e, 0x67, 0x12, 0x3c, 0x0a, 0x14, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x5f, 0x72, 0x69,
	0x67, 0x68, 0x74, 0x5f, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x12, 0x62,
	0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x52, 0x69, 0x67, 0x68, 0x74, 0x50, 0x61, 0x64, 0x64, 0x69, 0x6e,
	0x67, 0x12, 0x37, 0x0a, 0x18, 0x6e, 0x65, 0x65, 0x64, 0x73, 0x5f, 0x72, 0x65, 0x64, 0x72, 0x61,
	0x77, 0x5f, 0x65, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x15, 0x6e, 0x65, 0x65, 0x64, 0x73, 0x52, 0x65, 0x64, 0x72, 0x61, 0x77,
	0x45, 0x76, 0x65, 0x72, 0x79, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x42, 0x3a, 0x42, 0x13, 0x52, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x48, 0x01, 0x50, 0x01, 0x5a, 0x1c, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x2f, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x2f, 0x72, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x65, 0x72, 0x80, 0x01, 0x00,
}

var (
	file_renderer_rendermessages_proto_rawDescOnce sync.Once
	file_renderer_rendermessages_proto_rawDescData = file_renderer_rendermessages_proto_rawDesc
)

func file_renderer_rendermessages_proto_rawDescGZIP() []byte {
	file_renderer_rendermessages_proto_rawDescOnce.Do(func() {
		file_renderer_rendermessages_proto_rawDescData = protoimpl.X.CompressGZIP(file_renderer_rendermessages_proto_rawDescData)
	})
	return file_renderer_rendermessages_proto_rawDescData
}

var file_renderer_rendermessages_proto_msgTypes = make([]protoimpl.MessageInfo, 100)
var file_renderer_rendermessages_proto_goTypes = []interface{}{
	(*CMsgBeginFrame)(nil),                                      // 0: CMsgBeginFrame
	(*CMsgEndFrame)(nil),                                        // 1: CMsgEndFrame
	(*CMsgClearBackbuffer)(nil),                                 // 2: CMsgClearBackbuffer
	(*CMsgDeleteTexture)(nil),                                   // 3: CMsgDeleteTexture
	(*CMsgDeletePanel)(nil),                                     // 4: CMsgDeletePanel
	(*CMsgDeleteParticleSystem)(nil),                            // 5: CMsgDeleteParticleSystem
	(*CMsgPoint)(nil),                                           // 6: CMsgPoint
	(*CMsgMatrix4X4)(nil),                                       // 7: CMsgMatrix4x4
	(*CRadiusData)(nil),                                         // 8: CRadiusData
	(*CBorderData)(nil),                                         // 9: CBorderData
	(*CBoxShadowData)(nil),                                      // 10: CBoxShadowData
	(*CTextShadowData)(nil),                                     // 11: CTextShadowData
	(*CRadialClipData)(nil),                                     // 12: CRadialClipData
	(*CMsgClipData)(nil),                                        // 13: CMsgClipData
	(*CMsgPushCompositingLayer)(nil),                            // 14: CMsgPushCompositingLayer
	(*CMsgPopCompositingLayer)(nil),                             // 15: CMsgPopCompositingLayer
	(*CMsgFreeCompositingLayer)(nil),                            // 16: CMsgFreeCompositingLayer
	(*CMsgTransitionData)(nil),                                  // 17: CMsgTransitionData
	(*CMsgAnimationData)(nil),                                   // 18: CMsgAnimationData
	(*CMsgAnimationFrameData)(nil),                              // 19: CMsgAnimationFrameData
	(*CMsgPointWithTransition)(nil),                             // 20: CMsgPointWithTransition
	(*CMsgColor)(nil),                                           // 21: CMsgColor
	(*CMsgColorStop)(nil),                                       // 22: CMsgColorStop
	(*CMsgLinearGradient)(nil),                                  // 23: CMsgLinearGradient
	(*CMsgRadialGradient)(nil),                                  // 24: CMsgRadialGradient
	(*CMsgParticle)(nil),                                        // 25: CMsgParticle
	(*CMsgParticleSystem)(nil),                                  // 26: CMsgParticleSystem
	(*CMsgFillBrush)(nil),                                       // 27: CMsgFillBrush
	(*CMsgFillBrushCollection)(nil),                             // 28: CMsgFillBrushCollection
	(*CMsgRenderFillBrushCollection)(nil),                       // 29: CMsgRenderFillBrushCollection
	(*CMsgPanelPosition)(nil),                                   // 30: CMsgPanelPosition
	(*CMsgOpacity)(nil),                                         // 31: CMsgOpacity
	(*CMsgRotate2D)(nil),                                        // 32: CMsgRotate2D
	(*CMsgOpacityMaskData)(nil),                                 // 33: CMsgOpacityMaskData
	(*CMsgOpacityMask)(nil),                                     // 34: CMsgOpacityMask
	(*CMsgHueShift)(nil),                                        // 35: CMsgHueShift
	(*CMsgSaturation)(nil),                                      // 36: CMsgSaturation
	(*CMsgBrightness)(nil),                                      // 37: CMsgBrightness
	(*CMsgContrast)(nil),                                        // 38: CMsgContrast
	(*CMsgGaussianValues)(nil),                                  // 39: CMsgGaussianValues
	(*CMsgGaussianBlur)(nil),                                    // 40: CMsgGaussianBlur
	(*CMsgMotionBlurValues)(nil),                                // 41: CMsgMotionBlurValues
	(*CMsgMotionBlur)(nil),                                      // 42: CMsgMotionBlur
	(*CMsg3DTransformPerspective)(nil),                          // 43: CMsg3DTransformPerspective
	(*CMsg3DTransformPerspectiveOrigin)(nil),                    // 44: CMsg3DTransformPerspectiveOrigin
	(*CMsgTransformOriginData)(nil),                             // 45: CMsgTransformOriginData
	(*CMsg3DTransformOrigin)(nil),                               // 46: CMsg3DTransformOrigin
	(*CMsg3DTransformMatrix)(nil),                               // 47: CMsg3DTransformMatrix
	(*CMsgBorderRadius)(nil),                                    // 48: CMsgBorderRadius
	(*CMsgBorder)(nil),                                          // 49: CMsgBorder
	(*CMsgBoxShadow)(nil),                                       // 50: CMsgBoxShadow
	(*CMsgTextShadow)(nil),                                      // 51: CMsgTextShadow
	(*CMsgClip)(nil),                                            // 52: CMsgClip
	(*CMsgPushClipLayer)(nil),                                   // 53: CMsgPushClipLayer
	(*CMsgPopClipLayer)(nil),                                    // 54: CMsgPopClipLayer
	(*CMsgPushPanelContextInLayer)(nil),                         // 55: CMsgPushPanelContextInLayer
	(*CMsgPopPanelContextInLayer)(nil),                          // 56: CMsgPopPanelContextInLayer
	(*CMsgPushAAndTContext)(nil),                                // 57: CMsgPushAAndTContext
	(*CMsgPopAAndTContext)(nil),                                 // 58: CMsgPopAAndTContext
	(*CMsgBeginPaintBackground)(nil),                            // 59: CMsgBeginPaintBackground
	(*CMsgEndPaintBackground)(nil),                              // 60: CMsgEndPaintBackground
	(*CMsgBeginPaintLast)(nil),                                  // 61: CMsgBeginPaintLast
	(*CMsgEndPaintLast)(nil),                                    // 62: CMsgEndPaintLast
	(*CMsgDrawFilledRect)(nil),                                  // 63: CMsgDrawFilledRect
	(*CMsgRenderFilledRect)(nil),                                // 64: CMsgRenderFilledRect
	(*CMsgDrawTexturedRect)(nil),                                // 65: CMsgDrawTexturedRect
	(*CMsgRenderTexturedRect)(nil),                              // 66: CMsgRenderTexturedRect
	(*CMsgLockTexture)(nil),                                     // 67: CMsgLockTexture
	(*CMsgTextInlineObject)(nil),                                // 68: CMsgTextInlineObject
	(*CMsgTextFormat)(nil),                                      // 69: CMsgTextFormat
	(*CMsgTextRangeFormat)(nil),                                 // 70: CMsgTextRangeFormat
	(*CMsgRenderTextFormat)(nil),                                // 71: CMsgRenderTextFormat
	(*CMsgRenderTextRangeFormat)(nil),                           // 72: CMsgRenderTextRangeFormat
	(*CMsgDrawTextRegion)(nil),                                  // 73: CMsgDrawTextRegion
	(*CMsgRenderTextRegion)(nil),                                // 74: CMsgRenderTextRegion
	(*CMsgRequestRenderCallback)(nil),                           // 75: CMsgRequestRenderCallback
	(*CRadiusData_CCornerRadius)(nil),                           // 76: CRadiusData.CCornerRadius
	(*CBorderData_CBorderSide)(nil),                             // 77: CBorderData.CBorderSide
	(*CMsgPointWithTransition_AnimationFrameData)(nil),          // 78: CMsgPointWithTransition.AnimationFrameData
	(*CMsgColor_AnimationFrameData)(nil),                        // 79: CMsgColor.AnimationFrameData
	(*CMsgFillBrushCollection_AnimationFrameData)(nil),          // 80: CMsgFillBrushCollection.AnimationFrameData
	(*CMsgPanelPosition_AnimationFrameData)(nil),                // 81: CMsgPanelPosition.AnimationFrameData
	(*CMsgOpacity_AnimationFrameData)(nil),                      // 82: CMsgOpacity.AnimationFrameData
	(*CMsgRotate2D_AnimationFrameData)(nil),                     // 83: CMsgRotate2D.AnimationFrameData
	(*CMsgOpacityMask_AnimationFrameData)(nil),                  // 84: CMsgOpacityMask.AnimationFrameData
	(*CMsgHueShift_AnimationFrameData)(nil),                     // 85: CMsgHueShift.AnimationFrameData
	(*CMsgSaturation_AnimationFrameData)(nil),                   // 86: CMsgSaturation.AnimationFrameData
	(*CMsgBrightness_AnimationFrameData)(nil),                   // 87: CMsgBrightness.AnimationFrameData
	(*CMsgContrast_AnimationFrameData)(nil),                     // 88: CMsgContrast.AnimationFrameData
	(*CMsgGaussianBlur_AnimationFrameData)(nil),                 // 89: CMsgGaussianBlur.AnimationFrameData
	(*CMsgMotionBlur_AnimationFrameData)(nil),                   // 90: CMsgMotionBlur.AnimationFrameData
	(*CMsg3DTransformPerspective_AnimationFrameData)(nil),       // 91: CMsg3DTransformPerspective.AnimationFrameData
	(*CMsg3DTransformPerspectiveOrigin_AnimationFrameData)(nil), // 92: CMsg3DTransformPerspectiveOrigin.AnimationFrameData
	(*CMsg3DTransformOrigin_AnimationFrameData)(nil),            // 93: CMsg3DTransformOrigin.AnimationFrameData
	(*CMsg3DTransformMatrix_AnimationFrameData)(nil),            // 94: CMsg3DTransformMatrix.AnimationFrameData
	(*CMsgBorderRadius_AnimationFrameData)(nil),                 // 95: CMsgBorderRadius.AnimationFrameData
	(*CMsgBorder_AnimationFrameData)(nil),                       // 96: CMsgBorder.AnimationFrameData
	(*CMsgBoxShadow_AnimationFrameData)(nil),                    // 97: CMsgBoxShadow.AnimationFrameData
	(*CMsgTextShadow_AnimationFrameData)(nil),                   // 98: CMsgTextShadow.AnimationFrameData
	(*CMsgClip_AnimationFrameData)(nil),                         // 99: CMsgClip.AnimationFrameData
}
var file_renderer_rendermessages_proto_depIdxs = []int32{
	76,  // 0: CRadiusData.top_left:type_name -> CRadiusData.CCornerRadius
	76,  // 1: CRadiusData.top_right:type_name -> CRadiusData.CCornerRadius
	76,  // 2: CRadiusData.bottom_right:type_name -> CRadiusData.CCornerRadius
	76,  // 3: CRadiusData.bottom_left:type_name -> CRadiusData.CCornerRadius
	77,  // 4: CBorderData.top:type_name -> CBorderData.CBorderSide
	77,  // 5: CBorderData.right:type_name -> CBorderData.CBorderSide
	77,  // 6: CBorderData.bottom:type_name -> CBorderData.CBorderSide
	77,  // 7: CBorderData.left:type_name -> CBorderData.CBorderSide
	12,  // 8: CMsgClipData.radial_clip:type_name -> CRadialClipData
	9,   // 9: CMsgPushCompositingLayer.border:type_name -> CBorderData
	8,   // 10: CMsgPushCompositingLayer.border_radius:type_name -> CRadiusData
	10,  // 11: CMsgPushCompositingLayer.box_shadow:type_name -> CBoxShadowData
	11,  // 12: CMsgPushCompositingLayer.text_shadow:type_name -> CTextShadowData
	12,  // 13: CMsgPushCompositingLayer.radial_clip:type_name -> CRadialClipData
	19,  // 14: CMsgAnimationData.frames:type_name -> CMsgAnimationFrameData
	6,   // 15: CMsgPointWithTransition.base:type_name -> CMsgPoint
	6,   // 16: CMsgPointWithTransition.transition:type_name -> CMsgPoint
	17,  // 17: CMsgPointWithTransition.transition_data:type_name -> CMsgTransitionData
	18,  // 18: CMsgPointWithTransition.animations:type_name -> CMsgAnimationData
	17,  // 19: CMsgColor.transition_data:type_name -> CMsgTransitionData
	18,  // 20: CMsgColor.animations:type_name -> CMsgAnimationData
	6,   // 21: CMsgLinearGradient.start_position:type_name -> CMsgPoint
	6,   // 22: CMsgLinearGradient.end_position:type_name -> CMsgPoint
	22,  // 23: CMsgLinearGradient.color_stop:type_name -> CMsgColorStop
	6,   // 24: CMsgRadialGradient.center_position:type_name -> CMsgPoint
	6,   // 25: CMsgRadialGradient.offset_distance:type_name -> CMsgPoint
	6,   // 26: CMsgRadialGradient.radii:type_name -> CMsgPoint
	22,  // 27: CMsgRadialGradient.color_stop:type_name -> CMsgColorStop
	6,   // 28: CMsgParticle.particle_position:type_name -> CMsgPoint
	6,   // 29: CMsgParticleSystem.base_position:type_name -> CMsgPoint
	6,   // 30: CMsgParticleSystem.base_position_variance:type_name -> CMsgPoint
	6,   // 31: CMsgParticleSystem.particle_initial_velocity:type_name -> CMsgPoint
	6,   // 32: CMsgParticleSystem.particle_initial_velocity_variance:type_name -> CMsgPoint
	6,   // 33: CMsgParticleSystem.gravity_acceleration:type_name -> CMsgPoint
	6,   // 34: CMsgParticleSystem.gravity_acceleration_particle_variance:type_name -> CMsgPoint
	6,   // 35: CMsgParticleSystem.particle_velocity_min:type_name -> CMsgPoint
	6,   // 36: CMsgParticleSystem.particle_velocity_max:type_name -> CMsgPoint
	25,  // 37: CMsgParticleSystem.particles:type_name -> CMsgParticle
	23,  // 38: CMsgFillBrush.linear_gradient:type_name -> CMsgLinearGradient
	24,  // 39: CMsgFillBrush.radial_gradient:type_name -> CMsgRadialGradient
	26,  // 40: CMsgFillBrush.particle_system:type_name -> CMsgParticleSystem
	27,  // 41: CMsgFillBrushCollection.base:type_name -> CMsgFillBrush
	27,  // 42: CMsgFillBrushCollection.transition:type_name -> CMsgFillBrush
	17,  // 43: CMsgFillBrushCollection.transition_data:type_name -> CMsgTransitionData
	18,  // 44: CMsgFillBrushCollection.animations:type_name -> CMsgAnimationData
	27,  // 45: CMsgRenderFillBrushCollection.fill_brush:type_name -> CMsgFillBrush
	6,   // 46: CMsgPanelPosition.base:type_name -> CMsgPoint
	6,   // 47: CMsgPanelPosition.transition:type_name -> CMsgPoint
	17,  // 48: CMsgPanelPosition.transition_data:type_name -> CMsgTransitionData
	18,  // 49: CMsgPanelPosition.animations:type_name -> CMsgAnimationData
	6,   // 50: CMsgPanelPosition.scroll_offset:type_name -> CMsgPoint
	6,   // 51: CMsgPanelPosition.scroll_offset_target:type_name -> CMsgPoint
	17,  // 52: CMsgPanelPosition.scroll_transition_x:type_name -> CMsgTransitionData
	17,  // 53: CMsgPanelPosition.scroll_transition_y:type_name -> CMsgTransitionData
	17,  // 54: CMsgOpacity.transition_data:type_name -> CMsgTransitionData
	18,  // 55: CMsgOpacity.animations:type_name -> CMsgAnimationData
	17,  // 56: CMsgRotate2D.transition_data:type_name -> CMsgTransitionData
	18,  // 57: CMsgRotate2D.animations:type_name -> CMsgAnimationData
	33,  // 58: CMsgOpacityMask.base:type_name -> CMsgOpacityMaskData
	33,  // 59: CMsgOpacityMask.transition:type_name -> CMsgOpacityMaskData
	17,  // 60: CMsgOpacityMask.transition_data:type_name -> CMsgTransitionData
	18,  // 61: CMsgOpacityMask.animations:type_name -> CMsgAnimationData
	17,  // 62: CMsgHueShift.transition_data:type_name -> CMsgTransitionData
	18,  // 63: CMsgHueShift.animations:type_name -> CMsgAnimationData
	17,  // 64: CMsgSaturation.transition_data:type_name -> CMsgTransitionData
	18,  // 65: CMsgSaturation.animations:type_name -> CMsgAnimationData
	17,  // 66: CMsgBrightness.transition_data:type_name -> CMsgTransitionData
	18,  // 67: CMsgBrightness.animations:type_name -> CMsgAnimationData
	17,  // 68: CMsgContrast.transition_data:type_name -> CMsgTransitionData
	18,  // 69: CMsgContrast.animations:type_name -> CMsgAnimationData
	39,  // 70: CMsgGaussianBlur.base:type_name -> CMsgGaussianValues
	39,  // 71: CMsgGaussianBlur.transition:type_name -> CMsgGaussianValues
	17,  // 72: CMsgGaussianBlur.transition_data:type_name -> CMsgTransitionData
	18,  // 73: CMsgGaussianBlur.animations:type_name -> CMsgAnimationData
	41,  // 74: CMsgMotionBlur.base:type_name -> CMsgMotionBlurValues
	41,  // 75: CMsgMotionBlur.transition:type_name -> CMsgMotionBlurValues
	17,  // 76: CMsgMotionBlur.transition_data:type_name -> CMsgTransitionData
	18,  // 77: CMsgMotionBlur.animations:type_name -> CMsgAnimationData
	17,  // 78: CMsg3DTransformPerspective.transition_data:type_name -> CMsgTransitionData
	18,  // 79: CMsg3DTransformPerspective.animations:type_name -> CMsgAnimationData
	6,   // 80: CMsg3DTransformPerspectiveOrigin.base:type_name -> CMsgPoint
	6,   // 81: CMsg3DTransformPerspectiveOrigin.transition:type_name -> CMsgPoint
	17,  // 82: CMsg3DTransformPerspectiveOrigin.transition_data:type_name -> CMsgTransitionData
	18,  // 83: CMsg3DTransformPerspectiveOrigin.animations:type_name -> CMsgAnimationData
	45,  // 84: CMsg3DTransformOrigin.base:type_name -> CMsgTransformOriginData
	45,  // 85: CMsg3DTransformOrigin.transition:type_name -> CMsgTransformOriginData
	17,  // 86: CMsg3DTransformOrigin.transition_data:type_name -> CMsgTransitionData
	18,  // 87: CMsg3DTransformOrigin.animations:type_name -> CMsgAnimationData
	7,   // 88: CMsg3DTransformMatrix.base:type_name -> CMsgMatrix4x4
	17,  // 89: CMsg3DTransformMatrix.transition_data:type_name -> CMsgTransitionData
	7,   // 90: CMsg3DTransformMatrix.transition:type_name -> CMsgMatrix4x4
	18,  // 91: CMsg3DTransformMatrix.animations:type_name -> CMsgAnimationData
	8,   // 92: CMsgBorderRadius.base:type_name -> CRadiusData
	17,  // 93: CMsgBorderRadius.transition_data:type_name -> CMsgTransitionData
	8,   // 94: CMsgBorderRadius.transition:type_name -> CRadiusData
	18,  // 95: CMsgBorderRadius.animations:type_name -> CMsgAnimationData
	9,   // 96: CMsgBorder.base:type_name -> CBorderData
	17,  // 97: CMsgBorder.transition_data:type_name -> CMsgTransitionData
	9,   // 98: CMsgBorder.transition:type_name -> CBorderData
	18,  // 99: CMsgBorder.animations:type_name -> CMsgAnimationData
	10,  // 100: CMsgBoxShadow.base:type_name -> CBoxShadowData
	17,  // 101: CMsgBoxShadow.transition_data:type_name -> CMsgTransitionData
	10,  // 102: CMsgBoxShadow.transition:type_name -> CBoxShadowData
	18,  // 103: CMsgBoxShadow.animations:type_name -> CMsgAnimationData
	11,  // 104: CMsgTextShadow.base:type_name -> CTextShadowData
	17,  // 105: CMsgTextShadow.transition_data:type_name -> CMsgTransitionData
	11,  // 106: CMsgTextShadow.transition:type_name -> CTextShadowData
	18,  // 107: CMsgTextShadow.animations:type_name -> CMsgAnimationData
	13,  // 108: CMsgClip.base:type_name -> CMsgClipData
	17,  // 109: CMsgClip.transition_data:type_name -> CMsgTransitionData
	13,  // 110: CMsgClip.transition:type_name -> CMsgClipData
	18,  // 111: CMsgClip.animations:type_name -> CMsgAnimationData
	6,   // 112: CMsgPushClipLayer.top_left:type_name -> CMsgPoint
	6,   // 113: CMsgPushClipLayer.bottom_right:type_name -> CMsgPoint
	8,   // 114: CMsgPushClipLayer.border_radius:type_name -> CRadiusData
	10,  // 115: CMsgPushPanelContextInLayer.box_shadow:type_name -> CBoxShadowData
	9,   // 116: CMsgPushPanelContextInLayer.border:type_name -> CBorderData
	30,  // 117: CMsgPushAAndTContext.panel_position:type_name -> CMsgPanelPosition
	47,  // 118: CMsgPushAAndTContext.transform_matrix:type_name -> CMsg3DTransformMatrix
	46,  // 119: CMsgPushAAndTContext.transform_origin:type_name -> CMsg3DTransformOrigin
	43,  // 120: CMsgPushAAndTContext.transform_perspective:type_name -> CMsg3DTransformPerspective
	44,  // 121: CMsgPushAAndTContext.transform_perspective_origin:type_name -> CMsg3DTransformPerspectiveOrigin
	31,  // 122: CMsgPushAAndTContext.opacity:type_name -> CMsgOpacity
	21,  // 123: CMsgPushAAndTContext.wash_color:type_name -> CMsgColor
	35,  // 124: CMsgPushAAndTContext.hue_shift:type_name -> CMsgHueShift
	36,  // 125: CMsgPushAAndTContext.saturation:type_name -> CMsgSaturation
	37,  // 126: CMsgPushAAndTContext.brightness:type_name -> CMsgBrightness
	38,  // 127: CMsgPushAAndTContext.contrast:type_name -> CMsgContrast
	34,  // 128: CMsgPushAAndTContext.opacity_mask:type_name -> CMsgOpacityMask
	48,  // 129: CMsgPushAAndTContext.border_radius:type_name -> CMsgBorderRadius
	40,  // 130: CMsgPushAAndTContext.gaussian_blur:type_name -> CMsgGaussianBlur
	49,  // 131: CMsgPushAAndTContext.border:type_name -> CMsgBorder
	50,  // 132: CMsgPushAAndTContext.box_shadow:type_name -> CMsgBoxShadow
	20,  // 133: CMsgPushAAndTContext.scale_2d_centered:type_name -> CMsgPointWithTransition
	32,  // 134: CMsgPushAAndTContext.rotate_2d_centered:type_name -> CMsgRotate2D
	51,  // 135: CMsgPushAAndTContext.text_shadow:type_name -> CMsgTextShadow
	52,  // 136: CMsgPushAAndTContext.clip:type_name -> CMsgClip
	42,  // 137: CMsgPushAAndTContext.motion_blur:type_name -> CMsgMotionBlur
	6,   // 138: CMsgDrawFilledRect.top_left:type_name -> CMsgPoint
	6,   // 139: CMsgDrawFilledRect.bottom_right:type_name -> CMsgPoint
	28,  // 140: CMsgDrawFilledRect.fill_brush_collection:type_name -> CMsgFillBrushCollection
	6,   // 141: CMsgRenderFilledRect.top_left:type_name -> CMsgPoint
	6,   // 142: CMsgRenderFilledRect.bottom_right:type_name -> CMsgPoint
	29,  // 143: CMsgRenderFilledRect.fill_brush_collection:type_name -> CMsgRenderFillBrushCollection
	6,   // 144: CMsgDrawTexturedRect.top_left:type_name -> CMsgPoint
	6,   // 145: CMsgDrawTexturedRect.bottom_right:type_name -> CMsgPoint
	6,   // 146: CMsgDrawTexturedRect.texture_top_left:type_name -> CMsgPoint
	6,   // 147: CMsgDrawTexturedRect.texture_bottom_right:type_name -> CMsgPoint
	31,  // 148: CMsgDrawTexturedRect.texture_opacity:type_name -> CMsgOpacity
	6,   // 149: CMsgRenderTexturedRect.top_left:type_name -> CMsgPoint
	6,   // 150: CMsgRenderTexturedRect.bottom_right:type_name -> CMsgPoint
	6,   // 151: CMsgRenderTexturedRect.texture_top_left:type_name -> CMsgPoint
	6,   // 152: CMsgRenderTexturedRect.texture_bottom_right:type_name -> CMsgPoint
	28,  // 153: CMsgTextFormat.fill_brush_collection:type_name -> CMsgFillBrushCollection
	68,  // 154: CMsgTextFormat.inline_object:type_name -> CMsgTextInlineObject
	69,  // 155: CMsgTextRangeFormat.format:type_name -> CMsgTextFormat
	29,  // 156: CMsgRenderTextFormat.fill_brush_collection:type_name -> CMsgRenderFillBrushCollection
	68,  // 157: CMsgRenderTextFormat.inline_object:type_name -> CMsgTextInlineObject
	71,  // 158: CMsgRenderTextRangeFormat.format:type_name -> CMsgRenderTextFormat
	69,  // 159: CMsgDrawTextRegion.default_format:type_name -> CMsgTextFormat
	6,   // 160: CMsgDrawTextRegion.top_left:type_name -> CMsgPoint
	6,   // 161: CMsgDrawTextRegion.bottom_right:type_name -> CMsgPoint
	70,  // 162: CMsgDrawTextRegion.range_formats:type_name -> CMsgTextRangeFormat
	71,  // 163: CMsgRenderTextRegion.default_format:type_name -> CMsgRenderTextFormat
	6,   // 164: CMsgRenderTextRegion.top_left:type_name -> CMsgPoint
	6,   // 165: CMsgRenderTextRegion.bottom_right:type_name -> CMsgPoint
	72,  // 166: CMsgRenderTextRegion.range_formats:type_name -> CMsgRenderTextRangeFormat
	11,  // 167: CMsgRenderTextRegion.text_shadow:type_name -> CTextShadowData
	6,   // 168: CMsgRequestRenderCallback.top_left:type_name -> CMsgPoint
	6,   // 169: CMsgRequestRenderCallback.bottom_right:type_name -> CMsgPoint
	6,   // 170: CMsgRequestRenderCallback.top_left_padding:type_name -> CMsgPoint
	6,   // 171: CMsgRequestRenderCallback.bottom_right_padding:type_name -> CMsgPoint
	6,   // 172: CMsgPointWithTransition.AnimationFrameData.data:type_name -> CMsgPoint
	27,  // 173: CMsgFillBrushCollection.AnimationFrameData.data:type_name -> CMsgFillBrush
	6,   // 174: CMsgPanelPosition.AnimationFrameData.data:type_name -> CMsgPoint
	33,  // 175: CMsgOpacityMask.AnimationFrameData.data:type_name -> CMsgOpacityMaskData
	39,  // 176: CMsgGaussianBlur.AnimationFrameData.data:type_name -> CMsgGaussianValues
	41,  // 177: CMsgMotionBlur.AnimationFrameData.data:type_name -> CMsgMotionBlurValues
	6,   // 178: CMsg3DTransformPerspectiveOrigin.AnimationFrameData.data:type_name -> CMsgPoint
	45,  // 179: CMsg3DTransformOrigin.AnimationFrameData.data:type_name -> CMsgTransformOriginData
	7,   // 180: CMsg3DTransformMatrix.AnimationFrameData.data:type_name -> CMsgMatrix4x4
	8,   // 181: CMsgBorderRadius.AnimationFrameData.data:type_name -> CRadiusData
	9,   // 182: CMsgBorder.AnimationFrameData.data:type_name -> CBorderData
	10,  // 183: CMsgBoxShadow.AnimationFrameData.data:type_name -> CBoxShadowData
	11,  // 184: CMsgTextShadow.AnimationFrameData.data:type_name -> CTextShadowData
	13,  // 185: CMsgClip.AnimationFrameData.data:type_name -> CMsgClipData
	19,  // 186: CMsgPointWithTransition.animation_frame_data:extendee -> CMsgAnimationFrameData
	19,  // 187: CMsgColor.animation_frame_data:extendee -> CMsgAnimationFrameData
	19,  // 188: CMsgFillBrushCollection.animation_frame_data:extendee -> CMsgAnimationFrameData
	19,  // 189: CMsgPanelPosition.animation_frame_data:extendee -> CMsgAnimationFrameData
	19,  // 190: CMsgOpacity.animation_frame_data:extendee -> CMsgAnimationFrameData
	19,  // 191: CMsgRotate2D.animation_frame_data:extendee -> CMsgAnimationFrameData
	19,  // 192: CMsgOpacityMask.animation_frame_data:extendee -> CMsgAnimationFrameData
	19,  // 193: CMsgHueShift.animation_frame_data:extendee -> CMsgAnimationFrameData
	19,  // 194: CMsgSaturation.animation_frame_data:extendee -> CMsgAnimationFrameData
	19,  // 195: CMsgBrightness.animation_frame_data:extendee -> CMsgAnimationFrameData
	19,  // 196: CMsgContrast.animation_frame_data:extendee -> CMsgAnimationFrameData
	19,  // 197: CMsgGaussianBlur.animation_frame_data:extendee -> CMsgAnimationFrameData
	19,  // 198: CMsgMotionBlur.animation_frame_data:extendee -> CMsgAnimationFrameData
	19,  // 199: CMsg3DTransformPerspective.animation_frame_data:extendee -> CMsgAnimationFrameData
	19,  // 200: CMsg3DTransformPerspectiveOrigin.animation_frame_data:extendee -> CMsgAnimationFrameData
	19,  // 201: CMsg3DTransformOrigin.animation_frame_data:extendee -> CMsgAnimationFrameData
	19,  // 202: CMsg3DTransformMatrix.animation_frame_data:extendee -> CMsgAnimationFrameData
	19,  // 203: CMsgBorderRadius.animation_frame_data:extendee -> CMsgAnimationFrameData
	19,  // 204: CMsgBorder.animation_frame_data:extendee -> CMsgAnimationFrameData
	19,  // 205: CMsgBoxShadow.animation_frame_data:extendee -> CMsgAnimationFrameData
	19,  // 206: CMsgTextShadow.animation_frame_data:extendee -> CMsgAnimationFrameData
	19,  // 207: CMsgClip.animation_frame_data:extendee -> CMsgAnimationFrameData
	78,  // 208: CMsgPointWithTransition.animation_frame_data:type_name -> CMsgPointWithTransition.AnimationFrameData
	79,  // 209: CMsgColor.animation_frame_data:type_name -> CMsgColor.AnimationFrameData
	80,  // 210: CMsgFillBrushCollection.animation_frame_data:type_name -> CMsgFillBrushCollection.AnimationFrameData
	81,  // 211: CMsgPanelPosition.animation_frame_data:type_name -> CMsgPanelPosition.AnimationFrameData
	82,  // 212: CMsgOpacity.animation_frame_data:type_name -> CMsgOpacity.AnimationFrameData
	83,  // 213: CMsgRotate2D.animation_frame_data:type_name -> CMsgRotate2D.AnimationFrameData
	84,  // 214: CMsgOpacityMask.animation_frame_data:type_name -> CMsgOpacityMask.AnimationFrameData
	85,  // 215: CMsgHueShift.animation_frame_data:type_name -> CMsgHueShift.AnimationFrameData
	86,  // 216: CMsgSaturation.animation_frame_data:type_name -> CMsgSaturation.AnimationFrameData
	87,  // 217: CMsgBrightness.animation_frame_data:type_name -> CMsgBrightness.AnimationFrameData
	88,  // 218: CMsgContrast.animation_frame_data:type_name -> CMsgContrast.AnimationFrameData
	89,  // 219: CMsgGaussianBlur.animation_frame_data:type_name -> CMsgGaussianBlur.AnimationFrameData
	90,  // 220: CMsgMotionBlur.animation_frame_data:type_name -> CMsgMotionBlur.AnimationFrameData
	91,  // 221: CMsg3DTransformPerspective.animation_frame_data:type_name -> CMsg3DTransformPerspective.AnimationFrameData
	92,  // 222: CMsg3DTransformPerspectiveOrigin.animation_frame_data:type_name -> CMsg3DTransformPerspectiveOrigin.AnimationFrameData
	93,  // 223: CMsg3DTransformOrigin.animation_frame_data:type_name -> CMsg3DTransformOrigin.AnimationFrameData
	94,  // 224: CMsg3DTransformMatrix.animation_frame_data:type_name -> CMsg3DTransformMatrix.AnimationFrameData
	95,  // 225: CMsgBorderRadius.animation_frame_data:type_name -> CMsgBorderRadius.AnimationFrameData
	96,  // 226: CMsgBorder.animation_frame_data:type_name -> CMsgBorder.AnimationFrameData
	97,  // 227: CMsgBoxShadow.animation_frame_data:type_name -> CMsgBoxShadow.AnimationFrameData
	98,  // 228: CMsgTextShadow.animation_frame_data:type_name -> CMsgTextShadow.AnimationFrameData
	99,  // 229: CMsgClip.animation_frame_data:type_name -> CMsgClip.AnimationFrameData
	230, // [230:230] is the sub-list for method output_type
	230, // [230:230] is the sub-list for method input_type
	208, // [208:230] is the sub-list for extension type_name
	186, // [186:208] is the sub-list for extension extendee
	0,   // [0:186] is the sub-list for field type_name
}

func init() { file_renderer_rendermessages_proto_init() }
func file_renderer_rendermessages_proto_init() {
	if File_renderer_rendermessages_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_renderer_rendermessages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgBeginFrame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgEndFrame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClearBackbuffer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgDeleteTexture); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgDeletePanel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgDeleteParticleSystem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgMatrix4X4); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CRadiusData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CBorderData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CBoxShadowData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CTextShadowData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CRadialClipData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClipData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgPushCompositingLayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgPopCompositingLayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgFreeCompositingLayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgTransitionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgAnimationData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgAnimationFrameData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			case 3:
				return &v.extensionFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgPointWithTransition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgColor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgColorStop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgLinearGradient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgRadialGradient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgParticle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgParticleSystem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgFillBrush); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgFillBrushCollection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgRenderFillBrushCollection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgPanelPosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgOpacity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgRotate2D); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgOpacityMaskData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgOpacityMask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgHueShift); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSaturation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgBrightness); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgContrast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGaussianValues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGaussianBlur); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgMotionBlurValues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgMotionBlur); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsg3DTransformPerspective); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsg3DTransformPerspectiveOrigin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgTransformOriginData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsg3DTransformOrigin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsg3DTransformMatrix); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgBorderRadius); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgBorder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgBoxShadow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgTextShadow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgPushClipLayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgPopClipLayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgPushPanelContextInLayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgPopPanelContextInLayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgPushAAndTContext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgPopAAndTContext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgBeginPaintBackground); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgEndPaintBackground); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgBeginPaintLast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgEndPaintLast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgDrawFilledRect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgRenderFilledRect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgDrawTexturedRect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgRenderTexturedRect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgLockTexture); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgTextInlineObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgTextFormat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgTextRangeFormat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgRenderTextFormat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgRenderTextRangeFormat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgDrawTextRegion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgRenderTextRegion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgRequestRenderCallback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CRadiusData_CCornerRadius); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CBorderData_CBorderSide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgPointWithTransition_AnimationFrameData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgColor_AnimationFrameData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgFillBrushCollection_AnimationFrameData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgPanelPosition_AnimationFrameData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgOpacity_AnimationFrameData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgRotate2D_AnimationFrameData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgOpacityMask_AnimationFrameData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgHueShift_AnimationFrameData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgSaturation_AnimationFrameData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgBrightness_AnimationFrameData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgContrast_AnimationFrameData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgGaussianBlur_AnimationFrameData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgMotionBlur_AnimationFrameData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsg3DTransformPerspective_AnimationFrameData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsg3DTransformPerspectiveOrigin_AnimationFrameData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsg3DTransformOrigin_AnimationFrameData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsg3DTransformMatrix_AnimationFrameData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgBorderRadius_AnimationFrameData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgBorder_AnimationFrameData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgBoxShadow_AnimationFrameData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgTextShadow_AnimationFrameData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_renderer_rendermessages_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CMsgClip_AnimationFrameData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_renderer_rendermessages_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   100,
			NumExtensions: 22,
			NumServices:   0,
		},
		GoTypes:           file_renderer_rendermessages_proto_goTypes,
		DependencyIndexes: file_renderer_rendermessages_proto_depIdxs,
		MessageInfos:      file_renderer_rendermessages_proto_msgTypes,
		ExtensionInfos:    file_renderer_rendermessages_proto_extTypes,
	}.Build()
	File_renderer_rendermessages_proto = out.File
	file_renderer_rendermessages_proto_rawDesc = nil
	file_renderer_rendermessages_proto_goTypes = nil
	file_renderer_rendermessages_proto_depIdxs = nil
}
