// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: steammessages_shader.steamclient.proto

package steam

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CShader_GetShaderReportingCadence_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CShader_GetShaderReportingCadence_Request) Reset() {
	*x = CShader_GetShaderReportingCadence_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_shader_steamclient_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CShader_GetShaderReportingCadence_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CShader_GetShaderReportingCadence_Request) ProtoMessage() {}

func (x *CShader_GetShaderReportingCadence_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_shader_steamclient_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CShader_GetShaderReportingCadence_Request.ProtoReflect.Descriptor instead.
func (*CShader_GetShaderReportingCadence_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_shader_steamclient_proto_rawDescGZIP(), []int{0}
}

type CShader_GetShaderReportingCadence_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RereportTimeThreshold *uint64 `protobuf:"varint,1,opt,name=rereport_time_threshold,json=rereportTimeThreshold" json:"rereport_time_threshold,omitempty"`
	PercentToRereport     *uint32 `protobuf:"varint,2,opt,name=percent_to_rereport,json=percentToRereport" json:"percent_to_rereport,omitempty"`
}

func (x *CShader_GetShaderReportingCadence_Response) Reset() {
	*x = CShader_GetShaderReportingCadence_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_shader_steamclient_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CShader_GetShaderReportingCadence_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CShader_GetShaderReportingCadence_Response) ProtoMessage() {}

func (x *CShader_GetShaderReportingCadence_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_shader_steamclient_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CShader_GetShaderReportingCadence_Response.ProtoReflect.Descriptor instead.
func (*CShader_GetShaderReportingCadence_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_shader_steamclient_proto_rawDescGZIP(), []int{1}
}

func (x *CShader_GetShaderReportingCadence_Response) GetRereportTimeThreshold() uint64 {
	if x != nil && x.RereportTimeThreshold != nil {
		return *x.RereportTimeThreshold
	}
	return 0
}

func (x *CShader_GetShaderReportingCadence_Response) GetPercentToRereport() uint32 {
	if x != nil && x.PercentToRereport != nil {
		return *x.PercentToRereport
	}
	return 0
}

type CShader_RegisterShader_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid      *uint32                                  `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	GpuDesc    *string                                  `protobuf:"bytes,2,opt,name=gpu_desc,json=gpuDesc" json:"gpu_desc,omitempty"`
	DriverDesc *string                                  `protobuf:"bytes,3,opt,name=driver_desc,json=driverDesc" json:"driver_desc,omitempty"`
	Shaders    []*CShader_RegisterShader_Request_Shader `protobuf:"bytes,4,rep,name=shaders" json:"shaders,omitempty"`
}

func (x *CShader_RegisterShader_Request) Reset() {
	*x = CShader_RegisterShader_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_shader_steamclient_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CShader_RegisterShader_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CShader_RegisterShader_Request) ProtoMessage() {}

func (x *CShader_RegisterShader_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_shader_steamclient_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CShader_RegisterShader_Request.ProtoReflect.Descriptor instead.
func (*CShader_RegisterShader_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_shader_steamclient_proto_rawDescGZIP(), []int{2}
}

func (x *CShader_RegisterShader_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CShader_RegisterShader_Request) GetGpuDesc() string {
	if x != nil && x.GpuDesc != nil {
		return *x.GpuDesc
	}
	return ""
}

func (x *CShader_RegisterShader_Request) GetDriverDesc() string {
	if x != nil && x.DriverDesc != nil {
		return *x.DriverDesc
	}
	return ""
}

func (x *CShader_RegisterShader_Request) GetShaders() []*CShader_RegisterShader_Request_Shader {
	if x != nil {
		return x.Shaders
	}
	return nil
}

type CShader_RegisterShader_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestedCodeids []uint32 `protobuf:"varint,1,rep,name=requested_codeids,json=requestedCodeids" json:"requested_codeids,omitempty"`
}

func (x *CShader_RegisterShader_Response) Reset() {
	*x = CShader_RegisterShader_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_shader_steamclient_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CShader_RegisterShader_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CShader_RegisterShader_Response) ProtoMessage() {}

func (x *CShader_RegisterShader_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_shader_steamclient_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CShader_RegisterShader_Response.ProtoReflect.Descriptor instead.
func (*CShader_RegisterShader_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_shader_steamclient_proto_rawDescGZIP(), []int{3}
}

func (x *CShader_RegisterShader_Response) GetRequestedCodeids() []uint32 {
	if x != nil {
		return x.RequestedCodeids
	}
	return nil
}

type CShader_SendShader_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid   *uint32                                  `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Shaders []*CShader_SendShader_Request_ShaderCode `protobuf:"bytes,2,rep,name=shaders" json:"shaders,omitempty"`
}

func (x *CShader_SendShader_Request) Reset() {
	*x = CShader_SendShader_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_shader_steamclient_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CShader_SendShader_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CShader_SendShader_Request) ProtoMessage() {}

func (x *CShader_SendShader_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_shader_steamclient_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CShader_SendShader_Request.ProtoReflect.Descriptor instead.
func (*CShader_SendShader_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_shader_steamclient_proto_rawDescGZIP(), []int{4}
}

func (x *CShader_SendShader_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CShader_SendShader_Request) GetShaders() []*CShader_SendShader_Request_ShaderCode {
	if x != nil {
		return x.Shaders
	}
	return nil
}

type CShader_SendShader_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CShader_SendShader_Response) Reset() {
	*x = CShader_SendShader_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_shader_steamclient_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CShader_SendShader_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CShader_SendShader_Response) ProtoMessage() {}

func (x *CShader_SendShader_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_shader_steamclient_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CShader_SendShader_Response.ProtoReflect.Descriptor instead.
func (*CShader_SendShader_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_shader_steamclient_proto_rawDescGZIP(), []int{5}
}

type CShader_GetBucketManifest_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid      *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	GpuDesc    *string `protobuf:"bytes,2,opt,name=gpu_desc,json=gpuDesc" json:"gpu_desc,omitempty"`
	DriverDesc *string `protobuf:"bytes,3,opt,name=driver_desc,json=driverDesc" json:"driver_desc,omitempty"`
}

func (x *CShader_GetBucketManifest_Request) Reset() {
	*x = CShader_GetBucketManifest_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_shader_steamclient_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CShader_GetBucketManifest_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CShader_GetBucketManifest_Request) ProtoMessage() {}

func (x *CShader_GetBucketManifest_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_shader_steamclient_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CShader_GetBucketManifest_Request.ProtoReflect.Descriptor instead.
func (*CShader_GetBucketManifest_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_shader_steamclient_proto_rawDescGZIP(), []int{6}
}

func (x *CShader_GetBucketManifest_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CShader_GetBucketManifest_Request) GetGpuDesc() string {
	if x != nil && x.GpuDesc != nil {
		return *x.GpuDesc
	}
	return ""
}

func (x *CShader_GetBucketManifest_Request) GetDriverDesc() string {
	if x != nil && x.DriverDesc != nil {
		return *x.DriverDesc
	}
	return ""
}

type CShader_GetBucketManifest_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Manifestid *uint64 `protobuf:"varint,1,opt,name=manifestid" json:"manifestid,omitempty"`
	Depotsize  *uint64 `protobuf:"varint,2,opt,name=depotsize" json:"depotsize,omitempty"`
	Bucketid   *uint64 `protobuf:"varint,3,opt,name=bucketid" json:"bucketid,omitempty"`
}

func (x *CShader_GetBucketManifest_Response) Reset() {
	*x = CShader_GetBucketManifest_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_shader_steamclient_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CShader_GetBucketManifest_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CShader_GetBucketManifest_Response) ProtoMessage() {}

func (x *CShader_GetBucketManifest_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_shader_steamclient_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CShader_GetBucketManifest_Response.ProtoReflect.Descriptor instead.
func (*CShader_GetBucketManifest_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_shader_steamclient_proto_rawDescGZIP(), []int{7}
}

func (x *CShader_GetBucketManifest_Response) GetManifestid() uint64 {
	if x != nil && x.Manifestid != nil {
		return *x.Manifestid
	}
	return 0
}

func (x *CShader_GetBucketManifest_Response) GetDepotsize() uint64 {
	if x != nil && x.Depotsize != nil {
		return *x.Depotsize
	}
	return 0
}

func (x *CShader_GetBucketManifest_Response) GetBucketid() uint64 {
	if x != nil && x.Bucketid != nil {
		return *x.Bucketid
	}
	return 0
}

type CShader_GetStaleBucket_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GpuDesc    *string `protobuf:"bytes,1,opt,name=gpu_desc,json=gpuDesc" json:"gpu_desc,omitempty"`
	DriverDesc *string `protobuf:"bytes,2,opt,name=driver_desc,json=driverDesc" json:"driver_desc,omitempty"`
}

func (x *CShader_GetStaleBucket_Request) Reset() {
	*x = CShader_GetStaleBucket_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_shader_steamclient_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CShader_GetStaleBucket_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CShader_GetStaleBucket_Request) ProtoMessage() {}

func (x *CShader_GetStaleBucket_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_shader_steamclient_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CShader_GetStaleBucket_Request.ProtoReflect.Descriptor instead.
func (*CShader_GetStaleBucket_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_shader_steamclient_proto_rawDescGZIP(), []int{8}
}

func (x *CShader_GetStaleBucket_Request) GetGpuDesc() string {
	if x != nil && x.GpuDesc != nil {
		return *x.GpuDesc
	}
	return ""
}

func (x *CShader_GetStaleBucket_Request) GetDriverDesc() string {
	if x != nil && x.DriverDesc != nil {
		return *x.DriverDesc
	}
	return ""
}

type CShader_GetStaleBucket_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucketid           *uint64 `protobuf:"varint,1,opt,name=bucketid" json:"bucketid,omitempty"`
	Appid              *uint32 `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
	Manifestid         *uint64 `protobuf:"varint,3,opt,name=manifestid" json:"manifestid,omitempty"`
	GpuDesc            *string `protobuf:"bytes,4,opt,name=gpu_desc,json=gpuDesc" json:"gpu_desc,omitempty"`
	DriverDesc         *string `protobuf:"bytes,5,opt,name=driver_desc,json=driverDesc" json:"driver_desc,omitempty"`
	DepotEncryptionKey []byte  `protobuf:"bytes,6,opt,name=depot_encryption_key,json=depotEncryptionKey" json:"depot_encryption_key,omitempty"`
}

func (x *CShader_GetStaleBucket_Response) Reset() {
	*x = CShader_GetStaleBucket_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_shader_steamclient_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CShader_GetStaleBucket_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CShader_GetStaleBucket_Response) ProtoMessage() {}

func (x *CShader_GetStaleBucket_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_shader_steamclient_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CShader_GetStaleBucket_Response.ProtoReflect.Descriptor instead.
func (*CShader_GetStaleBucket_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_shader_steamclient_proto_rawDescGZIP(), []int{9}
}

func (x *CShader_GetStaleBucket_Response) GetBucketid() uint64 {
	if x != nil && x.Bucketid != nil {
		return *x.Bucketid
	}
	return 0
}

func (x *CShader_GetStaleBucket_Response) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CShader_GetStaleBucket_Response) GetManifestid() uint64 {
	if x != nil && x.Manifestid != nil {
		return *x.Manifestid
	}
	return 0
}

func (x *CShader_GetStaleBucket_Response) GetGpuDesc() string {
	if x != nil && x.GpuDesc != nil {
		return *x.GpuDesc
	}
	return ""
}

func (x *CShader_GetStaleBucket_Response) GetDriverDesc() string {
	if x != nil && x.DriverDesc != nil {
		return *x.DriverDesc
	}
	return ""
}

func (x *CShader_GetStaleBucket_Response) GetDepotEncryptionKey() []byte {
	if x != nil {
		return x.DepotEncryptionKey
	}
	return nil
}

type CShader_ReportExternalBuild_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid            *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	GpuDesc          *string `protobuf:"bytes,2,opt,name=gpu_desc,json=gpuDesc" json:"gpu_desc,omitempty"`
	DriverDesc       *string `protobuf:"bytes,3,opt,name=driver_desc,json=driverDesc" json:"driver_desc,omitempty"`
	Manifestid       *uint64 `protobuf:"varint,4,opt,name=manifestid" json:"manifestid,omitempty"`
	SourceGpuDesc    *string `protobuf:"bytes,5,opt,name=source_gpu_desc,json=sourceGpuDesc" json:"source_gpu_desc,omitempty"`
	SourceDriverDesc *string `protobuf:"bytes,6,opt,name=source_driver_desc,json=sourceDriverDesc" json:"source_driver_desc,omitempty"`
	Depotsize        *uint64 `protobuf:"varint,7,opt,name=depotsize" json:"depotsize,omitempty"`
}

func (x *CShader_ReportExternalBuild_Request) Reset() {
	*x = CShader_ReportExternalBuild_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_shader_steamclient_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CShader_ReportExternalBuild_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CShader_ReportExternalBuild_Request) ProtoMessage() {}

func (x *CShader_ReportExternalBuild_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_shader_steamclient_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CShader_ReportExternalBuild_Request.ProtoReflect.Descriptor instead.
func (*CShader_ReportExternalBuild_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_shader_steamclient_proto_rawDescGZIP(), []int{10}
}

func (x *CShader_ReportExternalBuild_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CShader_ReportExternalBuild_Request) GetGpuDesc() string {
	if x != nil && x.GpuDesc != nil {
		return *x.GpuDesc
	}
	return ""
}

func (x *CShader_ReportExternalBuild_Request) GetDriverDesc() string {
	if x != nil && x.DriverDesc != nil {
		return *x.DriverDesc
	}
	return ""
}

func (x *CShader_ReportExternalBuild_Request) GetManifestid() uint64 {
	if x != nil && x.Manifestid != nil {
		return *x.Manifestid
	}
	return 0
}

func (x *CShader_ReportExternalBuild_Request) GetSourceGpuDesc() string {
	if x != nil && x.SourceGpuDesc != nil {
		return *x.SourceGpuDesc
	}
	return ""
}

func (x *CShader_ReportExternalBuild_Request) GetSourceDriverDesc() string {
	if x != nil && x.SourceDriverDesc != nil {
		return *x.SourceDriverDesc
	}
	return ""
}

func (x *CShader_ReportExternalBuild_Request) GetDepotsize() uint64 {
	if x != nil && x.Depotsize != nil {
		return *x.Depotsize
	}
	return 0
}

type CShader_ReportExternalBuild_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CShader_ReportExternalBuild_Response) Reset() {
	*x = CShader_ReportExternalBuild_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_shader_steamclient_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CShader_ReportExternalBuild_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CShader_ReportExternalBuild_Response) ProtoMessage() {}

func (x *CShader_ReportExternalBuild_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_shader_steamclient_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CShader_ReportExternalBuild_Response.ProtoReflect.Descriptor instead.
func (*CShader_ReportExternalBuild_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_shader_steamclient_proto_rawDescGZIP(), []int{11}
}

type CShader_RegisterShader_Request_Shader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CacheKeySha   []byte `protobuf:"bytes,1,opt,name=cache_key_sha,json=cacheKeySha" json:"cache_key_sha,omitempty"`
	ShaderCodeSha []byte `protobuf:"bytes,2,opt,name=shader_code_sha,json=shaderCodeSha" json:"shader_code_sha,omitempty"`
}

func (x *CShader_RegisterShader_Request_Shader) Reset() {
	*x = CShader_RegisterShader_Request_Shader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_shader_steamclient_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CShader_RegisterShader_Request_Shader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CShader_RegisterShader_Request_Shader) ProtoMessage() {}

func (x *CShader_RegisterShader_Request_Shader) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_shader_steamclient_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CShader_RegisterShader_Request_Shader.ProtoReflect.Descriptor instead.
func (*CShader_RegisterShader_Request_Shader) Descriptor() ([]byte, []int) {
	return file_steammessages_shader_steamclient_proto_rawDescGZIP(), []int{2, 0}
}

func (x *CShader_RegisterShader_Request_Shader) GetCacheKeySha() []byte {
	if x != nil {
		return x.CacheKeySha
	}
	return nil
}

func (x *CShader_RegisterShader_Request_Shader) GetShaderCodeSha() []byte {
	if x != nil {
		return x.ShaderCodeSha
	}
	return nil
}

type CShader_SendShader_Request_ShaderCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShaderCodeSha []byte `protobuf:"bytes,1,opt,name=shader_code_sha,json=shaderCodeSha" json:"shader_code_sha,omitempty"`
	ShaderCode    []byte `protobuf:"bytes,2,opt,name=shader_code,json=shaderCode" json:"shader_code,omitempty"`
}

func (x *CShader_SendShader_Request_ShaderCode) Reset() {
	*x = CShader_SendShader_Request_ShaderCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_shader_steamclient_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CShader_SendShader_Request_ShaderCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CShader_SendShader_Request_ShaderCode) ProtoMessage() {}

func (x *CShader_SendShader_Request_ShaderCode) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_shader_steamclient_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CShader_SendShader_Request_ShaderCode.ProtoReflect.Descriptor instead.
func (*CShader_SendShader_Request_ShaderCode) Descriptor() ([]byte, []int) {
	return file_steammessages_shader_steamclient_proto_rawDescGZIP(), []int{4, 0}
}

func (x *CShader_SendShader_Request_ShaderCode) GetShaderCodeSha() []byte {
	if x != nil {
		return x.ShaderCodeSha
	}
	return nil
}

func (x *CShader_SendShader_Request_ShaderCode) GetShaderCode() []byte {
	if x != nil {
		return x.ShaderCode
	}
	return nil
}

var File_steammessages_shader_steamclient_proto protoreflect.FileDescriptor

var file_steammessages_shader_steamclient_proto_rawDesc = []byte{
	0x0a, 0x26, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f,
	0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x2c, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x5f, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x73,
	0x74, 0x65, 0x61, 0x6d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x2b, 0x0a, 0x29, 0x43, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x47, 0x65, 0x74, 0x53,
	0x68, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x61,
	0x64, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x94, 0x01,
	0x0a, 0x2a, 0x43, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x64, 0x65,
	0x6e, 0x63, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x17,
	0x72, 0x65, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x68,
	0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x15, 0x72,
	0x65, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x54, 0x68, 0x72, 0x65, 0x73,
	0x68, 0x6f, 0x6c, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x6f, 0x5f, 0x72, 0x65, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x11, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x52, 0x65, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x22, 0x8a, 0x02, 0x0a, 0x1e, 0x43, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72,
	0x5f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x5f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x67, 0x70, 0x75, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x67, 0x70, 0x75, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x12, 0x40, 0x0a, 0x07, 0x73, 0x68, 0x61,
	0x64, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x43, 0x53, 0x68,
	0x61, 0x64, 0x65, 0x72, 0x5f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x68, 0x61,
	0x64, 0x65, 0x72, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x68, 0x61, 0x64,
	0x65, 0x72, 0x52, 0x07, 0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x73, 0x1a, 0x54, 0x0a, 0x06, 0x53,
	0x68, 0x61, 0x64, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x6b,
	0x65, 0x79, 0x5f, 0x73, 0x68, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x4b, 0x65, 0x79, 0x53, 0x68, 0x61, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x68, 0x61,
	0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0d, 0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x68,
	0x61, 0x22, 0x4e, 0x0a, 0x1f, 0x43, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x69, 0x64,
	0x73, 0x22, 0xcb, 0x01, 0x0a, 0x1a, 0x43, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x53, 0x65,
	0x6e, 0x64, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x40, 0x0a, 0x07, 0x73, 0x68, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x43, 0x53, 0x68, 0x61, 0x64, 0x65,
	0x72, 0x5f, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x07, 0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x73, 0x1a, 0x55, 0x0a, 0x0a, 0x53, 0x68, 0x61, 0x64,
	0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x68, 0x61, 0x64, 0x65, 0x72,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0d, 0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x68, 0x61, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0a, 0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22,
	0x1d, 0x0a, 0x1b, 0x43, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x53, 0x65, 0x6e, 0x64, 0x53,
	0x68, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x75,
	0x0a, 0x21, 0x43, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x47, 0x65, 0x74, 0x42, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x5f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x70, 0x75,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x70, 0x75,
	0x44, 0x65, 0x73, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x64,
	0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x44, 0x65, 0x73, 0x63, 0x22, 0x7e, 0x0a, 0x22, 0x43, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72,
	0x5f, 0x47, 0x65, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65,
	0x73, 0x74, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d,
	0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x64,
	0x65, 0x70, 0x6f, 0x74, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x64, 0x65, 0x70, 0x6f, 0x74, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x69, 0x64, 0x22, 0x5c, 0x0a, 0x1e, 0x43, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72,
	0x5f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x6c, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x70, 0x75, 0x5f, 0x64,
	0x65, 0x73, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x70, 0x75, 0x44, 0x65,
	0x73, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x44,
	0x65, 0x73, 0x63, 0x22, 0xe1, 0x01, 0x0a, 0x1f, 0x43, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x5f,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x6c, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x6e,
	0x69, 0x66, 0x65, 0x73, 0x74, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6d,
	0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x70, 0x75,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x70, 0x75,
	0x44, 0x65, 0x73, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x64,
	0x65, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x44, 0x65, 0x73, 0x63, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x5f, 0x65,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x12, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x22, 0x8b, 0x02, 0x0a, 0x23, 0x43, 0x53, 0x68, 0x61,
	0x64, 0x65, 0x72, 0x5f, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x70, 0x75, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x70, 0x75, 0x44, 0x65, 0x73, 0x63,
	0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x44, 0x65, 0x73,
	0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x69,
	0x64, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x67, 0x70, 0x75, 0x5f,
	0x64, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x47, 0x70, 0x75, 0x44, 0x65, 0x73, 0x63, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x70, 0x6f, 0x74,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x64, 0x65, 0x70, 0x6f,
	0x74, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x26, 0x0a, 0x24, 0x43, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72,
	0x5f, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xf9, 0x07,
	0x0a, 0x06, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x12, 0xbb, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74,
	0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x43,
	0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x2a, 0x2e, 0x43, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72,
	0x5f, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x69, 0x6e, 0x67, 0x43, 0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x43, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x47, 0x65, 0x74,
	0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x43,
	0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x45, 0x82, 0xb5, 0x18, 0x41, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x20, 0x61, 0x62, 0x6f, 0x75, 0x74, 0x20, 0x68, 0x6f, 0x77, 0x20, 0x6f, 0x66, 0x74, 0x65, 0x6e,
	0x20, 0x61, 0x20, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64,
	0x20, 0x72, 0x65, 0x2d, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x73, 0x68, 0x61, 0x64, 0x65,
	0x72, 0x20, 0x68, 0x69, 0x74, 0x73, 0x12, 0xbe, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x43, 0x53, 0x68, 0x61,
	0x64, 0x65, 0x72, 0x5f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x68, 0x61, 0x64,
	0x65, 0x72, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x43, 0x53, 0x68,
	0x61, 0x64, 0x65, 0x72, 0x5f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x68, 0x61,
	0x64, 0x65, 0x72, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x69, 0x82, 0xb5,
	0x18, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x6a, 0x75, 0x73, 0x74, 0x20, 0x66, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x20, 0x70, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x61,
	0x20, 0x67, 0x61, 0x6d, 0x65, 0x2c, 0x20, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x20,
	0x6e, 0x65, 0x77, 0x20, 0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x20, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x20, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x69, 0x73, 0x20,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x69, 0x6e, 0x67, 0x20, 0x75, 0x73, 0x20, 0x61, 0x62, 0x6f,
	0x75, 0x74, 0x20, 0x74, 0x68, 0x65, 0x6d, 0x12, 0x8f, 0x01, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64,
	0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x43, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72,
	0x5f, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x43, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x53, 0x65,
	0x6e, 0x64, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x46, 0x82, 0xb5, 0x18, 0x42, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x69, 0x73,
	0x20, 0x73, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x75, 0x73, 0x20, 0x61, 0x63, 0x74, 0x75,
	0x61, 0x6c, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x20, 0x73, 0x68, 0x61, 0x64,
	0x65, 0x72, 0x20, 0x63, 0x6f, 0x64, 0x65, 0x20, 0x74, 0x68, 0x61, 0x74, 0x20, 0x77, 0x65, 0x20,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12, 0xad, 0x01, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x12,
	0x22, 0x2e, 0x43, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x47, 0x65, 0x74, 0x42, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x5f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x43, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x47, 0x65,
	0x74, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x5f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4f, 0x82, 0xb5, 0x18, 0x4b, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x20, 0x77, 0x61, 0x6e, 0x74, 0x73, 0x20, 0x74, 0x6f, 0x20, 0x6b, 0x6e,
	0x6f, 0x77, 0x20, 0x74, 0x68, 0x65, 0x20, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x20,
	0x49, 0x44, 0x20, 0x74, 0x6f, 0x20, 0x66, 0x65, 0x74, 0x63, 0x68, 0x20, 0x28, 0x69, 0x66, 0x20,
	0x61, 0x6e, 0x79, 0x29, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x61, 0x20, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x27, 0x73, 0x20, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x12, 0x8e, 0x01, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x6c, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1f, 0x2e, 0x43,
	0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x6c, 0x65, 0x42,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e,
	0x43, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x6c, 0x65,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x39, 0x82, 0xb5, 0x18, 0x35, 0x4a, 0x6f, 0x62, 0x20, 0x74, 0x6f, 0x20, 0x67, 0x65, 0x74, 0x20,
	0x61, 0x20, 0x73, 0x74, 0x61, 0x6c, 0x65, 0x20, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x20, 0x67,
	0x69, 0x76, 0x65, 0x6e, 0x20, 0x61, 0x20, 0x67, 0x70, 0x75, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x64,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x20, 0x64, 0x65, 0x73, 0x63, 0x12, 0x88, 0x01, 0x0a, 0x13, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x12, 0x24, 0x2e, 0x43, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x43, 0x53, 0x68, 0x61, 0x64,
	0x65, 0x72, 0x5f, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x24, 0x82, 0xb5, 0x18, 0x20, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x20, 0x61, 0x6e, 0x20, 0x65,
	0x78, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x6c, 0x79, 0x20, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x20, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x1a, 0x12, 0x82, 0xb5, 0x18, 0x0e, 0x53, 0x68, 0x61, 0x64, 0x65,
	0x72, 0x20, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x42, 0x3f, 0x42, 0x23, 0x53, 0x74, 0x65,
	0x61, 0x6d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x53, 0x68, 0x61, 0x64, 0x65, 0x72,
	0x53, 0x74, 0x65, 0x61, 0x6d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x13, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x2f, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x80, 0x01, 0x01,
}

var (
	file_steammessages_shader_steamclient_proto_rawDescOnce sync.Once
	file_steammessages_shader_steamclient_proto_rawDescData = file_steammessages_shader_steamclient_proto_rawDesc
)

func file_steammessages_shader_steamclient_proto_rawDescGZIP() []byte {
	file_steammessages_shader_steamclient_proto_rawDescOnce.Do(func() {
		file_steammessages_shader_steamclient_proto_rawDescData = protoimpl.X.CompressGZIP(file_steammessages_shader_steamclient_proto_rawDescData)
	})
	return file_steammessages_shader_steamclient_proto_rawDescData
}

var file_steammessages_shader_steamclient_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_steammessages_shader_steamclient_proto_goTypes = []interface{}{
	(*CShader_GetShaderReportingCadence_Request)(nil),  // 0: CShader_GetShaderReportingCadence_Request
	(*CShader_GetShaderReportingCadence_Response)(nil), // 1: CShader_GetShaderReportingCadence_Response
	(*CShader_RegisterShader_Request)(nil),             // 2: CShader_RegisterShader_Request
	(*CShader_RegisterShader_Response)(nil),            // 3: CShader_RegisterShader_Response
	(*CShader_SendShader_Request)(nil),                 // 4: CShader_SendShader_Request
	(*CShader_SendShader_Response)(nil),                // 5: CShader_SendShader_Response
	(*CShader_GetBucketManifest_Request)(nil),          // 6: CShader_GetBucketManifest_Request
	(*CShader_GetBucketManifest_Response)(nil),         // 7: CShader_GetBucketManifest_Response
	(*CShader_GetStaleBucket_Request)(nil),             // 8: CShader_GetStaleBucket_Request
	(*CShader_GetStaleBucket_Response)(nil),            // 9: CShader_GetStaleBucket_Response
	(*CShader_ReportExternalBuild_Request)(nil),        // 10: CShader_ReportExternalBuild_Request
	(*CShader_ReportExternalBuild_Response)(nil),       // 11: CShader_ReportExternalBuild_Response
	(*CShader_RegisterShader_Request_Shader)(nil),      // 12: CShader_RegisterShader_Request.Shader
	(*CShader_SendShader_Request_ShaderCode)(nil),      // 13: CShader_SendShader_Request.ShaderCode
}
var file_steammessages_shader_steamclient_proto_depIdxs = []int32{
	12, // 0: CShader_RegisterShader_Request.shaders:type_name -> CShader_RegisterShader_Request.Shader
	13, // 1: CShader_SendShader_Request.shaders:type_name -> CShader_SendShader_Request.ShaderCode
	0,  // 2: Shader.GetShaderReportingCadence:input_type -> CShader_GetShaderReportingCadence_Request
	2,  // 3: Shader.RegisterShader:input_type -> CShader_RegisterShader_Request
	4,  // 4: Shader.SendShader:input_type -> CShader_SendShader_Request
	6,  // 5: Shader.GetBucketManifest:input_type -> CShader_GetBucketManifest_Request
	8,  // 6: Shader.GetStaleBucket:input_type -> CShader_GetStaleBucket_Request
	10, // 7: Shader.ReportExternalBuild:input_type -> CShader_ReportExternalBuild_Request
	1,  // 8: Shader.GetShaderReportingCadence:output_type -> CShader_GetShaderReportingCadence_Response
	3,  // 9: Shader.RegisterShader:output_type -> CShader_RegisterShader_Response
	5,  // 10: Shader.SendShader:output_type -> CShader_SendShader_Response
	7,  // 11: Shader.GetBucketManifest:output_type -> CShader_GetBucketManifest_Response
	9,  // 12: Shader.GetStaleBucket:output_type -> CShader_GetStaleBucket_Response
	11, // 13: Shader.ReportExternalBuild:output_type -> CShader_ReportExternalBuild_Response
	8,  // [8:14] is the sub-list for method output_type
	2,  // [2:8] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_steammessages_shader_steamclient_proto_init() }
func file_steammessages_shader_steamclient_proto_init() {
	if File_steammessages_shader_steamclient_proto != nil {
		return
	}
	file_steammessages_base_proto_init()
	file_steammessages_unified_base_steamclient_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_steammessages_shader_steamclient_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CShader_GetShaderReportingCadence_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_shader_steamclient_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CShader_GetShaderReportingCadence_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_shader_steamclient_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CShader_RegisterShader_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_shader_steamclient_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CShader_RegisterShader_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_shader_steamclient_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CShader_SendShader_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_shader_steamclient_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CShader_SendShader_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_shader_steamclient_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CShader_GetBucketManifest_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_shader_steamclient_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CShader_GetBucketManifest_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_shader_steamclient_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CShader_GetStaleBucket_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_shader_steamclient_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CShader_GetStaleBucket_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_shader_steamclient_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CShader_ReportExternalBuild_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_shader_steamclient_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CShader_ReportExternalBuild_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_shader_steamclient_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CShader_RegisterShader_Request_Shader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_shader_steamclient_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CShader_SendShader_Request_ShaderCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_steammessages_shader_steamclient_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_steammessages_shader_steamclient_proto_goTypes,
		DependencyIndexes: file_steammessages_shader_steamclient_proto_depIdxs,
		MessageInfos:      file_steammessages_shader_steamclient_proto_msgTypes,
	}.Build()
	File_steammessages_shader_steamclient_proto = out.File
	file_steammessages_shader_steamclient_proto_rawDesc = nil
	file_steammessages_shader_steamclient_proto_goTypes = nil
	file_steammessages_shader_steamclient_proto_depIdxs = nil
}
